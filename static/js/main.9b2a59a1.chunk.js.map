{"version":3,"sources":["actions/types.js","utils/axios.js","actions/userAction.js","pages/Login.js","components/Header.js","components/Footer.js","components/Menu.js","pages/Welcome.js","pages/Curriculum.js","pages/Status.js","pages/Notice.js","pages/QuestionList.js","pages/Question.js","pages/Userquestionlist.js","pages/Userquestion.js","pages/ProfessorAdd.js","pages/ProfessorModify.js","pages/Professor.js","pages/TimetableAdd.js","pages/TimetableModify.js","pages/Timetable.js","pages/Bestqa.js","pages/DataModifyList.js","pages/DataModify.js","pages/Fallbacklist.js","pages/Adminpage.js","hoc/auth.js","pages/MainPage.js","pages/Signup.js","App.js","serviceWorker.js","reducer/userReducer.js","reducer/index.js","index.js"],"names":["REGISTER_USER","LOGIN_USER","LOGOUT_USER","AUTH_USER","REGISTER_ERROR","AUTH_SUCCESS","AUTH_FAILED","axios","defaults","withCredentials","authUser","props","token","localStorage","getItem","header","headers","authorization","dispatch","get","widthCredentials","then","res","type","console","log","res2","setItem","data","result","department","user","role","catch","error","withReactContent","Swal","LoginForm","styled","div","Logo","Whitespace","Login","useState","_id","setId","_password","setPassword","useDispatch","style","marginBottom","name","className","onFinish","e","clear","dataToSubmit","uid","userid","payload","post","response","loginUser","password","status","accessToken","loginSuccess","history","push","fire","icon","title","text","message","showConfirmButton","width","timer","err","autoComplete","Item","rules","required","paddingBottom","prefix","UserOutlined","paddingRight","onChange","currentTarget","value","placeholder","LockOutlined","htmlType","backgroundColor","border","margin","to","Spacer","Positioner","Logout","oc","gray","GradientBorder","UserContainer","red","HeaderContents","withRouter","username","fontSize","letterSpacing","fontFamily","color","padding","marginRight","borderRadius","onClick","MenuContainer","MenuContent","MenuItem","Menu","useHistory","ScrollTop","window","scrollTo","top","behavior","textDecoration","NotificationOutlined","BulbOutlined","QuestionCircleOutlined","WarningOutlined","ClockCircleOutlined","BarsOutlined","CalendarOutlined","AuditOutlined","LayoutOutlined","MessageOutlined","openNotification","comment","notification","description","placement","duration","Welcome","Select","Option","Input","TextArea","deptname","Form","useForm","form","React","visible","setVisible","setData","confirmFunc","formData","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","isConfirmed","onFinishFunc","FormHandler","CancleModify","a","Object","entries","key","undefined","NaN","modifier","put","getData","onValuesChange","changedValue","allValue","useCallback","content","User","time","moment","updatedAt","format","setFieldsValue","useEffect","display","alignItems","flexDirection","background","justifyContent","onFieldsChange","theme","height","float","dangerouslySetInnerHTML","__html","Curriculum","link","getFieldValue","textAlign","src","label","readOnly","colon","wrapperCol","offset","CloudUploadOutlined","Status","isDisable","setDisable","position","phoneNumber","disabled","resize","Notice","category","QuestionList","setPage","page","count","pageSize","faqno","category1","category2","category3","question","questionAnswer","landingUrl","onDeleteFunc","delete","onChangeFunc","category4","category5","imageinfo","justify","flex","paddingLeft","fontWeight","onOk","onCancel","maskClosable","footer","initialvalues","map","i","span","ExclamationCircleOutlined","marginLeft","Question","parseInt","innerHeight","dataSize","setdataSize","helpvisible","setHelpVisible","dep","setDep","rows","centered","it","current","total","defaultPageSize","pagenum","idx","Number","Userquestionlist","Userquestion","ProfessorAdd","_data","classPosition","email","ProfessorModify","list","setlist","inputValue","setInputValue","nameCheck","setNameCheck","onSearchFunc","length","p_list","v","options","filterOption","input","option","indexOf","SearchOutlined","TabPane","Tabs","Professor","defaultActiveKey","tab","TimetableAdd","fileList","setFileList","classname","setClassname","meta","contents","handleUpload","FormData","append","initialValues","img","target","withIcon","withPreview","buttonText","pictureFiles","pictureDataURLs","imgExtension","maxFileSize","singleImage","TimetableModify","replace","maxWidth","cursor","Timetable","BestqaData","id","Bestqa","DataModifylist","DataModify","PageRefresh","Fallbacklist","AdminPage","showSizeChanger","Component","AuthCheck","assign","Container","MenuBar","Contents","MainPage","basename","process","marginTop","path","component","Auth","exact","Datamodify","Adminpage","Title","AutoComplete","formItemLayout","labelCol","xs","sm","tailFormItemLayout","Backwards","Signup","emailAuthform","_department","setDepartment","_email","setEmail","_name","setName","_phonenum","setPhonenum","id_duplication","checkDup","email_check","checkEmail","email_auth","setEmailAuth","sejongemail","handleCancel","onChangeSelectFunc","scrollToFirstError","LeftOutlined","hasFeedback","Password","dependencies","validator","rule","Promise","reject","resolve","initialValue","authNumber","App","Boolean","location","hostname","match","defaultState","loggedIn","rootReducer","combineReducers","state","action","createStoreWidthMiddleware","applyMiddleware","promiseMiddlerware","reduxThunk","createStore","ReactDOM","render","store","reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b2a59a1.chunk.js","sourcesContent":["export const REGISTER_USER = \"REGISTER_USER\";\r\nexport const LOGIN_USER =\"LOGIN_USER\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const AUTH_USER = \"AUTH_USER\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAILED = \"AUTH_FAILED\";","import axios from \"axios\";\r\n\r\n// const DOMAIN = \"https://mfam.site\";\r\nconst DOMAIN = \"https://sjswbot.site/\"\r\naxios.defaults.withCredentials = true; // 쿠키 데이터를 전송받기 위해\r\nexport const request = (method, url, data) => {\r\n  return axios({\r\n    method,\r\n    url: DOMAIN + url,\r\n    data,\r\n  })\r\n    .then((res) => res)\r\n    .catch((err) => console.log(err));\r\n};","import {\r\n  REGISTER_USER,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  AUTH_USER,\r\n  REGISTER_ERROR,\r\n  LOGIN_SUCCESS,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAILED,\r\n} from \"./types\";\r\nimport React, { Component, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { request } from \"../utils/axios\";\r\n\r\nexport function registerUser(dataToSubmit) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: REGISTER_USER,\r\n    });\r\n\r\n    return axios\r\n      .post(\"https://sjswbot.site/auth/signup\", dataToSubmit)\r\n      .then((response) => {\r\n        console.log(response);\r\n        return response;\r\n      }\r\n      )\r\n      .catch((error) => {\r\n        console.log(error);\r\n        return error.response;\r\n      })\r\n  };\r\n}\r\n\r\n// export function loginUser(dataToSubmit) {\r\n//   const data = request(\"post\", \"/auth/login\", dataToSubmit);\r\n//   return {\r\n//       type: LOGIN_USER,\r\n//       payload: data,\r\n//   };\r\n// }\r\n\r\nexport function loginUser(dataToSubmit) {\r\n  const uid = dataToSubmit.userid;\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_USER,\r\n      payload: uid,\r\n    });\r\n\r\n    return axios\r\n      .post(\"https://sjswbot.site/auth/login\", dataToSubmit)\r\n      .then((response) => response)\r\n      .catch((error) => error.response);\r\n  };\r\n}\r\n\r\nexport function loginSuccess(accessToken) {\r\n  localStorage.setItem(\"user_token\", accessToken);\r\n  //axios.defaults.headers.common['Authorization'] = accessToken;\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n    });\r\n  };\r\n}\r\n\r\nexport function logoutUser() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGOUT_USER,\r\n    });\r\n  };\r\n}\r\n\r\nexport function authUser(props) {\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(\"https://sjswbot.site/auth/check\", header, { widthCredentials: true })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: AUTH_SUCCESS,\r\n        });\r\n        let dept = \"\";\r\n        console.log(res);\r\n        axios\r\n        .get(\"https://sjswbot.site/dep\")\r\n        .then((res2) => {\r\n          localStorage.setItem(\"dept_name\",res2.data.result[res.data.result[0].department-1].department);\r\n        }) \r\n        localStorage.setItem(\"username\", res.data.result[0].user);\r\n        localStorage.setItem(\"department\", res.data.result[0].department);\r\n        localStorage.setItem(\"role\",res.data.result[0].role);\r\n        return res.data.result[0];\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch({\r\n          type: AUTH_FAILED,\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nfunction dep(num) {\r\n  return axios\r\n  .get(\"https://sjswbot.site/dep\")\r\n  .then((res) => res.data.result[num-1].department\r\n  )\r\n}","import React, { Component, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { loginUser, authUser, loginSuccess } from \"../actions/userAction\";\r\nimport axios from \"axios\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst LoginForm = styled.div`\r\n  display: flex;\r\n  min-width: 800px;\r\n  min-height: 600px;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #a31432;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  font-size: 6rem;\r\n  letter-spacing: 1rem;\r\n  color: #a31432;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Whitespace = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 6rem;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-radius: 2rem;\r\n`;\r\n\r\nconst Login = (props) => {\r\n  const [_id, setId] = useState(\"\");\r\n  const [_password, setPassword] = useState(\"\");\r\n  const [_studentid, setStudentId] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const onLogin = (e) => {\r\n    localStorage.clear();\r\n    const body = {\r\n      userid: _id,\r\n      password: _password,\r\n    };\r\n\r\n    dispatch(loginUser(body))\r\n      .then((res) => {\r\n        console.log(res)\r\n        \r\n        if (res.status === 200) {\r\n          const accessToken = res.data.result[0].token;\r\n          dispatch(loginSuccess(accessToken));\r\n          dispatch(authUser()).then((res) => {\r\n            if (res) {\r\n              // res 추가해서 비동기적으로 실행되게 하기위함 (로그인 됬을 때 username 못불러오는 현상 해결)\r\n              props.history.push(\"/main\");\r\n            }\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"로그인 실패\",\r\n            text: res.data.message,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 2000,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          text: \"로그인이 실패 하였습니다.\",\r\n          title: \"로그인실패\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 2000,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <LoginForm>\r\n      <Whitespace>\r\n        <Logo style={{ marginBottom: \"3%\" }}>SYB ADMIN</Logo>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          onFinish={onLogin}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"id\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"ID를 입력해주세요\",\r\n              },\r\n            ]}\r\n            style={{ paddingBottom: \"0.5rem\" }}\r\n          >\r\n            <Input\r\n              prefix={\r\n                <UserOutlined\r\n                  className=\"site-form-item-icon\"\r\n                  style={{ paddingRight: \"0.5rem\" }}\r\n                />\r\n              }\r\n              onChange={onIdHandler}\r\n              placeholder=\"아이디\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 입력해주세요\",\r\n              },\r\n            ]}\r\n            style={{ paddingBottom: \"1rem\" }}\r\n          >\r\n            <Input\r\n              prefix={\r\n                <LockOutlined\r\n                  className=\"site-form-item-icon\"\r\n                  style={{ paddingRight: \"0.5rem\" }}\r\n                />\r\n              }\r\n              type=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              onChange={onPasswordHanlder}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                backgroundColor: \"#a31432\",\r\n                border: \"none\",\r\n                margin: \"0 1rem\",\r\n              }}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <Link to=\"/signup\" style={{ margin: \"0 1rem\" }}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                style={{ backgroundColor: \"#a31432\", border: \"none\" }}\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </Whitespace>\r\n    </LoginForm>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { Component, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutUser, authUser } from \"../actions/userAction\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst Logo = styled.div`\r\n  font-size: 2.5rem;\r\n  letter-spacing: 15px;\r\n  color: white;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Positioner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #a31432;\r\n  position: fixed;\r\n  top: 0px;\r\n  width: 100%;\r\n  min-width: 800px;\r\n  z-index: 5;\r\n`;\r\n\r\nconst Logout = styled.div`\r\n  font-size: 1.2rem;\r\n  letter-spacing: 3px;\r\n  color: black;\r\n  font-family: \"Rajdhani\";\r\n  &:hover {\r\n    color: ${oc.gray[6]};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst GradientBorder = styled.div`\r\n  height: 10 px;\r\n  background: linear-gradient(to right, black, white);\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n  background-color: white;\r\n  padding: 0 2rem;\r\n  height: 70%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  border-radius: 55px;\r\n  border: 3px solid ${oc.red[8]};\r\n`;\r\n\r\nconst HeaderContents = styled.div`\r\n  width: 100%;\r\n  height: 75px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0 2rem;\r\n  padding-right: 3rem;\r\n  padding-left: 1rem;\r\n  z-index:2;\r\n`;\r\n\r\nfunction Header(props) {\r\n  const dispatch = useDispatch();\r\n  const username = localStorage.getItem(\"username\");\r\n  const dept = localStorage.getItem(\"dept_name\");\r\n  const onClickHandler = () => {\r\n    dispatch(logoutUser());\r\n    localStorage.clear();\r\n    props.history.push(\"/\");\r\n  };\r\n  return (\r\n    <Positioner>\r\n      <HeaderContents>\r\n        <Logo>SYB ADMIN</Logo>\r\n        <Spacer />\r\n        <UserContainer>\r\n          <Logo\r\n            style={{\r\n              fontSize: \"1.2rem\",\r\n              letterSpacing: \"1px\",\r\n              paddingRight: \"3rem\",\r\n              fontFamily: \"Gothic A1\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            <UserOutlined\r\n              style={{\r\n                color: \"white\",\r\n                padding: \"5px\",\r\n                fontSize: \"1.5rem\",\r\n                marginRight: \"1rem\",\r\n                borderRadius: \"100%\",\r\n                backgroundColor: \"gray\",\r\n              }}\r\n            />\r\n            {/* {dept}&emsp; */}\r\n            {username} 조교님\r\n          </Logo>\r\n          <Logout onClick={onClickHandler}>Logout</Logout>\r\n        </UserContainer>\r\n      </HeaderContents>\r\n      <GradientBorder />\r\n    </Positioner>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header); // withRouter 해야 'push'를 못찾는 에러 메세지 뜨지 않음\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport oc from \"open-color\";\r\n\r\nconst Logo = styled.div`\r\n  font-size: 2rem;\r\n  letter-spacing: 3px;\r\n  color: white;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Positioner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${oc.gray[8]};\r\n  position: fixed;\r\n  height: 6.5%;\r\n  bottom: 0%;\r\n  width: 100%;\r\n  min-width: 800px;\r\n  z-index: 0;\r\n`;\r\n\r\nconst GradientBorder = styled.div`\r\n  height: 2px;\r\n  margin: 0rem 1rem 0 2rem;\r\n  border-radius: 5rem;\r\n  background: linear-gradient(to right, #a31432, #ffcccb);\r\n`;\r\n\r\nconst HeaderContents = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding-right: 3rem;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nconst Footer = ({ children }) => {\r\n  return (\r\n    <Positioner>\r\n      <HeaderContents>\r\n        <Logo>Footer TEST</Logo>\r\n        <Spacer />\r\n        <Logo>SYB</Logo>\r\n      </HeaderContents>\r\n    </Positioner>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  useHistory,\r\n  Switch,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport {\r\n  NotificationOutlined,\r\n  LoadingOutlined,\r\n  CalendarOutlined,\r\n  BarsOutlined,\r\n  AuditOutlined,\r\n  LayoutOutlined,\r\n  MessageOutlined,\r\n  BulbOutlined,\r\n  ClockCircleOutlined,\r\n  QuestionCircleOutlined,\r\n  WarningOutlined,\r\n  LockOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Divider } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport oc from \"open-color\";\r\n\r\nconst MenuContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 2rem;\r\n`;\r\n\r\nconst MenuContent = styled.div`\r\n  color: ${oc.gray[7]};\r\n  width: 11rem; // 클릭 박스 조정\r\n  height: 100%;\r\n  padding: 1rem 0;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst MenuItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 3rem;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  transition: all 0.2s;\r\n  &:hover {\r\n    background: ${oc.gray[3]};\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst Menu = () => {\r\n  let history = useHistory();\r\n  const role = localStorage.getItem(\"role\");\r\n  const name = localStorage.getItem(\"username\");\r\n  const ScrollTop = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <MenuContainer>\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/main\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <NotificationOutlined style={{ padding: \"0 1rem\" }} />\r\n            공지사항\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/question\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <BulbOutlined style={{ padding: \"0 1rem\" }} />\r\n            질문 추가 및 수정\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/userquestion\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <QuestionCircleOutlined style={{ padding: \"0 1rem\" }} />\r\n            유저들의 질문\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/datamodify\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <WarningOutlined style={{ padding: \"0 1rem\" }} />\r\n            데이터 수정 요청\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/status\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <ClockCircleOutlined style={{ padding: \"0 1rem\" }} />\r\n            학과 사무실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/curriculum\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <BarsOutlined style={{ padding: \"0 1rem\" }} />\r\n            교과과정\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/notice\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <CalendarOutlined style={{ padding: \"0 1rem\" }} />\r\n            학과공지\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/professor\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <AuditOutlined style={{ padding: \"0 1rem\" }} />\r\n            교수님 연구실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/timetable\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <LayoutOutlined style={{ padding: \"0 1rem\" }} />\r\n            강의실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/bestqa\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <MessageOutlined style={{ padding: \"0 1rem\" }} />\r\n            자주 묻는 질문\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      { role === \"2\" ?(<MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/adminpage\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <LockOutlined style={{ padding: \"0 1rem\" }} />\r\n            관리자페이지\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>):null}\r\n    </MenuContainer>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  notification,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport { CloudUploadOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 1.5,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Welcome = (props) => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const department = localStorage.getItem(\"department\");\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const CancleModify = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n    \r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n    formData.modifier = name;\r\n    const response = await axios\r\n      .put(`https://sjswbot.site/assistantNotice/${department}`, formData,header,{ widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          }).then(()=>{\r\n            getData()\r\n            setVisible(false);\r\n          });\r\n        } else {\r\n          return openNotification('error', '서버와의 에러가 발생했습니다.');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        return openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n  };\r\n\r\n  const loadContent = () => {\r\n    if (visible === true) {\r\n      return (\r\n        <Form\r\n          form={form}\r\n          onFinish={confirmFunc}\r\n          onFieldsChange={onValuesChange}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"content\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            {/* <TextArea\r\n              style={{\r\n                fontSize: \"1rem\",\r\n                width: \"50rem\",\r\n                resize: \"none\",\r\n                padding: \"1rem\",\r\n                textAlign: \"center\",\r\n              }}\r\n              autoSize={true}\r\n              resize=\"none\"\r\n            /> */}\r\n            <ReactQuill theme=\"snow\" value={data.content} style={{width:\"50rem\",height:\"auto\"}}/>\r\n          </Form.Item>\r\n          <div style={{ marginBottom: \"1rem\" }} />\r\n          <Divider />\r\n          <p style={{ width: \"100%\", color: \"gray\", marginBottom: \"2rem\" }}>\r\n            수정 하시려면 수정하기 버튼을, 취소하려면 취소 버튼을 눌러주세요{\" \"}\r\n          </p>\r\n          <Form.Item >\r\n            <div style={{ display: \"inline-block\" ,float:\"right\"}}>\r\n              <Button htmlType=\"submit\" style={{ margin: \"0 1rem\" }}>\r\n                수정하기\r\n              </Button>\r\n              <Button onClick={CancleModify} style={{ margin: \"0 1rem\" }}>\r\n                취소\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          {/* <TextArea\r\n            value={data.content}\r\n            style={{\r\n              fontSize: \"1rem\",\r\n              width: \"50rem\",\r\n              resize: \"none\",\r\n              padding: \"1rem\",\r\n              textAlign: \"center\",\r\n            }}\r\n            bordered={false}\r\n            autoSize={true}\r\n            readOnly={true}\r\n          /> */}\r\n          <div dangerouslySetInnerHTML={{ __html: data.content }} style={{width:\"50rem\"}}></div>\r\n          <div style={{ marginBottom: \"1rem\" }} />\r\n          <Divider />\r\n          <p style={{ width: \"100%\", color: \"gray\" }}>\r\n            {data.modifier} 조교님\r\n            <br />({data.time})\r\n          </p>\r\n          <Button onClick={FormHandler} style={{float:\"right\"}}>수정하기</Button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.get(\r\n      `https://sjswbot.site/assistantNotice/${department}`, header, { widthCredentials: true }\r\n    );\r\n    console.log(response);\r\n    setData({\r\n      content: response.data.result.content,\r\n      modifier: response.data.result.User.username,\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      content: response.data.result.content,\r\n    });\r\n  }, [department]);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{deptname} 공지사항 </p>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          padding: \"2rem 2rem\",\r\n        }}\r\n      >\r\n        {loadContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  notification,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport ImageUploader from 'react-images-upload';\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 1.5,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Curriculum = () => {\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const [data, setData] = React.useState([]);\r\n  const [fileList, setFileList] = React.useState([]);\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\r\n      `https://sjswbot.site/curriculum/${department}`\r\n    );\r\n    console.log(response);\r\n    setData({\r\n      modifier: response.data.result.User.username,\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      department: deptname,\r\n      link: response.data.result.link,\r\n    });\r\n  }, [department]);\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    console.log(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (formData) => {\r\n    // formData.modifier = localStorage.getItem(\"username\");\r\n    // formdata에 userid 추가\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n    \r\n    const response = await axios\r\n      .put(`https://sjswbot.site/curriculum/${department}`, formData , header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          }).then(()=>getData());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        return openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n    // eslint-disable-next-line\r\n  }, [department, getData]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{deptname} 교과과정 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468769-55939d00-221f-11eb-9ead-db3cce00f58c.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/106621897-5fc2fe80-65b6-11eb-8b2f-75cbf02ca793.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468778-59272400-221f-11eb-95f0-4df3d930c7bb.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"링크\" name=\"link\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Curriculum;","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Form, Select, Input, Button,notification, Carousel, Image, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 1.5,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Status = () => {\r\n  const id = localStorage.getItem(\"username\");\r\n  //const [time,setTime] = React.useState(new Date().toLocaleString());\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const [data, setData] = React.useState({});\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://sjswbot.site/status/${department}`);\r\n    console.log(response);\r\n    let data = \"\";\r\n    if (response.data.result.status === 1) {\r\n      data = \"근무중\";\r\n    } else if (response.data.result.status === 2) {\r\n      data = \"휴가중\";\r\n    }\r\n    setData({\r\n      modifier: response.data.result.User.username,\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n      // 시간 안더해줘도 됨 (21-01-21)\r\n    });\r\n    form.setFieldsValue({\r\n      // department: response.data.result.department,\r\n      status: data,\r\n      comment: response.data.result.comment,\r\n      position: response.data.result.position,\r\n      phoneNumber: response.data.result.phoneNumber,\r\n      // time: time,\r\n    });\r\n  });\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        // setTime(new Date().toLocaleString());\r\n        console.log(formData);\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (data) => {\r\n    // data.modifier = localStorage.getItem(\"username\");\r\n    // 기존 modifier 넣어준 것 뺌\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n\r\n    if(data.status === \"근무중\"){\r\n      data.status = 1;\r\n    }\r\n    else if (data.status === \"휴가중\"){\r\n      data.status = 2;\r\n    }\r\n    \r\n    const response = await axios\r\n      .put(`https://sjswbot.site/status/${department}`, data, header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          }).then(()=>getData());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        return openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setDisable(false);\r\n  }, [form.data]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(department);\r\n    if (department === \"\") return;\r\n    getData();\r\n  }, [department]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{deptname} 사무실 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468848-ae633580-221f-11eb-9afd-762834755b54.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/106381844-f3ea6580-63fe-11eb-9c45-c440ca33d15f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/106381846-f51b9280-63fe-11eb-919d-3f05c9d73e06.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/106381847-f64cbf80-63fe-11eb-833f-6428fd43749e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        {/* <Form.Item\r\n          label=\"학과\"\r\n          name=\"department\"\r\n          value={department}\r\n          style={{\r\n            width: \"0rem\",\r\n            height: \"0rem\",\r\n            visibility: \"hidden\",\r\n            margin: \"0\",\r\n          }}\r\n        >\r\n          <Input readOnly={true} />\r\n        </Form.Item> */}\r\n        {/* <Form.Item label=\"시간\" name=\"time\" value={time} style={{width:\"0rem\", height:\"0rem\" , visibility:\"hidden\", margin:\"0\"}}>\r\n          <Input readOnly=\"true\"/>\r\n        </Form.Item> */}\r\n        {/* <Form.Item\r\n          label=\"이름\"\r\n          name=\"modifier\"\r\n          value={id}\r\n          style={{\r\n            width: \"0rem\",\r\n            height: \"0rem\",\r\n            visibility: \"hidden\",\r\n            margin: \"0\",\r\n          }}\r\n        >\r\n          <Input readOnly={true} />\r\n        </Form.Item> */}\r\n        <Form.Item label=\"위치\" name=\"position\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"전화번호\" name=\"phoneNumber\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"조교 부재여부\" name=\"status\" required>\r\n          <Select>\r\n            <Option value=\"1\">근무중</Option>\r\n            <Option value=\"2\">휴가중</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"기타내용\"\r\n          name=\"comment\"\r\n          // rules={[\r\n          //   { required: true, messsage: \"코멘트르 입력해주세요\" },\r\n          // ]}\\\r\n          required\r\n        >\r\n          <TextArea disabled={isDisable} style={{ resize: \"none\" }} />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  notification,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 1.5,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Notice = () => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const [data, setData] = React.useState([]);\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://sjswbot.site/notice/${department}`);\r\n    console.log(response);\r\n    setData({\r\n      modifier: response.data.result.User.username,\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      department: deptname,\r\n      link: response.data.result.link,\r\n    });\r\n  }, [department]);\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    console.log(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (formData) => {\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios\r\n      .put(`https://sjswbot.site/notice/${department}`, formData  , header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          }).then(()=>getData());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        return openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{deptname} 공지 링크 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468604-8f17d880-221e-11eb-90fc-43a1acad45c6.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468606-90e19c00-221e-11eb-9dde-738e963f0458.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468607-9212c900-221e-11eb-8763-c018eebf650f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"링크\" name=\"link\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col,notification, Divider, Modal,Tooltip} from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 1.5,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst Option = Select.Option;\r\nconst category = [\"일반\",\"학사\",\"입학\",\"학과행사\",\"공모전\",\"경시대회\",\"교내모집\",\"장학\",\"기타\"];\r\n\r\nconst QuestionList = ({ data, getData, setPage, page,\r\n  count,pageSize }) => {\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const department = localStorage.getItem(\"department\");\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [dep,setDep] = React.useState([]);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  const loadDep = () => {\r\n    axios\r\n      .get(\"https://sjswbot.site/dep\")\r\n      .then((res) => {\r\n        setDep(res.data.result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"에러발생\")\r\n      });\r\n  }\r\n  \r\n  const FormHandler = () => {\r\n    form.setFieldsValue({\r\n      faqno: data.faqno,\r\n      category1: data.category1,\r\n      category2: data.category2,\r\n      category3: data.category3,\r\n      // category4: data.category4,\r\n      // category5: data.category5,\r\n      question: data.question,\r\n      questionAnswer: data.questionAnswer,\r\n      landingUrl: data.landingUrl,\r\n      // imageinfo: data.imageinfo,\r\n    });\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://sjswbot.site/knowledgePlus/${data.faqno}`, header, { withReactContent : true })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        return openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n    setVisible(false);\r\n    setPage(page);\r\n    getData();\r\n    return openNotification('success', '질문을 삭제했습니다!');\r\n  };\r\n\r\n  const onChangeFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n    console.log(formData);\r\n    const response = await axios\r\n      .put(`https://sjswbot.site/knowledgePlus/${data.faqno}`, formData, header, { withReactContent : true })\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        if (res.status === 200) {\r\n          setVisible(false);\r\n          setPage(0);\r\n          getData();\r\n          return openNotification('success', '질문을 수정했습니다!');\r\n        } else {\r\n          return openNotification('error', '서버와의 에러가 발생했습니다.');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        return openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      faqno: data.faqno,\r\n      category1: data.category1,\r\n      category2: data.category2,\r\n      category3: data.category3,\r\n      category4: data.category4,\r\n      category5: data.category5,\r\n      question: data.question,\r\n      questionAnswer: data.questionAnswer,\r\n      landingUrl: data.landingUrl,\r\n      imageinfo: data.imageinfo,\r\n    });\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ margin: \"1vh 0\" }} />\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0.1rem 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col\r\n          flex={1}\r\n          style={{ paddingLeft: \"2rem\", width: \"5%\", fontWeight: \"bold\" }}\r\n        >\r\n          {count}\r\n        </Col>\r\n        <Col flex={8} style={{ paddingLeft: \"2rem\", width: \"60%\" }}>\r\n          {data.question}\r\n        </Col>\r\n        <Col flex={2} style={{ width: \"15%\" }}>\r\n          {moment(data.updatedAt).format(\"LLL\")}\r\n        </Col>\r\n        <Col flex={1}>\r\n          {\r\n            data.category1 === \"공통\" || data.category1 === deptname\r\n            ?<Button onClick={FormHandler}>수정하기</Button>\r\n            :<Tooltip placement=\"bottom\" title={data.category1+\"의 질문입니다.\"}>\r\n              <Button onClick={FormHandler} disabled>수정하기</Button>\r\n            </Tooltip>\r\n          }\r\n          <Modal\r\n            title=\"질문수정\"\r\n            visible={visible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            maskClosable={false}\r\n            footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n            width=\"40rem\"\r\n          >\r\n            <Form\r\n              form={form}\r\n              onFinish={onChangeFunc}\r\n              onFieldsChange={onValuesChange}\r\n              autoComplete=\"off\"\r\n              style={{ width: \"95%\", padding: \"0 5%\" }}\r\n            >\r\n              <Form.Item\r\n                label=\"질문\"\r\n                name=\"question\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"질문을 입력해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input initialvalues={data.question} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"답변\"\r\n                name=\"questionAnswer\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"답변을 입력해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input.TextArea \r\n                  initialvalues={data.questionAnswer} \r\n                  style={{height:\"10rem\", resize:\"none\"}}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"학과\"\r\n                name=\"category1\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"학과를 설정해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input initialvalues={data.category1} readOnly/>\r\n              </Form.Item>\r\n              <Form.Item \r\n                label=\"대분류\" \r\n                name=\"category2\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"대분류를 설정해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n                >\r\n                  <Select>\r\n                      {category.map(i => <Option value={i}>{i}</Option>)}\r\n                  </Select>\r\n              </Form.Item>\r\n              <Form.Item label=\"소분류\" name=\"category3\">\r\n                <Input initialvalues={data.category3} />\r\n              </Form.Item>\r\n              {/* <Form.Item label=\"카테고리 2\" name=\"category4\">\r\n                <Input initialvalues={data.category4} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 3\" name=\"category5\">\r\n                <Input initialvalues={data.category5} />\r\n              </Form.Item> */}\r\n              <Form.Item label=\"답변링크\" name=\"landingUrl\">\r\n                <Input initialvalues={data.landingUrl} />\r\n              </Form.Item>\r\n              {/* <Form.Item label=\"이미지링크\" name=\"imageinfo\">\r\n                <Input initialvalues={data.imageinfo} />\r\n              </Form.Item> */}\r\n              <Divider />\r\n              <p style={{ width: \"100%\", color: \"gray\" }}>\r\n                {data.User.username} 조교님\r\n                <br />({moment(data.updatedAt).format(\"LLL\")})\r\n              </p>\r\n              <Form.Item colon={false} wrapperCol={{ span: 20, offset: 7 }}>\r\n                <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n                  수정하기\r\n                </Button>\r\n                <Button\r\n                  icon={<ExclamationCircleOutlined />}\r\n                  type=\"primary\"\r\n                  onClick={confirmFunc}\r\n                  style={{\r\n                    backgroundColor: \"RGB(255,0,0,0.6)\",\r\n                    color: \"white\",\r\n                    border: \"none\",\r\n                    marginLeft: \"3rem\",\r\n                  }}\r\n                >\r\n                  삭제하기\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionList;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  notification,\r\n  Tooltip,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport { CloudUploadOutlined ,QuestionCircleOutlined } from \"@ant-design/icons\";\r\nimport QuestionList from \"./QuestionList\";\r\n\r\nconst Option = Select.Option;\r\nconst category = [\"일반\",\"학사\",\"입학\",\"학과행사\",\"공모전\",\"경시대회\",\"교내모집\",\"장학\",\"기타\"];\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 1.5,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst Question = (props) => {\r\n  const pageSize = parseInt(window.innerHeight / 70);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const department = localStorage.getItem(\"department\");\r\n  const [dataSize,setdataSize] = React.useState(0);\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [helpvisible,setHelpVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dep,setDep] = React.useState([]);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  const loadDep = () => {\r\n    axios\r\n      .get(\"https://sjswbot.site/dep\")\r\n      .then((res) => {\r\n        setDep(res.data.result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"에러발생\")\r\n      });\r\n  }\r\n\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    // return data.map((it, i) => {\r\n\r\n    //   return (\r\n    //     <QuestionList\r\n    //       key={i}\r\n    //       data={it}\r\n    //       count={dataSize - i - pageSize * (page)}\r\n    //       getData={getData}\r\n    //       setPage={setPage}\r\n    //       pageSize={pageSize}\r\n    //       page={page}\r\n    //     />\r\n    //   );\r\n    // });\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n\r\n    const response = await axios\r\n      .post(`https://sjswbot.site/knowledgePlus`, formData, header, { widthCredentials:true })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          setPage(0);\r\n          getData();\r\n          setVisible(false);\r\n          form.setFieldsValue({\r\n            faqno: \"\",\r\n            category1: \"\",\r\n            category2: \"\",\r\n            category3: \"\",\r\n            category4: \"\",\r\n            question: \"\",\r\n            questionAnswer: \"\",\r\n            landingUrl: \"\",\r\n            imageinfo: \"\",\r\n          });\r\n          return openNotification('success', '질문을 등록했습니다!');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        return openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    //pagenum은 1,2,3,4 식으로 전송 됨.\r\n    setPage(pagenum-1);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://sjswbot.site/knowledgePlus?page=${page}&size=${pageSize}`,header,{ widthCredentials: true });\r\n    console.log(response);\r\n    setdataSize(response.data.result.count);\r\n    setData(response.data.result.rows);\r\n  }, [page,setPage]);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n    loadDep();\r\n  }, [page,setPage]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n          width:\"100%\"\r\n        }}\r\n      >\r\n        <div style={{width:\"100%\",margin:\"1rem 0 1rem\"}}>\r\n          지식+ 질문 추가/수정 페이지\r\n          <QuestionCircleOutlined  onClick={()=>setHelpVisible(true)} style={{fontSize:\"1.5rem\",margin:\"1rem 5rem 0\",float:\"right\",position:\"absolute\"}}/>\r\n        </div>\r\n\r\n      </div>\r\n      소융봇에서 제공 할 질문과 답변을 관리하는 페이지입니다.\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"10px 0 2rem\" }}>\r\n        <Link to=\"/userquestion\">\r\n          <u>유저들의 질문</u>\r\n        </Link>{\" \"}\r\n        에서 질문을 골라보세요 😊\r\n      </div>\r\n      <Modal\r\n        centered\r\n        visible={helpvisible}\r\n        onOk={() => setHelpVisible(false)}\r\n        onCancel={() => setHelpVisible(false)}\r\n        width={\"auto\"}\r\n        height={\"auto\"}\r\n        footer={null}\r\n      >\r\n        <Carousel\r\n          style={{ width: \"65rem\", margin: \"1rem\" }}\r\n        >\r\n          <div>\r\n            <Image\r\n              src=\"https://user-images.githubusercontent.com/51112542/106609840-5f703680-65a9-11eb-9847-0f54daeb2a6d.png\"\r\n              width=\"100%\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Image\r\n              src=\"https://user-images.githubusercontent.com/51112542/106609847-60a16380-65a9-11eb-9492-3fc72d2732f3.png\"\r\n              width=\"100%\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Image\r\n              src=\"https://user-images.githubusercontent.com/51112542/106609851-61d29080-65a9-11eb-98f8-1b625babedd5.png\"\r\n              width=\"100%\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Image\r\n              src=\"https://user-images.githubusercontent.com/51112542/106609927-7a42ab00-65a9-11eb-80fc-25cbc99e4387.png\"\r\n              width=\"100%\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Image\r\n              src=\"https://user-images.githubusercontent.com/51112542/106609862-64cd8100-65a9-11eb-805e-c6d963267397.png\"\r\n              width=\"100%\"\r\n            />\r\n          </div>\r\n        </Carousel>\r\n      </Modal>\r\n      {data.map((it, i) => {\r\n        return (\r\n        <QuestionList\r\n          key={i}\r\n          data={it}\r\n          count={dataSize - i - pageSize * (page)}\r\n          getData={getData}\r\n          setPage={setPage}\r\n          pageSize={pageSize}\r\n          page={page}\r\n        />\r\n      );\r\n      })}\r\n      <div style={{ marginBottom: \"2rem\" }} />\r\n      <Pagination\r\n        current={page+1}\r\n        total={dataSize}\r\n        defaultPageSize={pageSize}\r\n        onChange={onPageChange}\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n      />\r\n      <Button onClick={FormHandler}>질문 추가</Button>\r\n      <Modal\r\n        title=\"질문추가\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        maskClosable={false}\r\n        footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n        width=\"40rem\"\r\n      >\r\n        <Form\r\n          form={form}\r\n          onFinish={onFinishFunc}\r\n          onFieldsChange={onValuesChange}\r\n          autoComplete=\"off\"\r\n          style={{ width: \"95%\", padding: \"0 5%\" }}\r\n        >\r\n          <Form.Item\r\n            label=\"질문\"\r\n            name=\"question\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"질문을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"답변\"\r\n            name=\"questionAnswer\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"답변을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input.TextArea \r\n                  initialvalues={data.questionAnswer} \r\n                  style={{height:\"10rem\", resize:\"none\"}}\r\n            />  \r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"학과\"\r\n            name=\"category1\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"학과를 설정해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Select>\r\n                {dep.map(i => (i.department === \"공통\" || i.idx === Number(department)) ? <Option value={i.department}>{i.department}</Option>:null)}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item \r\n            label=\"대분류\" \r\n            name=\"category2\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"대분류를 설정해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n            >\r\n              <Select>\r\n                  {category.map(i => <Option value={i}>{i}</Option>)}\r\n              </Select>\r\n          </Form.Item>\r\n          <Form.Item label=\"소분류\" name=\"category3\">\r\n            <Input />\r\n          </Form.Item>\r\n          {/* <Form.Item label=\"카테고리 2\" name=\"category4\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 3\" name=\"category5\">\r\n            <Input />\r\n          </Form.Item> */}\r\n          <Form.Item label=\"답변링크\" name=\"landingUrl\">\r\n            <Input />\r\n          </Form.Item>\r\n          {/* <Form.Item label=\"이미지링크\" name=\"imageinfo\">\r\n            <Input />\r\n          </Form.Item> */}\r\n          <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n            <Button\r\n              icon={<CloudUploadOutlined />}\r\n              htmlType=\"submit\"\r\n              style={{ margin: \"1rem 1rem 0 1rem\" }}\r\n            >\r\n              추가하기\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col, Divider,notification, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport moment from \"moment\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 1.5,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst Userquestionlist = ({ data, getData, setPage, page }) => {\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://sjswbot.site/question/${data.idx}`,header, {widthCredentials:true})\r\n      .catch((error) => {\r\n        return openNotification('error', '서버와의 에러가 발생했습니다.');\r\n        console.log(error);\r\n      });\r\n    setPage(page);\r\n    getData();\r\n    return openNotification('success', '데이터를 삭제했습니다!');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ margin: \"1vh 0\" }} />\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0.1rem 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col\r\n          flex={1}\r\n          style={{ textAlign: \"center\", width: \"15%\", fontWeight: \"bold\" }}\r\n        >\r\n          {data.department === 11\r\n          ?\"공통질문\"\r\n          :deptname}\r\n        </Col>\r\n        <Col flex={8} style={{ marginLeft: \"2rem\", width: \"50%\" }}>\r\n          {data.content}\r\n        </Col>\r\n        <Col flex={2} style={{ width: \"15%\" }}>\r\n          {moment(data.updatedAt).format(\"LLL\")}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button\r\n            onClick={confirmFunc}\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"RGB(255,0,0,0.6)\", border: \"none\"}}\r\n          >\r\n            삭제하기\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Userquestionlist;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Userquestionlist from \"./Userquestionlist\";\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Userquestion = (props) => {\r\n  const department = localStorage.getItem(\"department\");\r\n  const pageSize = parseInt(window.innerHeight / 70);\r\n  let count = 0;\r\n  const [dataSize,setdataSize] = React.useState(0);\r\n  const [size, setSize] = React.useState(0);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    return data.map((it, i) => {\r\n      // 게시글 번호 계산\r\n\r\n      // if (it.department === \"공통 질문\" || it.department === department) {\r\n        return (\r\n          <Userquestionlist\r\n            key={i}\r\n            data={it}\r\n            getData={getData}\r\n            setPage={setPage}\r\n            pageSize={pageSize}\r\n            page={page}\r\n          />\r\n        );\r\n      // }\r\n    });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    //pagenum은 1,2,3,4 식으로 전송 됨.\r\n    setPage(pagenum-1);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://sjswbot.site/question/${department}?page=${page}&size=${pageSize}`,header, { widthCredentials: true });\r\n    console.log(response);\r\n    setdataSize(response.data.result.count);\r\n    setData(response.data.result.rows);\r\n  }, [page,setPage]);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, [page,setPage]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>유저들의 질문</p>\r\n      </div>\r\n      소융봇에서 제공하고 있지 않은 질문들에 대해서 유저들이 남긴 질문입니다.\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"10px 0 2rem\" }}>\r\n        <Link to=\"/question\">\r\n          <u>질문 수정페이지</u>\r\n        </Link>{\" \"}\r\n        에서 질문에 대한 답변을 올려주세요 😊\r\n      </div>\r\n      {/* {data.map((it,i)=>{\r\n        it.count=data.length-i;\r\n        it.props=props;\r\n        return(\r\n            <QuestionList key = {i} data={it} getData={getData}/>\r\n        )\r\n      })} */}\r\n      {PageRefresh()}\r\n      <div style={{ marginBottom: \"2rem\" }} />\r\n      <Pagination\r\n        current={page+1}\r\n        total={dataSize}\r\n        defaultPageSize={pageSize}\r\n        onChange={onPageChange}\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Userquestion;\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  notification,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 2,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst ProfessorAdd = () => {\r\n  const [form] = Form.useForm();\r\n  const [data, getData] = React.useState({});\r\n  const onFinishFunc = async (_data) => {\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n\r\n    console.log(_data);\r\n\r\n    const response = await axios\r\n      .post(`https://sjswbot.site/professor`, _data , header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: `등록되었습니다.`,\r\n            showConfirmButton: false,\r\n            width: \"auto\",\r\n            timer: 1500,\r\n          }).then(()=>{\r\n            form.setFieldsValue({\r\n              name:\"\",\r\n              classPosition:\"\",\r\n              phoneNumber:\"\",\r\n              email:\"\",\r\n            });\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n        name:\"\",\r\n        classPosition:\"\",\r\n        phoneNumber:\"\",\r\n        email:\"\",\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/106378898-939df880-63eb-11eb-964c-4d62e7ae2330.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/106378900-96005280-63eb-11eb-8c76-ed5945af6ca5.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/106378903-98fb4300-63eb-11eb-9f2b-7d4ff32018d1.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={onFinishFunc}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"성함\" name=\"name\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"연구실\" name=\"classPosition\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"전화번호\" name=\"phoneNumber\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"이메일\" name=\"email\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item colon={false}>\r\n            <center>\r\n                <Button htmlType=\"submit\">\r\n                    등록하기\r\n                </Button>\r\n            </center>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfessorAdd;\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  notification,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n    notification[type]({\r\n      description: comment,\r\n      placement: \"bottomRight\",\r\n      duration: 2,\r\n      width: \"auto\",\r\n    });\r\n};\r\n\r\nconst ProfessorModify = () => {\r\n  const [list, setlist] = React.useState([]);\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = React.useState({});\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [nameCheck, setNameCheck] = React.useState(false);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  const onDeleteFunc = async () => {\r\n    if (nameCheck === false) {\r\n        return openNotification('error', '성함을 입력 후 search 버튼을 눌러주세요');\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios.delete(`https://sjswbot.site/professor/${inputValue}`, header, { widthCredentials: true })\r\n        .then(()=>\r\n        Swal.fire({\r\n            icon: \"success\",\r\n            title: \"삭제되었습니다.\",\r\n            showConfirmButton: false,\r\n            width: \"auto\",\r\n            timer: 1500,\r\n          }).then(()=>{\r\n            form.setFieldsValue({\r\n              classPosition: \"\",\r\n              phoneNumber: \"\",\r\n              email: \"\",\r\n            });\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (_data) => {\r\n    console.log(inputValue);\r\n    const response = await axios\r\n      .put(`https://sjswbot.site/professor/${inputValue}`, _data , header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정되었습니다.\",\r\n            showConfirmButton: false,\r\n            width: \"auto\",\r\n            timer: 1500,\r\n          }).then(()=>\r\n            onSearchFunc()\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        \r\n      });\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    if (nameCheck === false) {\r\n        return openNotification('error', '성함을 입력 후 search 버튼을 눌러주세요');\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChangeFunc = (name) => {\r\n    setNameCheck(false);\r\n    setInputValue(name);\r\n  };\r\n\r\n  const showModifier = () => {\r\n    return (\r\n      <p style={{ width: \"100%\", color: \"gray\" }}>\r\n        {data.modifier}\r\n        <br />\r\n        {data.time}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n\r\n    const response = await axios\r\n      .get(`https://sjswbot.site/professor/${inputValue}`)\r\n      .catch((error) => {\r\n      });\r\n    console.log(response);\r\n\r\n    if (!response.data.result) {\r\n      return openNotification('error', '존재하지 않는 이름입니다.');\r\n    }\r\n    openNotification('success','데이터를 성공적으로 불러왔습니다.');\r\n    setNameCheck(true);\r\n    setData({\r\n      modifier: response.data.result.User.username + \" 조교님\",\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      classPosition: response.data.result.classPosition,\r\n      phoneNumber: response.data.result.phoneNumber,\r\n      email: response.data.result.email,\r\n    });\r\n  }, []);\r\n\r\n  const onSearchFunc = async () => {\r\n    let name = inputValue;\r\n    if (name.length < 2) {\r\n        return openNotification('error', '존재하지 않는 이름입니다.');\r\n    }\r\n    const response = await axios\r\n      .get(`https://sjswbot.site/professor/${name}`)\r\n      .catch((error) => {\r\n      });\r\n\r\n    if (!response.data.result) {\r\n      return openNotification('error', '존재하지 않는 이름입니다.');\r\n    }\r\n    openNotification('success','데이터를 성공적으로 불러왔습니다.');\r\n    setNameCheck(true);\r\n    setData({\r\n      modifier: response.data.result.User.username + \" 조교님\",\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      classPosition: response.data.result.classPosition,\r\n      phoneNumber: response.data.result.phoneNumber,\r\n      email: response.data.result.email,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let p_list = [];\r\n    axios.get(`https://sjswbot.site/professor/list`).then((res) => {\r\n    console.log(res.data.result);\r\n    res.data.result.map((v, i) => {\r\n        p_list.push({ value: v.name });\r\n    });\r\n    })\r\n    setlist(p_list);\r\n    console.log(p_list);\r\n  },[]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/106378898-939df880-63eb-11eb-964c-4d62e7ae2330.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/106378900-96005280-63eb-11eb-8c76-ed5945af6ca5.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/106378903-98fb4300-63eb-11eb-9f2b-7d4ff32018d1.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          margin: \"0 0 2rem 0\",\r\n          width: \"40rem\",\r\n          height:\"auto\",\r\n        }}\r\n      >\r\n        <p style={{ width: \"5rem\" }}>성함:</p>\r\n        <AutoComplete\r\n          style={{ width: \"100%\", marginRight: \"1rem\"}}\r\n          options={list}\r\n          placeholder=\"교수님 성함을 입력해주세요\"\r\n          filterOption={(input, option) => option.value.indexOf(input) === 0}\r\n          onChange={onChangeFunc}\r\n        />\r\n        {/* <Input style={{ margin: \"0 4% 0 0\" }} onChange={onChangeFunc} /> */}\r\n        <Button icon={<SearchOutlined />} onClick={onSearchFunc}>\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Form\r\n          form={form}\r\n          onFinish={confirmFunc}\r\n          autoComplete=\"off\"\r\n          style={{ width: \"40rem\" }}\r\n        >\r\n          {\r\n            nameCheck === true\r\n            ? <>\r\n              <Form.Item label=\"연구실\" name=\"classPosition\" required>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item label=\"전화번호\" name=\"phoneNumber\" required>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item label=\"이메일\" name=\"email\" required>\r\n                <Input />\r\n              </Form.Item>\r\n              \r\n            </>\r\n            :null\r\n          }\r\n          <Divider />\r\n          {\r\n            nameCheck === true\r\n            ?showModifier()\r\n            :null\r\n          }\r\n          <Form.Item>\r\n              <center>\r\n                  <Button icon={<CloudUploadOutlined />} htmlType=\"submit\" style={{float:'left', marginLeft:'12rem'}}>\r\n                      수정하기\r\n                  </Button>\r\n                  <Button icon={<CloudUploadOutlined />} onClick={onDeleteFunc} style={{float:'right',marginRight:'12rem'}}>\r\n                      삭제하기\r\n                  </Button>\r\n              </center>\r\n          </Form.Item>\r\n        </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfessorModify;\r\n","import React, { useEffect,useState} from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  notification,\r\n  Image,\r\n  Divider,\r\n  Tabs,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport ProfessorAdd from './ProfessorAdd';\r\nimport ProfessorModify from './ProfessorModify';\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 1.5,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst Professor = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>교수님 연구실 페이지</p>\r\n      </div>\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"교수님 데이터 추가\" key=\"1\">\r\n          <ProfessorAdd/>\r\n        </TabPane>\r\n        <TabPane tab=\"교수님 데이터 수정/삭제\" key=\"2\">\r\n          <ProfessorModify/>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Professor;\r\n","import React, { useEffect , useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  notification,\r\n  Input,\r\n  message,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Upload,\r\n  Divider,\r\n} from \"antd\";\r\nimport ImageUploader from 'react-images-upload';\r\nimport { SearchOutlined,UploadOutlined } from \"@ant-design/icons\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 2,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst TimetableAdd = () => {\r\n  const [form] = Form.useForm();\r\n  const [data, getData] = useState({});\r\n  const [fileList, setFileList] = useState([]);\r\n  const [classname,setClassname] = useState(\"\");\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n  const meta = {\r\n    title:'title 1',\r\n    contents: 'contents 1',\r\n  }\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('img',fileList[0]);\r\n    // fileList.forEach(file => formData.append('img',file));\r\n    formData.classname=classname;\r\n\r\n    for(let key in meta) {\r\n      formData.append(key,meta[key]);\r\n    }\r\n    console.log(formData);\r\n    await axios\r\n      .post(`https://sjswbot.site/timetable/${classname}`, formData , header , { widthCredentials: true })\r\n      .then((res)=>{\r\n        if(res.status === 200){\r\n            return Swal.fire({\r\n              icon: \"success\",\r\n              title: `등록되었습니다.`,\r\n              showConfirmButton: false,\r\n              width: \"auto\",\r\n              timer: 1500,\r\n            }).then(()=>{\r\n              form.setFieldsValue({\r\n                classname:\"\",\r\n              });\r\n            });\r\n          }\r\n\r\n      })\r\n      .catch((err) => {\r\n        openNotification('error','서버와의 에러가 발생했습니다.');\r\n      });\r\n  }\r\n\r\n  const nameHandler = (e) => {\r\n    setClassname(e.target.value);\r\n  }\r\n\r\n  const showModifier = () => {\r\n    return (\r\n      <div style={{ width: \"100%\", color: \"gray\" }}>\r\n        {data.modifier}\r\n        <br />\r\n        {data.time}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n        classname:\"\",\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045727-22f9f380-25d5-11eb-8a36-a2135d9fb51d.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045910-5fc5ea80-25d5-11eb-8f68-7b071a52350e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/106379500-cd70fe00-63ef-11eb-8c9e-18e2a21d6d65.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={handleUpload}\r\n        autoComplete=\"off\"\r\n        initialValues = {{img:fileList}}\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"강의실\" name=\"classname\" required>\r\n          <Input onChange={nameHandler} />\r\n        </Form.Item>\r\n        <Form.Item \r\n          label=\"시간표\" \r\n          name=\"img\" \r\n          required\r\n        >\r\n          <ImageUploader\r\n                withIcon={true}\r\n                withPreview={true}\r\n                buttonText='이미지를 업로드해주세요'\r\n                onChange = {(pictureFiles,pictureDataURLs)=>setFileList(pictureFiles)}\r\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                maxFileSize={5242880}\r\n                singleImage\r\n          />\r\n        </Form.Item>\r\n        <Divider />\r\n        {showModifier()}\r\n        <Form.Item colon={false}>\r\n            <center>\r\n                <Button htmlType=\"submit\">\r\n                    등록하기\r\n                </Button>\r\n            </center>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimetableAdd;\r\n","import React, { useEffect ,useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  notification,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport ImageUploader from 'react-images-upload';\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { getDefaultNormalizer } from \"@testing-library/react\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 2,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst TimetableModify = () => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const [list, setlist] = useState([]);\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState({});\r\n  const [fileList, setFileList] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [nameCheck, setNameCheck] = useState(false);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  const meta = {\r\n    title:'title 1',\r\n    contents: 'contents 1',\r\n  }\r\n\r\n  const onDeleteFunc = async () => {\r\n    if (nameCheck === false) {\r\n        return openNotification('error', '강의실을 입력 후 Search 버튼을 눌러주세요');\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios.delete(`https://sjswbot.site/timetable/${inputValue}`, header, { widthCredentials: true })\r\n        .then(()=>\r\n        Swal.fire({\r\n            icon: \"success\",\r\n            title: \"삭제되었습니다.\",\r\n            showConfirmButton: false,\r\n            width: \"auto\",\r\n            timer: 1500,\r\n          }).then(()=>{\r\n            setInputValue(\"\");\r\n            setData([]);\r\n            setNameCheck(false);\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('img',fileList[0]);\r\n    // fileList.forEach(file => formData.append('img',file));\r\n\r\n    for(let key in meta) {\r\n      formData.append(key,meta[key]);\r\n    }\r\n    console.log(formData);\r\n    await axios\r\n      .put(`https://sjswbot.site/timetable/${inputValue}`, formData , header , { widthCredentials: true })\r\n      .then((res)=>{\r\n        if(res.status === 200){\r\n            return Swal.fire({\r\n              icon: \"success\",\r\n              title: `등록되었습니다.`,\r\n              showConfirmButton: false,\r\n              width: \"auto\",\r\n              timer: 1500,\r\n            }).then(()=>{\r\n              onSearchFunc();\r\n            });\r\n          }\r\n      })\r\n      .catch((err) => {\r\n        openNotification('error','서버와의 에러가 발생했습니다.');\r\n      });\r\n  }\r\n\r\n  const confirmFunc = (formData) => {\r\n    if (nameCheck === false) {\r\n      return openNotification('error', '강의실을 입력 후 Search 버튼을 눌러주세요');\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        handleUpload();\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChangeFunc = (name) => {\r\n    setNameCheck(false);\r\n    setInputValue(name);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios\r\n    .get(`https://sjswbot.site/timetable/${inputValue}`)\r\n    .catch((error) => {\r\n      openNotification('error', '서버와의 에러가 발생했습니다.');\r\n    });\r\n\r\n    if (!response.data.result) {\r\n      return openNotification('error', '존재하지 않는 강의실 입니다.');\r\n    } else {\r\n      openNotification('success', '강의실 정보를 성공적으로 불러왔습니다.');\r\n      setNameCheck(true);\r\n      setData({\r\n        modifier: response.data.result.User.username + \" 조교님\",\r\n        time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n        link: response.data.result.link,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onSearchFunc = async () => {\r\n    let value = inputValue.replace(/(\\s*)/g, \"\"); // 띄어쓰기 제거\r\n    if (value.length < 1) {\r\n      return openNotification('error', '강의실을 입력 후 Search 버튼을 눌러주세요');\r\n    }\r\n    const response = await axios\r\n      .get(`https://sjswbot.site/timetable/${value}`)\r\n      .catch((error) => {\r\n        openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n\r\n    console.log(response);\r\n    if (!response.data.result) {\r\n      return openNotification('error', '존재하지 않는 강의실 입니다.');\r\n    } else {\r\n      openNotification('success', '강의실 정보를 성공적으로 불러왔습니다.');\r\n      setNameCheck(true);\r\n      setData({\r\n        modifier: response.data.result.User.username + \" 조교님\",\r\n        time:\r\n        \"(\" + moment(response.data.result.time).format(\"LLL\") + \")\",\r\n        link: response.data.result.link,\r\n      });\r\n    }\r\n    // getData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let p_list = [];\r\n    axios.get(`https://sjswbot.site/timetable/list`).then((res) => {\r\n    console.log(res.data.result);\r\n    res.data.result.map((v, i) => {\r\n        p_list.push({ value: v.classname });\r\n    });\r\n    })\r\n    setlist(p_list);\r\n    console.log(p_list);\r\n  },[]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046546-3eb1c980-25d6-11eb-91d1-9e65182a72cb.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046550-3fe2f680-25d6-11eb-8f35-49df97a88419.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/106379499-cba73a80-63ef-11eb-83dc-17489826a476.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          margin: \"0 0 2rem 0\",\r\n          width: \"40rem\",\r\n        }}\r\n      >\r\n        <p style={{ width: \"6rem\" }}>강의실:</p>\r\n        <AutoComplete\r\n          name=\"classname\"\r\n          style={{ width: \"100%\", marginRight: \"1rem\" }}\r\n          options={list}\r\n          placeholder=\"강의실을 입력해주세요\"\r\n          filterOption={(input, option) => option.value.indexOf(input) !== -1}\r\n          onChange={onChangeFunc}\r\n        />\r\n        <Button icon={<SearchOutlined />} onClick={onSearchFunc}>\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        {\r\n          data.link?\r\n          <Form.Item\r\n            label = \"현재 시간표\"\r\n          >\r\n            <Image src={\"https://sjswbot.site\"+data.link} style={{maxWidth:\"40rem\"}}></Image>\r\n          </Form.Item>\r\n          :null\r\n        }\r\n        {\r\n          data.link?\r\n          <Form.Item \r\n            label=\"수정 시간표\" \r\n            name=\"img\" \r\n          >\r\n            <ImageUploader\r\n                  withIcon={true}\r\n                  withPreview={true}\r\n                  buttonText='이미지를 업로드해주세요'\r\n                  onChange = {(pictureFiles,pictureDataURLs)=>setFileList(pictureFiles)}\r\n                  imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                  maxFileSize={5242880}\r\n                  singleImage\r\n            />\r\n          </Form.Item>\r\n          :null\r\n        }   \r\n\r\n        <Divider />\r\n        {\r\n          data.modifier\r\n          ?<p style={{ width: \"100%\", color: \"gray\",cursor:\"pointer\" }}>\r\n            {data.modifier}\r\n            <br />\r\n            {data.time}\r\n          </p>\r\n          :null\r\n        }\r\n        <Form.Item style={{margin:'3rem 0 0'}}>\r\n            <center>\r\n                <Button icon={<CloudUploadOutlined />} htmlType=\"submit\" style={{float:'left', marginLeft:'12rem'}}>\r\n                    수정하기\r\n                </Button>\r\n                <Button icon={<CloudUploadOutlined />} onClick={onDeleteFunc} style={{float:'right',marginRight:'12rem'}}>\r\n                    삭제하기\r\n                </Button>\r\n            </center>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimetableModify;\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n  Tabs,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport TimetableAdd from './TimetableAdd';\r\nimport TimetableModify from './TimetableModify';\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst { TabPane } = Tabs;\r\n\r\nconst Timetable = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>강의실 시간표 수정 페이지</p>\r\n      </div>\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"강의실 시간표 추가\" key=\"1\">\r\n          <TimetableAdd/>\r\n        </TabPane>\r\n        <TabPane tab=\"강의실 시간표 수정/삭제\" key=\"2\">\r\n          <TimetableModify/>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timetable;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Divider,\r\n  notification,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 2,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst BestqaData = ({ data, key }) => {\r\n  const [form] = Form.useForm();\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n    console.log(formData);\r\n    const response = await axios\r\n      .put(`https://sjswbot.site/bestqa/${data.idx}`, formData,header,{ widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        } else {\r\n          return openNotification('error', '서버와의 에러가 발생했습니다.');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        return openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height:\"auto\",\r\n        margin:\"0.5rem 0\"\r\n      }}\r\n    >\r\n      <Form\r\n        initialValues={{ id: data.idx, question: data.question }}\r\n        onFinish={confirmFunc}\r\n        autoComplete=\"off\"\r\n        form={form}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Form.Item label={`TOP ${data.idx} `} name=\"question\">\r\n          <Input style={{ width: \"30vw\" }} />\r\n        </Form.Item>\r\n        <Form.Item colon={false} wrapperCol={{ span: 11, offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <div style={{color: \"gray\" ,marginLeft:'5rem'}}>\r\n            {data.User.username} 조교님\r\n            <br />({moment(data.updatedAt).format(\"LLL\")})\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Bestqa = () => {\r\n  const [data, setData] = React.useState([]);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\"https://sjswbot.site/bestqa\");\r\n    console.log(response);\r\n    setData(response.data.result);\r\n  }, []);\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>자주 묻는 질문 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047553-b502fb80-25d7-11eb-898a-7b1c46473b0f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047557-b6342880-25d7-11eb-8fcf-7256e6887d65.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047561-b7fdec00-25d7-11eb-87a3-9b443cd8be5a.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/106379756-8e43ac80-63f1-11eb-9367-b7cc5cdd97d0.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      {data.map((it, i) => {\r\n        return <BestqaData key={i} data={it} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bestqa;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col, notification, Divider, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 1.5,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst DataModifylist = ({ data, getData, setPage, page, count ,pageSize}) => {\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://sjswbot.site/fixRequest/${data.idx}`, header, { widthCredentials: true })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        return openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n    setPage(page);\r\n    getData();\r\n    return openNotification('success', '데이터를 삭제했습니다!');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ margin: \"1vh 0\" }} />\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0.1rem 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col\r\n          flex={1}\r\n          style={{ paddingLeft: \"2rem\", width: \"5%\", fontWeight: \"bold\" }}\r\n        >\r\n          {count}\r\n        </Col>\r\n        <Col flex={8} style={{ paddingLeft: \"2rem\", width: \"60%\" }}>\r\n          {data.question}\r\n        </Col>\r\n        <Col flex={2} style={{ width: \"15%\" }}>\r\n          {moment(data.updatedAt).format(\"LLL\")}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button\r\n            onClick={confirmFunc}\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"RGB(255,0,0,0.6)\", border: \"none\" }}\r\n          >\r\n            삭제하기\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataModifylist;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport DataModifylist from \"./DataModifyList\";\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst DataModify = (props) => {\r\n  const department = localStorage.getItem(\"department\");\r\n  const pageSize = parseInt(window.innerHeight / 70);\r\n  const [dataSize,setdataSize] = React.useState(0);\r\n  let count = 0;\r\n  const [size, setSize] = React.useState(0);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n  \r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = () => {\r\n    // const _data = data.slice(\r\n    //   (count - 1) * pageSize,\r\n    //   (count - 1) * pageSize + pageSize\r\n    // );\r\n    // data page에 따라 자르는 작업\r\n\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    return data.map((it, i) => {\r\n      // 게시글 번호 계산\r\n\r\n      return (\r\n        <DataModifylist\r\n          key={i}\r\n          data={it}\r\n          count={dataSize - i - pageSize * (page)}\r\n          getData={getData}\r\n          setPage={setPage}\r\n          pageSize={pageSize}\r\n          page={page}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    setPage(pagenum-1);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://sjswbot.site/fixRequest?page=${page}&size=${pageSize}`, header, { widthCredentials: true });\r\n\r\n    console.log(`https://sjswbot.site/fixRequest?page=${page}&size=${pageSize}`);\r\n    setdataSize(response.data.result.count);\r\n    setData(response.data.result.rows);\r\n    PageRefresh();\r\n    // setData(response.data.values.reverse());\r\n  },[page,setPage]);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, [page,setPage]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>유저들의 데이터 수정 요청</p>\r\n      </div>\r\n      데이터에 오류가 있는 질문들의 수정 요청입니다.\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"10px 0 2rem\" }}>\r\n        <Link to=\"/question\">\r\n          <u>질문 수정페이지</u>\r\n        </Link>{\" \"}\r\n        에서 질문에 대한 답변을 수정해주세요 😊\r\n      </div>\r\n      {/* {data.map((it,i)=>{\r\n        it.count=data.length-i;\r\n        it.props=props;\r\n        return(\r\n            <QuestionList key = {i} data={it} getData={getData}/>\r\n        )\r\n      })} */}\r\n      {PageRefresh()}\r\n      <div style={{ marginBottom: \"2rem\" }} />\r\n      <Pagination\r\n        current={page+1}\r\n        total={dataSize}\r\n        defaultPageSize={pageSize}\r\n        onChange={onPageChange}\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataModify;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col, Divider,notification, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n    notification[type]({\r\n      description: comment,\r\n      placement: \"bottomRight\",\r\n      duration: 1.5,\r\n      width: \"auto\",\r\n    });\r\n};\r\n\r\nconst Fallbacklist = ({ data, getData, setPage, page, count ,pageSize}) => {\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://sjswbot.site/fallback/${data.idx}`, header, { widthCredentials: true })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        return openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n    setPage(page);\r\n    getData();\r\n    return openNotification('success', '데이터를 삭제했습니다!');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ margin: \"1vh 0\" }} />\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0.1rem 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col\r\n          flex={1}\r\n          style={{ paddingLeft: \"2rem\", width: \"5%\", fontWeight: \"bold\" }}\r\n        >\r\n          {count}\r\n        </Col>\r\n        <Col flex={8} style={{ paddingLeft: \"2rem\", width: \"60%\" }}>\r\n          {data.question}\r\n        </Col>\r\n        <Col flex={2} style={{ width: \"15%\" }}>\r\n          {moment(data.updatedAt).format(\"LLL\")}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button\r\n            onClick={confirmFunc}\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"RGB(255,0,0,0.6)\", border: \"none\" }}\r\n          >\r\n            삭제하기\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Fallbacklist;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport FallbackList from \"./Fallbacklist\";\r\nimport styled from \"styled-components\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport { CloudUploadOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst AdminPage = (props) => {\r\n  const role = localStorage.getItem(\"role\");\r\n  const department = localStorage.getItem(\"department\");\r\n  const pageSize = parseInt(window.innerHeight / 70);\r\n  const [dataSize,setdataSize] = React.useState(0);\r\n  let count = 0;\r\n  const [size, setSize] = React.useState(0);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n  \r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = () => {\r\n    // const _data = data.slice(\r\n    //   (count - 1) * pageSize,\r\n    //   (count - 1) * pageSize + pageSize\r\n    // );\r\n    // data page에 따라 자르는 작업\r\n\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    return data.map((it, i) => {\r\n      // 게시글 번호 계산\r\n\r\n      return (\r\n        <FallbackList\r\n          key={i}\r\n          data={it}\r\n          count={dataSize - i - pageSize * (page)}\r\n          getData={getData}\r\n          setPage={setPage}\r\n          pageSize={pageSize}\r\n          page={page}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    setPage(pagenum-1);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://sjswbot.site/fallback?page=${page}&size=${pageSize}`, header, { widthCredentials: true });\r\n    setdataSize(response.data.result.count);\r\n    setData(response.data.result.rows);\r\n    PageRefresh();\r\n    // setData(response.data.values.reverse());\r\n  },[page,setPage]);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, [page,setPage]);\r\n\r\n  return (\r\n      <>\r\n      {role === \"2\" ? (\r\n        <div\r\n        style={{\r\n          margin: \"3% 10%\",\r\n          padding: \"1% 0%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\",\r\n          background: \"white\",\r\n          borderRadius: \"0.5rem\",\r\n          border: \"2px solid lightgray\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontSize: \"30px\",\r\n            fontFamily: \"Gothic A1\",\r\n          }}\r\n        >\r\n          <p>관리자 페이지</p>\r\n        </div>\r\n        <p>챗봇내에서 발화를 인식하지 못한 폴백 문장들입니다.</p>\r\n        {/* {data.map((it,i)=>{\r\n          it.count=data.length-i;\r\n          it.props=props;\r\n          return(\r\n              <QuestionList key = {i} data={it} getData={getData}/>\r\n          )\r\n        })} */}\r\n        {PageRefresh()}\r\n        <div style={{ marginBottom: \"2rem\" }} />\r\n        <Pagination\r\n          current={page+1}\r\n          total={dataSize}\r\n          defaultPageSize={pageSize}\r\n          showSizeChanger={false}\r\n          onChange={onPageChange}\r\n          style={{ marginBottom: \"1.5rem\" }}\r\n        />\r\n      </div>\r\n      ):\r\n      <p>관리자만 접근 가능한 페이지 입니다.</p>\r\n      }\r\n      </>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authUser } from \"../actions/userAction\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nexport default function (Component, option , adminRoute = null){\r\n    //option\r\n    //null => 아무나 출입 가능\r\n    //true => 로그인한 유저만 출입 가능\r\n    //false => 로그인한 유저는 출입 불가능\r\n\r\n    function AuthCheck(props){\r\n        const dispatch = useDispatch();\r\n        let _data={};\r\n        useEffect(() =>{\r\n        dispatch(authUser()).then((res) =>{\r\n            if(!res){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title:'로그인이 필요합니다',\r\n                    showConfirmButton: true,\r\n                    width:'25rem',\r\n                    timer: 2000,\r\n                }).then(props.history.push(\"/\"));\r\n            }\r\n            else{\r\n                _data = Object.assign(_data,res);\r\n            }\r\n        });\r\n    },[]);\r\n            return <Component data={_data}/>\r\n    }\r\n\r\n    return AuthCheck;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Menu from \"../components/Menu\";\r\nimport Welcome from \"./Welcome\";\r\nimport Curriculum from \"./Curriculum\";\r\nimport Status from \"./Status\";\r\nimport Notice from \"./Notice\";\r\nimport Question from \"./Question\";\r\nimport Userquestion from \"./Userquestion\";\r\nimport Professor from \"./Professor\";\r\nimport Timetable from \"./Timetable\";\r\nimport Bestqa from \"./Bestqa\";\r\nimport Datamodify from \"./DataModify\";\r\nimport Adminpage from \"./Adminpage\";\r\nimport oc from \"open-color\";\r\nimport Auth from \"../hoc/auth\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 800px;\r\n  min-height: 800px;\r\n  margin-bottom: 3rem;\r\n  margin-top: 4rem;\r\n  padding-left: 1rem;\r\n  -ms-user-select: none;\r\n  -moz-user-select: -moz-none;\r\n  -khtml-user-select: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n`;\r\n\r\nconst MenuBar = styled.div`\r\n  width: 12rem;\r\n  height: 85%;\r\n  background-color: ${oc.gray[1]};\r\n  border-radius: 1rem;\r\n  position: fixed;\r\n  z-index: 2;\r\n  border: 4px groove ${oc.gray[4]};\r\n  \"&:hover\": {\r\n    background: \"#efefef\";\r\n  }\r\n  // @media (max-width: 767px) {\r\n  //     display:none;\r\n  // }\r\n`;\r\n\r\nconst Contents = styled.div`\r\n  width: 90%;\r\n  height: 85%;\r\n  min-height: 600px;\r\n  min-width: 800px;\r\n  margin: 2rem 2rem 1rem 13rem;\r\n  border-radius: 0.5rem;\r\n  background-color: ${oc.gray[1]};\r\n  border: 2px groove ${oc.gray[4]};\r\n`;\r\n\r\nconst MainPage = (props) => {\r\n  const userdata = props.data;\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <Container>\r\n        <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n          <MenuBar style={{ marginTop: \"2rem\" }}>\r\n            <Menu />\r\n          </MenuBar>\r\n          <Contents>\r\n            <Switch>\r\n              <Route path=\"/status\" component={Auth(Status)} exact />\r\n              <Route path=\"/question\" component={Question} exact />\r\n              <Route path=\"/userquestion\" component={Userquestion} exact />\r\n              <Route path=\"/curriculum\" component={Auth(Curriculum)} exact />\r\n              <Route path=\"/notice\" component={Auth(Notice)} exact />\r\n              <Route path=\"/professor\" component={Auth(Professor)} exact />\r\n              <Route path=\"/timetable\" component={Auth(Timetable)} exact />\r\n              <Route path=\"/bestqa\" component={Auth(Bestqa)} exact />\r\n              <Route path=\"/datamodify\" component={Auth(Datamodify)} exact />\r\n              <Route path=\"/main\" component={Auth(Welcome)} exact />\r\n              <Route path=\"/adminpage\" component={Adminpage} exact />\r\n            </Switch>\r\n          </Contents>\r\n        </Router>\r\n      </Container>\r\n      {/* <Footer/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { Component, useState,useEffect } from \"react\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { registerUser } from \"../actions/userAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  AutoComplete,\r\n  Modal,\r\n} from \"antd\";\r\nimport { QuestionCircleOutlined, LeftOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  min-width: 800px;\r\n  min-height: 600px;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #a31432;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Whitespace = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 6rem;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-radius: 2rem;\r\n`;\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst Title = styled.div`\r\n  font-size: 3rem;\r\n  color: #a31432;\r\n  font-family: \"Rajdhani\";\r\n  margin-top: 5rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst Backwards = styled.div`\r\n  font-size: 2.8rem;\r\n  left: 7rem;\r\n  top: 3.5rem;\r\n  color: #a31432;\r\n  position: absolute;\r\n  &:hover {\r\n    color: ${oc.red[8]};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Signup = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [emailAuthform] = Form.useForm();\r\n  const [_id, setId] = useState(\"\");\r\n  const [_password, setPassword] = useState(\"\");\r\n  const [_department, setDepartment] = useState(\"\");\r\n  const [_email, setEmail] = useState(\"\");\r\n  const [_name, setName] = useState(\"\");\r\n  const [_phonenum, setPhonenum] = useState(\"\");\r\n  const [id_duplication, checkDup] = useState(false);\r\n  const [email_check, checkEmail] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [email_auth, setEmailAuth] = useState(0);\r\n  const [dep,setDep] = useState([]);\r\n  const sejongemail = \"@sejong.ac.kr\";\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    setEmailAuth(\"\");\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n    setEmailAuth(\"\");\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n    checkDup(false);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n  const onEmailHandler = (e) => {\r\n    setEmail(e.currentTarget.value);\r\n    checkEmail(false);\r\n  };\r\n  const onNameHandler = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const onPhoneHandler = (e) => {\r\n    setPhonenum(e.currentTarget.value);\r\n  };\r\n\r\n  const loadDep = () => {\r\n    axios\r\n      .get(\"https://sjswbot.site/dep\")\r\n      .then((res) => {\r\n        setDep(res.data.result);\r\n        console.log(dep);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"에러발생\")\r\n      });\r\n  }\r\n\r\n  const onEmailCheckSubmit = (e) => {\r\n    console.log({\r\n      email: _email,\r\n      authNumber: email_auth,\r\n    });\r\n    axios\r\n      .post(\"https://sjswbot.site/mail/verify\", {\r\n        email: _email,\r\n        authNumber: email_auth,\r\n      })\r\n      .then((res) => {\r\n        console.log(res)\r\n        if (res.status === 200) {\r\n          handleCancel();\r\n          setEmail(true);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            text: res.data.message,\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 2000,\r\n          });\r\n        } \r\n        else {\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            text: res.data.message,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"인증을 실패 하였습니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n\r\n  const onEmailCheckHandler = (e) => {\r\n    setEmailAuth(e.currentTarget.value);\r\n    console.log(email_auth);\r\n  };\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    setDepartment(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onEmailHadnler = (e) => {\r\n    if (_email.indexOf(sejongemail) !== _email.length - sejongemail.length) {\r\n      return Swal.fire({\r\n        icon: \"warning\",\r\n        text: \"세종대학교 조교 이메일(@sejong.ac.kr) 형식이 아닙니다\",\r\n        showConfirmButton: true,\r\n        width: \"auto\",\r\n      });\r\n    }\r\n    // 세종대 이메일 검사\r\n\r\n    setVisible(true);\r\n\r\n    axios\r\n      .post(\"https://sjswbot.site/mail/send\", { to: _email })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log({ to: _email });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"이메일이 발송되지 않았습니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n\r\n  const onDuplicationHadnler = (e) => {\r\n    if (_id.length === 0) {\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        text: \"아이디를 입력해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 1500,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"https://sjswbot.site/auth/idCheck\", {userid:_id})\r\n      .then((res) => {\r\n        console.log(res)\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            text: res.data.message,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n\r\n          checkDup(true);\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            text: res.data.message,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n\r\n          checkDup(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: error.response.data.message,\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n\r\n        checkDup(false);\r\n      });\r\n\r\n      checkDup(true);\r\n  };\r\n  const linktoMain = (e) => {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n\r\n    let body = {\r\n      email: _email,\r\n      username: _name,\r\n      password: _password,\r\n      userid: _id,\r\n      phoneNumber: _phonenum,\r\n      department: _department,\r\n    };\r\n\r\n    if (id_duplication === false) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"가입 실패\",\r\n        text: \"아이디 중복검사를 완료해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 2000,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (email_check === false) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"가입 실패\",\r\n        text: \"이메일 인증을 완료해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 2000,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    dispatch(registerUser(body))\r\n      .then((res) => {\r\n        if (res.status === 409) {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"가입 실패\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 2000,\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"가입 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 2000,\r\n          });\r\n          props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    loadDep();\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onSubmitHandler}\r\n        autoComplete=\"off\"\r\n        scrollToFirstError\r\n      >\r\n        <Container>\r\n          <Whitespace>\r\n            <Backwards>\r\n              <LeftOutlined onClick={linktoMain} />\r\n            </Backwards>\r\n            <Title>\r\n              <p>Sign up</p>\r\n            </Title>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"6rem\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n                name=\"id\"\r\n                label=\"아이디\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"아이디를 입력해주세요.\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input onChange={onIdHandler} />\r\n              </Form.Item>\r\n              <Button\r\n                style={{\r\n                  position: \"relatvive\",\r\n                  width: \"5rem\",\r\n                  fontSize: \"0.7rem\",\r\n                  marginLeft: \"1rem\",\r\n                }}\r\n                onClick={onDuplicationHadnler}\r\n              >\r\n                중복검사\r\n              </Button>\r\n            </div>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"password\"\r\n              label=\"비밀번호\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"패스워드를 입력해주세요.\",\r\n                },\r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input.Password onChange={onPasswordHanlder} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"confirm\"\r\n              label=\"비밀번호 확인\"\r\n              dependencies={[\"password\"]}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"패스워드를 확인해주세요\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\"비밀번호가 일치하지 않습니다!\");\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"name\"\r\n              label=\"이름\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"이름을 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input onChange={onNameHandler} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"department\"\r\n              label=\"학과\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"학과를 선택해주세요\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select onChange={onChangeSelectFunc}>\r\n                {dep.map(i => (i.department != \"관리자\") ? <Option value={i.idx}>{i.department}</Option>:null)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"6rem\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n                name=\"email\"\r\n                label=\"이메일\"\r\n                initialValue=\"\"\r\n                hasFeedback\r\n                rules={[\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"올바른 이메일이 아닙니다\",\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: \"이메일을 입력해주세요.\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                      if (\r\n                        value.indexOf(sejongemail) ===\r\n                          value.length - sejongemail.length ||\r\n                        !value\r\n                      ) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\"\");\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input\r\n                  onChange={onEmailHandler}\r\n                  placeholder=\"abc@sejong.ac.kr\"\r\n                />\r\n              </Form.Item>\r\n              <Button\r\n                style={{\r\n                  position: \"relatvive\",\r\n                  width: \"5rem\",\r\n                  fontSize: \"0.7rem\",\r\n                  marginLeft: \"1rem\",\r\n                }}\r\n                onClick={onEmailHadnler}\r\n              >\r\n                메일인증\r\n              </Button>\r\n            </div>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"phonenumber\"\r\n              label=\"휴대폰 번호\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"휴대폰 번호를 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input onChange={onPhoneHandler} />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{\r\n                  backgroundColor: \"#a31432\",\r\n                  border: \"none\",\r\n                  margin: \"0.5rem 1rem 0\",\r\n                }}\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </Form.Item>\r\n          </Whitespace>\r\n        </Container>\r\n      </Form>\r\n\r\n      <Modal\r\n        title=\"이메일 인증\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        maskClosable={false}\r\n        footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n        width=\"40rem\"\r\n      >\r\n        <Form\r\n          form={emailAuthform}\r\n          name=\"emailCheck\"\r\n          onFinish={onEmailCheckSubmit}\r\n          autoComplete=\"off\"\r\n          style={{ width: \"auto\" }}\r\n        >\r\n          <Form.Item\r\n            style={{ width: \"auto\" }}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"인증번호를 입력해주세요.\",\r\n              },\r\n            ]}\r\n          >\r\n            <p>{_email}로 인증번호를 보냈습니다.</p>\r\n\r\n            <Input\r\n              onChange={onEmailCheckHandler}\r\n              placeholder=\"인증번호를 입력해주세요\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n            <Button htmlType=\"submit\">인증하기</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { Component, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Login from \"./pages/Login\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport Signup from \"./pages/Signup\";\r\nimport \"./App.css\";\r\nimport Auth from \"./hoc/auth\";\r\n\r\nconst Container = styled.div`\r\n  -ms-user-select: none;\r\n  -moz-user-select: -moz-none;\r\n  -khtml-user-select: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n`;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n          <Switch>\r\n            <Route path=\"/\" component={Login} exact />\r\n            <Route path=\"/signup\" component={Signup} exact />\r\n            <Route path=\"/main\" component={Auth(MainPage)} exact />\r\n          </Switch>\r\n        </Router>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { REGISTER_USER, LOGIN_USER,LOGOUT_USER,REGISTER_ERROR,AUTH_USER,LOGIN_SUCCESS,AUTH_SUCCESS,AUTH_FAILED } from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n  loggedIn : false,\r\n  user : {},\r\n}\r\n\r\nexport default function (state = defaultState, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return { ...state, loggedIn:false, user:{}};\r\n    case REGISTER_ERROR:\r\n        return { ...state, loggedIn:false, user:{}};\r\n    case LOGIN_USER:\r\n      return { ...state, loggedIn:true, user:{...action.payload} };\r\n    case LOGOUT_USER:\r\n      return { ...state, loggedIn:false, user:{} };\r\n    case AUTH_USER:\r\n      return {...state,loggedIn:true,user:{...action.payload}};\r\n    case AUTH_FAILED:\r\n      return {...state,loggedIn:false,user:{}};\r\n    case AUTH_SUCCESS:\r\n      return {...state,loggedIn:true};\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport user from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"antd/dist/antd.css\";\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport promiseMiddlerware from \"redux-promise\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst createStoreWidthMiddleware = applyMiddleware(\r\n  promiseMiddlerware,\r\n  reduxThunk\r\n)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n    store={createStoreWidthMiddleware(\r\n      reducer,\r\n      //개발자 도구를 사용하기 위한 설정\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )}>\r\n    <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}