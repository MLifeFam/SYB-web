{"version":3,"sources":["actions/types.js","utils/axios.js","actions/userAction.js","pages/Login.js","components/Header.js","components/Footer.js","components/Menu.js","pages/Welcome.js","pages/Curriculum.js","pages/Status.js","pages/Notice.js","pages/QuestionList.js","pages/Question.js","pages/Userquestionlist.js","pages/Userquestion.js","pages/Professor.js","pages/Timetable.js","pages/Bestqa.js","pages/DataModifyList.js","pages/DataModify.js","hoc/auth.js","pages/MainPage.js","pages/Signup.js","App.js","serviceWorker.js","reducer/userReducer.js","reducer/index.js","index.js"],"names":["REGISTER_USER","LOGIN_USER","LOGOUT_USER","AUTH_USER","REGISTER_ERROR","AUTH_SUCCESS","AUTH_FAILED","axios","defaults","withCredentials","authUser","props","token","localStorage","getItem","header","headers","authorization","dispatch","get","widthCredentials","then","res","type","department","num","dept","data","setItem","username","catch","error","withReactContent","Swal","LoginForm","styled","div","Logo","Whitespace","Login","useState","_id","setId","_password","setPassword","useDispatch","style","marginBottom","name","className","onFinish","e","clear","dataToSubmit","uid","userid","payload","post","response","loginUser","password","accessToken","result","status","loginSuccess","history","push","fire","icon","title","text","showConfirmButton","width","timer","err","console","log","autoComplete","Item","rules","required","message","paddingBottom","prefix","UserOutlined","paddingRight","onChange","currentTarget","value","placeholder","LockOutlined","htmlType","backgroundColor","border","margin","to","Spacer","Positioner","Logout","oc","gray","GradientBorder","UserContainer","red","HeaderContents","withRouter","fontSize","letterSpacing","fontFamily","color","padding","marginRight","borderRadius","onClick","MenuContainer","MenuContent","MenuItem","Menu","useHistory","ScrollTop","window","scrollTo","top","behavior","textDecoration","NotificationOutlined","BulbOutlined","QuestionCircleOutlined","WarningOutlined","ClockCircleOutlined","BarsOutlined","CalendarOutlined","AuditOutlined","LayoutOutlined","MessageOutlined","TextArea","Select","Option","Input","Welcome","Form","useForm","form","React","visible","setVisible","setData","confirmFunc","formData","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","isConfirmed","onFinishFunc","FormHandler","CancleModify","a","Object","entries","key","undefined","NaN","modifier","put","toast","onValuesChange","changedValue","allValue","getData","useCallback","content","time","moment","add","format","setFieldsValue","useEffect","display","alignItems","flexDirection","background","textAlign","justifyContent","onFieldsChange","resize","autoSize","colon","wrapperCol","offset","bordered","readOnly","Curriculum","link","getFieldValue","height","src","label","CloudUploadOutlined","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Status","id","isDisable","setDisable","comment","phoneNumber","Date","toLocaleDateString","visibility","noStyle","shouldUpdate","preValues","currentValues","messsage","disabled","Notice","QuestionList","setPage","page","onDeleteFunc","delete","faqno","success","onChangeFunc","category1","category2","category3","category4","category5","question","questionAnswer","landingUrl","imageinfo","orientation","count","justify","flex","marginLeft","onOk","onCancel","maskClosable","footer","initialvalues","span","ExclamationCircleOutlined","Question","pageSize","parseInt","innerHeight","reverse","_data","slice","map","it","i","length","PageRefresh","current","total","defaultPageSize","pagenum","Userquestionlist","idx","fontWeight","Userquestion","Professor","list","setlist","inputValue","setInputValue","nameCheck","setNameCheck","onSearchFunc","class_position","phone_number","email","p_list","v","options","filterOption","input","option","indexOf","SearchOutlined","Timetable","replace","classname","BestqaData","initialValues","Bestqa","DataModifylist","paddingLeft","DataModify","Component","AuthCheck","assign","Container","MenuBar","Contents","MainPage","basename","process","marginTop","path","component","Auth","exact","datamodify","Title","AutoComplete","formItemLayout","labelCol","xs","sm","tailFormItemLayout","Backwards","Signup","emailAuthform","_department","setDepartment","_email","setEmail","_name","setName","_phonenum","setPhonenum","id_duplication","checkDup","email_check","checkEmail","email_auth","setEmailAuth","sejongemail","handleCancel","onChangeSelectFunc","scrollToFirstError","LeftOutlined","hasFeedback","Password","dependencies","validator","rule","Promise","reject","resolve","initialValue","authNumber","App","Boolean","location","hostname","match","defaultState","loggedIn","user","rootReducer","combineReducers","state","action","createStoreWidthMiddleware","applyMiddleware","promiseMiddlerware","reduxThunk","createStore","ReactDOM","render","store","reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.858de7be.chunk.js","sourcesContent":["export const REGISTER_USER = \"REGISTER_USER\";\r\nexport const LOGIN_USER =\"LOGIN_USER\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const AUTH_USER = \"AUTH_USER\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAILED = \"AUTH_FAILED\";","import axios from \"axios\";\r\n\r\nconst DOMAIN = \"https://mfam.site\";\r\naxios.defaults.withCredentials = true; // 쿠키 데이터를 전송받기 위해\r\nexport const request = (method, url, data) => {\r\n  return axios({\r\n    method,\r\n    url: DOMAIN + url,\r\n    data,\r\n  })\r\n    .then((res) => res)\r\n    .catch((err) => console.log(err));\r\n};","import {\r\n  REGISTER_USER,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  AUTH_USER,\r\n  REGISTER_ERROR,\r\n  LOGIN_SUCCESS,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAILED,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport { request } from \"../utils/axios\";\r\n\r\nexport function registerUser(dataToSubmit) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: REGISTER_USER,\r\n    });\r\n\r\n    return axios\r\n      .post(\"https://mfam.site/auth/signup\", dataToSubmit)\r\n      .then((response) => response)\r\n      .catch((error) => error.response);\r\n  };\r\n}\r\n\r\n// export function loginUser(dataToSubmit) {\r\n//   const data = request(\"post\", \"/auth/login\", dataToSubmit);\r\n//   return {\r\n//       type: LOGIN_USER,\r\n//       payload: data,\r\n//   };\r\n// }\r\n\r\nexport function loginUser(dataToSubmit) {\r\n  const uid = dataToSubmit.userid;\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_USER,\r\n      payload: uid,\r\n    });\r\n\r\n    return axios\r\n      .post(\"https://mfam.site/auth/login\", dataToSubmit)\r\n      .then((response) => response)\r\n      .catch((error) => error.response);\r\n  };\r\n}\r\n\r\nexport function loginSuccess(accessToken) {\r\n  localStorage.setItem(\"user_token\", accessToken);\r\n  //axios.defaults.headers.common['Authorization'] = accessToken;\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n    });\r\n  };\r\n}\r\n\r\nexport function logoutUser() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGOUT_USER,\r\n    });\r\n  };\r\n}\r\n\r\nexport function authUser(props) {\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(\"https://mfam.site/auth/check\", header, { widthCredentials: true })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: AUTH_SUCCESS,\r\n        });\r\n\r\n        const department = dept(res.data.data.department);\r\n\r\n        localStorage.setItem(\"username\", res.data.data.username);\r\n        localStorage.setItem(\"department\", department);\r\n\r\n        return res.data.data;\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: AUTH_FAILED,\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nfunction dept(num) {\r\n  switch (num) {\r\n    case 0:\r\n      return \"컴퓨터공학과\";\r\n      break;\r\n    case 1:\r\n      return \"소프트웨어학과\";\r\n      break;\r\n    case 2:\r\n      return \"정보보호학과\";\r\n      break;\r\n    case 3:\r\n      return \"데이터사이언스학과\";\r\n      break;\r\n    case 4:\r\n      return \"지능기전공학부\";\r\n      break;\r\n    case 5:\r\n      return \"디자인이노베이션\";\r\n      break;\r\n    case 6:\r\n      return \"만화애니메이션텍\";\r\n      break;\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n","import React, { Component, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { loginUser, authUser, loginSuccess } from \"../actions/userAction\";\r\nimport axios from \"axios\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst LoginForm = styled.div`\r\n  display: flex;\r\n  min-width: 800px;\r\n  min-height: 600px;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #a31432;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  font-size: 6rem;\r\n  letter-spacing: 1rem;\r\n  color: #a31432;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Whitespace = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 6rem;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-radius: 2rem;\r\n`;\r\n\r\nconst Login = (props) => {\r\n  const [_id, setId] = useState(\"\");\r\n  const [_password, setPassword] = useState(\"\");\r\n  const [_studentid, setStudentId] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const onLogin = (e) => {\r\n    localStorage.clear();\r\n    const body = {\r\n      userid: _id,\r\n      password: _password,\r\n    };\r\n\r\n    dispatch(loginUser(body))\r\n      .then((res) => {\r\n        const accessToken = res.data.result.token;\r\n\r\n        if (res.status === 200) {\r\n          dispatch(loginSuccess(accessToken));\r\n          dispatch(authUser()).then((res) => {\r\n            if (res) {\r\n              // res 추가해서 비동기적으로 실행되게 하기위함 (로그인 됬을 때 username 못불러오는 현상 해결)\r\n              props.history.push(\"/main\");\r\n            }\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"로그인 실패\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 2000,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <LoginForm>\r\n      <Whitespace>\r\n        <Logo style={{ marginBottom: \"3%\" }}>SYB ADMIN</Logo>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          onFinish={onLogin}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"id\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"ID를 입력해주세요\",\r\n              },\r\n            ]}\r\n            style={{ paddingBottom: \"0.5rem\" }}\r\n          >\r\n            <Input\r\n              prefix={\r\n                <UserOutlined\r\n                  className=\"site-form-item-icon\"\r\n                  style={{ paddingRight: \"0.5rem\" }}\r\n                />\r\n              }\r\n              onChange={onIdHandler}\r\n              placeholder=\"아이디\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 입력해주세요\",\r\n              },\r\n            ]}\r\n            style={{ paddingBottom: \"1rem\" }}\r\n          >\r\n            <Input\r\n              prefix={\r\n                <LockOutlined\r\n                  className=\"site-form-item-icon\"\r\n                  style={{ paddingRight: \"0.5rem\" }}\r\n                />\r\n              }\r\n              type=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              onChange={onPasswordHanlder}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                backgroundColor: \"#a31432\",\r\n                border: \"none\",\r\n                margin: \"0 1rem\",\r\n              }}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <Link to=\"/signup\" style={{ margin: \"0 1rem\" }}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                style={{ backgroundColor: \"#a31432\", border: \"none\" }}\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </Whitespace>\r\n    </LoginForm>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { Component, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutUser, authUser } from \"../actions/userAction\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst Logo = styled.div`\r\n  font-size: 2.5rem;\r\n  letter-spacing: 15px;\r\n  color: white;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Positioner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #a31432;\r\n  position: fixed;\r\n  top: 0px;\r\n  width: 100%;\r\n  min-width: 800px;\r\n  z-index: 3;\r\n`;\r\n\r\nconst Logout = styled.div`\r\n  font-size: 1.2rem;\r\n  letter-spacing: 3px;\r\n  color: black;\r\n  font-family: \"Rajdhani\";\r\n  &:hover {\r\n    color: ${oc.gray[6]};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst GradientBorder = styled.div`\r\n  height: 10 px;\r\n  background: linear-gradient(to right, black, white);\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n  background-color: white;\r\n  padding: 0 2rem;\r\n  height: 70%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  border-radius: 55px;\r\n  border: 3px solid ${oc.red[8]};\r\n`;\r\n\r\nconst HeaderContents = styled.div`\r\n  width: 100%;\r\n  height: 75px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0 2rem;\r\n  padding-right: 3rem;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nfunction Header(props) {\r\n  const dispatch = useDispatch();\r\n  const username = localStorage.getItem(\"username\");\r\n  const dept = localStorage.getItem(\"department\");\r\n  const onClickHandler = () => {\r\n    dispatch(logoutUser());\r\n    localStorage.clear();\r\n    props.history.push(\"/\");\r\n  };\r\n  return (\r\n    <Positioner>\r\n      <HeaderContents>\r\n        <Logo>SYB ADMIN</Logo>\r\n        <Spacer />\r\n        <UserContainer>\r\n          <Logo\r\n            style={{\r\n              fontSize: \"1.2rem\",\r\n              letterSpacing: \"1px\",\r\n              paddingRight: \"3rem\",\r\n              fontFamily: \"Gothic A1\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            <UserOutlined\r\n              style={{\r\n                color: \"white\",\r\n                padding: \"5px\",\r\n                fontSize: \"1.5rem\",\r\n                marginRight: \"1rem\",\r\n                borderRadius: \"100%\",\r\n                backgroundColor: \"gray\",\r\n              }}\r\n            />\r\n            {dept}&emsp;\r\n            {username} 조교님\r\n          </Logo>\r\n          <Logout onClick={onClickHandler}>Logout</Logout>\r\n        </UserContainer>\r\n      </HeaderContents>\r\n      <GradientBorder />\r\n    </Positioner>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header); // withRouter 해야 'push'를 못찾는 에러 메세지 뜨지 않음\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport oc from \"open-color\";\r\n\r\nconst Logo = styled.div`\r\n  font-size: 2rem;\r\n  letter-spacing: 3px;\r\n  color: white;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Positioner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${oc.gray[8]};\r\n  position: fixed;\r\n  height: 6.5%;\r\n  bottom: 0%;\r\n  width: 100%;\r\n  min-width: 800px;\r\n  z-index: 0;\r\n`;\r\n\r\nconst GradientBorder = styled.div`\r\n  height: 2px;\r\n  margin: 0rem 1rem 0 2rem;\r\n  border-radius: 5rem;\r\n  background: linear-gradient(to right, #a31432, #ffcccb);\r\n`;\r\n\r\nconst HeaderContents = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding-right: 3rem;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nconst Footer = ({ children }) => {\r\n  return (\r\n    <Positioner>\r\n      <HeaderContents>\r\n        <Logo>Footer TEST</Logo>\r\n        <Spacer />\r\n        <Logo>SYB</Logo>\r\n      </HeaderContents>\r\n    </Positioner>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  useHistory,\r\n  Switch,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport {\r\n  NotificationOutlined,\r\n  LoadingOutlined,\r\n  CalendarOutlined,\r\n  BarsOutlined,\r\n  AuditOutlined,\r\n  LayoutOutlined,\r\n  MessageOutlined,\r\n  BulbOutlined,\r\n  ClockCircleOutlined,\r\n  QuestionCircleOutlined,\r\n  WarningOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Divider } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport oc from \"open-color\";\r\n\r\nconst MenuContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 2rem;\r\n`;\r\n\r\nconst MenuContent = styled.div`\r\n  color: ${oc.gray[7]};\r\n  width: 11rem; // 클릭 박스 조정\r\n  height: 100%;\r\n  padding: 1rem 0;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst MenuItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 3rem;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  transition: all 0.2s;\r\n  &:hover {\r\n    background: ${oc.gray[3]};\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst Menu = () => {\r\n  let history = useHistory();\r\n  const ScrollTop = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <MenuContainer>\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/main\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <NotificationOutlined style={{ padding: \"0 1rem\" }} />\r\n            공지사항\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/question\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <BulbOutlined style={{ padding: \"0 1rem\" }} />\r\n            질문 추가 및 수정\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/userquestion\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <QuestionCircleOutlined style={{ padding: \"0 1rem\" }} />\r\n            유저들의 질문\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/datamodify\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <WarningOutlined style={{ padding: \"0 1rem\" }} />\r\n            데이터 수정 요청\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/status\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <ClockCircleOutlined style={{ padding: \"0 1rem\" }} />\r\n            학과 사무실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/curriculum\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <BarsOutlined style={{ padding: \"0 1rem\" }} />\r\n            교과과정\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/notice\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <CalendarOutlined style={{ padding: \"0 1rem\" }} />\r\n            학과공지\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/professor\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <AuditOutlined style={{ padding: \"0 1rem\" }} />\r\n            교수님 연구실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/timetable\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <LayoutOutlined style={{ padding: \"0 1rem\" }} />\r\n            강의실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/bestqa\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <MessageOutlined style={{ padding: \"0 1rem\" }} />\r\n            자주 묻는 질문\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n    </MenuContainer>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Welcome = (props) => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const department = localStorage.getItem(\"department\");\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const CancleModify = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n    formData.modifier = name;\r\n    const response = await axios\r\n      .put(`https://mfam.site/assistantNotice/${department}`, formData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n          setVisible(false);\r\n        } else {\r\n          toast.error(\"서버와의 에러가 발생했습니다!\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const loadContent = () => {\r\n    console.log(visible);\r\n    if (visible === true) {\r\n      return (\r\n        <Form\r\n          form={form}\r\n          onFinish={confirmFunc}\r\n          onFieldsChange={onValuesChange}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"content\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <TextArea\r\n              style={{\r\n                fontSize: \"1rem\",\r\n                width: \"50rem\",\r\n                resize: \"none\",\r\n                padding: \"1rem\",\r\n                textAlign: \"center\",\r\n              }}\r\n              autoSize={true}\r\n              resize=\"none\"\r\n            />\r\n          </Form.Item>\r\n          <div style={{ marginBottom: \"1rem\" }} />\r\n          <Divider />\r\n          <p style={{ width: \"100%\", color: \"gray\", marginBottom: \"2rem\" }}>\r\n            수정 하시려면 수정하기 버튼을, 취소하려면 취소 버튼을 눌러주세요{\" \"}\r\n          </p>\r\n          <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n            <div style={{ display: \"inline-block\" }}>\r\n              <Button htmlType=\"submit\" style={{ margin: \"0 1rem\" }}>\r\n                수정하기\r\n              </Button>\r\n              <Button onClick={CancleModify} style={{ margin: \"0 1rem\" }}>\r\n                취소\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <TextArea\r\n            value={data.content}\r\n            style={{\r\n              fontSize: \"1rem\",\r\n              width: \"50rem\",\r\n              resize: \"none\",\r\n              padding: \"1rem\",\r\n              textAlign: \"center\",\r\n            }}\r\n            bordered={false}\r\n            autoSize={true}\r\n            readOnly={true}\r\n          />\r\n          <div style={{ marginBottom: \"1rem\" }} />\r\n          <Divider />\r\n          <p style={{ width: \"100%\", color: \"gray\" }}>\r\n            {data.modifier} 조교님\r\n            <br />({data.time})\r\n          </p>\r\n          <Button onClick={FormHandler}>수정하기</Button>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\r\n      `https://mfam.site/assistantNotice/${department}`\r\n    );\r\n    console.log(response);\r\n    setData({\r\n      content: response.data.result[0].content,\r\n      modifier: response.data.result[0].modifier,\r\n      time: moment(response.data.result[0].time).add(9, \"hours\").format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      content: response.data.result[0].content,\r\n    });\r\n  }, [department]);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{department} 공지사항 </p>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          padding: \"2rem 2rem\",\r\n        }}\r\n      >\r\n        {loadContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Curriculum = () => {\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const [data, setData] = React.useState([]);\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\r\n      `https://mfam.site/curriculum/${department}`\r\n    );\r\n    console.log(response);\r\n    setData({\r\n      modifier: response.data[0].modifier,\r\n      time: moment(response.data[0].time).add(9, \"hours\").format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      department: response.data[0].department,\r\n      link: response.data[0].link,\r\n    });\r\n  }, [department]);\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    console.log(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (formData) => {\r\n    formData.modifier = localStorage.getItem(\"username\");\r\n    // formdata에 userid 추가\r\n    const response = await axios\r\n      .put(`https://mfam.site/curriculum/${formData.department}`, formData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n    // eslint-disable-next-line\r\n  }, [department, getData]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{department} 교과과정 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468769-55939d00-221f-11eb-9ead-db3cce00f58c.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468774-575d6080-221f-11eb-97ad-fe254308449e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468778-59272400-221f-11eb-95f0-4df3d930c7bb.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"링크\" name=\"link\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Curriculum;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Form, Select, Input, Button, Carousel, Image, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Status = () => {\r\n  const id = localStorage.getItem(\"username\");\r\n  //const [time,setTime] = React.useState(new Date().toLocaleString());\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const [data, setData] = React.useState({});\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/status/${department}`);\r\n    console.log(response.data);\r\n    let data = \"\";\r\n    if (response.data[0].status === 0) {\r\n      data = \"근무중\";\r\n    } else if (response.data[0].status === 1) {\r\n      data = \"부재중\";\r\n    } else {\r\n      data = \"기타내용 입력\";\r\n    }\r\n    setData({\r\n      modifier: response.data[0].modifier,\r\n      time: moment(response.data[0].time).add(9, \"hours\").format(\"LLL\"),\r\n    });\r\n    form.setFieldsValue({\r\n      department: response.data[0].department,\r\n      status: data,\r\n      comment: response.data[0].comment,\r\n      position: response.data[0].position,\r\n      phoneNumber: response.data[0].phoneNumber,\r\n      // time: time,\r\n    });\r\n  });\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n    console.log(Date().toLocaleDateString);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        // setTime(new Date().toLocaleString());\r\n        console.log(formData);\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (data) => {\r\n    data.modifier = localStorage.getItem(\"username\");\r\n    const response = await axios\r\n      .put(`https://mfam.site/status/${data.department}`, data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (form.getFieldValue(\"status\") === \"2\") {\r\n      setDisable(true);\r\n    } else {\r\n      setDisable(false);\r\n    }\r\n  }, [form.data]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(department);\r\n    if (department === \"\") return;\r\n    getData();\r\n  }, [department]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{department} 사무실 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468848-ae633580-221f-11eb-9afd-762834755b54.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468849-af946280-221f-11eb-975b-d12318fc58ad.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468851-b0c58f80-221f-11eb-9868-c9392a9bf029.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468853-b1f6bc80-221f-11eb-9928-35e67889354c.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item\r\n          label=\"학과\"\r\n          name=\"department\"\r\n          value={department}\r\n          style={{\r\n            width: \"0rem\",\r\n            height: \"0rem\",\r\n            visibility: \"hidden\",\r\n            margin: \"0\",\r\n          }}\r\n        >\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        {/* <Form.Item label=\"시간\" name=\"time\" value={time} style={{width:\"0rem\", height:\"0rem\" , visibility:\"hidden\", margin:\"0\"}}>\r\n          <Input readOnly=\"true\"/>\r\n        </Form.Item> */}\r\n        <Form.Item\r\n          label=\"이름\"\r\n          name=\"modifier\"\r\n          value={id}\r\n          style={{\r\n            width: \"0rem\",\r\n            height: \"0rem\",\r\n            visibility: \"hidden\",\r\n            margin: \"0\",\r\n          }}\r\n        >\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"위치\" name=\"position\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"전화번호\" name=\"phoneNumber\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"조교 부재여부\" name=\"status\" required>\r\n          <Select>\r\n            <Option value=\"0\">근무중</Option>\r\n            <Option value=\"1\">부재중</Option>\r\n            <Option value=\"2\">기타내용 입력</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          noStyle\r\n          shouldUpdate={(preValues, currentValues) =>\r\n            preValues.status !== currentValues.status\r\n          }\r\n        >\r\n          {({ getFieldValue }) => {\r\n            return form.getFieldValue(\"status\") === \"2\" ||\r\n              form.getFieldValue(\"status\") === \"기타내용 입력\" ? (\r\n              <Form.Item\r\n                label=\"기타내용\"\r\n                name=\"comment\"\r\n                rules={[\r\n                  { required: true, messsage: \"기타 내용을 입력해주세요\" },\r\n                ]}\r\n              >\r\n                <TextArea disabled={isDisable} style={{ resize: \"none\" }} />\r\n              </Form.Item>\r\n            ) : null;\r\n          }}\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Notice = () => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const [data, setData] = React.useState([]);\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/notice/${department}`);\r\n    console.log(response);\r\n    setData({\r\n      modifier: response.data[0].modifier,\r\n      time: moment(response.data[0].time).add(9, \"hours\").format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      department: response.data[0].department,\r\n      link: response.data[0].link,\r\n    });\r\n  }, [department]);\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    console.log(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (formData) => {\r\n    formData.modifier = name;\r\n    const response = await axios\r\n      .put(`https://mfam.site/notice/${formData.department}`, formData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, [department, getData]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{department} 공지 링크 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468604-8f17d880-221e-11eb-90fc-43a1acad45c6.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468606-90e19c00-221e-11eb-9dde-738e963f0458.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468607-9212c900-221e-11eb-8763-c018eebf650f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"링크\" name=\"link\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col, Divider, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst QuestionList = ({ data, getData, setPage, page }) => {\r\n  console.log(data);\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const num = data[0];\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://mfam.site/knowledgePlus/${data.faqno}`, formData)\r\n      .catch((error) => {\r\n        return toast.error(\"에러가 났어요!\");\r\n        console.log(error);\r\n      });\r\n    setVisible(false);\r\n    setPage(page);\r\n    getData();\r\n    toast.success(\"질문을 삭제했습니다!\");\r\n  };\r\n\r\n  const onChangeFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n    formData.modifier = localStorage.getItem(\"username\");\r\n    const response = await axios\r\n      .put(`https://mfam.site/knowledgePlus/${data.faqno}`, formData)\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        if (res.status === 200) {\r\n          setVisible(false);\r\n          setPage(page);\r\n          getData();\r\n          toast.success(\"질문을 수정했습니다!\");\r\n        } else {\r\n          toast.error(\"에러가 났어요!\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"에러가 났어요!\");\r\n      });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      faqno: data.faqno,\r\n      category1: data.category1,\r\n      category2: data.category2,\r\n      category3: data.category3,\r\n      category4: data.category4,\r\n      category5: data.category5,\r\n      question: data.question,\r\n      questionAnswer: data.questionAnswer,\r\n      landingUrl: data.landingUrl,\r\n      imageinfo: data.imageinfo,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Divider orientation=\"left\">{data.count}</Divider>\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col flex={9} style={{ marginLeft: \"2rem\", width: \"70%\" }}>\r\n          {data.question}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button onClick={FormHandler}>수정하기</Button>\r\n          <Modal\r\n            title=\"질문수정\"\r\n            visible={visible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            maskClosable={false}\r\n            footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n            width=\"40rem\"\r\n          >\r\n            <Form\r\n              form={form}\r\n              onFinish={onChangeFunc}\r\n              onFieldsChange={onValuesChange}\r\n              autoComplete=\"off\"\r\n              style={{ width: \"95%\", padding: \"0 5%\" }}\r\n            >\r\n              <Form.Item\r\n                label=\"질문\"\r\n                name=\"question\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"질문을 입력해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input initialvalues={data.question} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"답변\"\r\n                name=\"questionAnswer\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"답변을 입력해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input initialvalues={data.questionAnswer} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"카테고리 1\"\r\n                name=\"category1\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"하나 이상의 카테고리를 설정해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input initialvalues={data.category1} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 2\" name=\"category2\">\r\n                <Input initialvalues={data.category2} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 3\" name=\"category3\">\r\n                <Input initialvalues={data.category3} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 4\" name=\"category4\">\r\n                <Input initialvalues={data.category4} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 5\" name=\"category5\">\r\n                <Input initialvalues={data.category5} />\r\n              </Form.Item>\r\n              <Form.Item label=\"답변링크\" name=\"landingUrl\">\r\n                <Input initialvalues={data.landingUrl} />\r\n              </Form.Item>\r\n              <Form.Item label=\"이미지링크\" name=\"imageinfo\">\r\n                <Input initialvalues={data.imageinfo} />\r\n              </Form.Item>\r\n              <Divider />\r\n              <p style={{ width: \"100%\", color: \"gray\" }}>\r\n                {data.modifier} 조교님\r\n                <br />({data.time})\r\n              </p>\r\n              <Form.Item colon={false} wrapperCol={{ span: 20, offset: 7 }}>\r\n                <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n                  수정하기\r\n                </Button>\r\n                <Button\r\n                  icon={<ExclamationCircleOutlined />}\r\n                  type=\"primary\"\r\n                  onClick={confirmFunc}\r\n                  style={{\r\n                    backgroundColor: \"red\",\r\n                    color: \"white\",\r\n                    border: \"none\",\r\n                    marginLeft: \"3rem\",\r\n                  }}\r\n                >\r\n                  삭제하기\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionList;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport QuestionList from \"./QuestionList\";\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Question = (props) => {\r\n  const pageSize = parseInt(window.innerHeight / 100);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(1);\r\n  const num = data[0];\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = (num) => {\r\n    const _data = data.slice(\r\n      (num - 1) * pageSize,\r\n      (num - 1) * pageSize + pageSize\r\n    );\r\n    // data page에 따라 자르는 작업\r\n\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    return _data.map((it, i) => {\r\n      it.count = data.length - i - pageSize * (page - 1);\r\n      // 게시글 번호 계산\r\n\r\n      it.props = props;\r\n      return (\r\n        <QuestionList\r\n          key={i}\r\n          data={it}\r\n          getData={getData}\r\n          setPage={setPage}\r\n          page={page}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n    formData.modifier = localStorage.getItem(\"username\");\r\n    const response = await axios\r\n      .post(`https://mfam.site/knowledgePlus`, formData)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          toast.success(\"질문을 등록했습니다!\");\r\n          setPage(1);\r\n          getData();\r\n          setVisible(false);\r\n          form.setFieldsValue({\r\n            faqno: \"\",\r\n            category1: \"\",\r\n            category2: \"\",\r\n            category3: \"\",\r\n            category4: \"\",\r\n            question: \"\",\r\n            questionAnswer: \"\",\r\n            landingUrl: \"\",\r\n            imageinfo: \"\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    //pagenum은 1,2,3,4 식으로 전송 됨.\r\n    setPage(pagenum);\r\n    getData();\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/knowledgePlus`);\r\n    setData(response.data.reverse());\r\n    //setData(response.data.values.reverse());\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>질문 수정 페이지</p>\r\n      </div>\r\n      소융봇에서 제공 할 질문과 답변을 관리하는 페이지입니다.\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"5px 0\" }}>\r\n        <Link to=\"/userquestion\">\r\n          <u>유저들의 질문</u>\r\n        </Link>{\" \"}\r\n        에서 질문을 골라보세요 😊\r\n      </div>\r\n      {PageRefresh(page)}\r\n      <div style={{ marginBottom: \"2rem\" }} />\r\n      <Pagination\r\n        current={page}\r\n        total={data.length}\r\n        defaultPageSize={pageSize}\r\n        onChange={onPageChange}\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n      />\r\n      <Button onClick={FormHandler}>질문 추가</Button>\r\n      <Modal\r\n        title=\"질문추가\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        maskClosable={false}\r\n        footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n        width=\"40rem\"\r\n      >\r\n        <Form\r\n          form={form}\r\n          onFinish={onFinishFunc}\r\n          onFieldsChange={onValuesChange}\r\n          autoComplete=\"off\"\r\n          style={{ width: \"95%\", padding: \"0 5%\" }}\r\n        >\r\n          <Form.Item\r\n            label=\"질문\"\r\n            name=\"question\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"질문을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"답변\"\r\n            name=\"questionAnswer\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"답변을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"카테고리 1\"\r\n            name=\"category1\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"하나 이상의 카테고리를 설정해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 2\" name=\"category2\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 3\" name=\"category3\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 4\" name=\"category4\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 5\" name=\"category5\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"답변링크\" name=\"landingUrl\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"이미지링크\" name=\"imageinfo\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n            <Button\r\n              icon={<CloudUploadOutlined />}\r\n              htmlType=\"submit\"\r\n              style={{ margin: \"1rem 1rem 0 1rem\" }}\r\n            >\r\n              추가하기\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col, Divider, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Userquestionlist = ({ data, getData, setPage, page }) => {\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://mfam.site/question/${data.idx}`, formData)\r\n      .catch((error) => {\r\n        return toast.error(\"에러가 났어요!\");\r\n        console.log(error);\r\n      });\r\n    setPage(page);\r\n    getData();\r\n    toast.success(\"질문을 삭제했습니다!\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ margin: \"2vh 0\" }} />\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col\r\n          flex={1}\r\n          style={{ textAlign: \"center\", width: \"15%\", fontWeight: \"bold\" }}\r\n        >\r\n          {data.department}\r\n        </Col>\r\n        <Col flex={8} style={{ marginLeft: \"2rem\", width: \"50%\" }}>\r\n          {data.content}\r\n        </Col>\r\n        <Col flex={2} style={{ width: \"15%\" }}>\r\n          {data.time}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button\r\n            onClick={confirmFunc}\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"red\", border: \"none\" }}\r\n          >\r\n            삭제하기\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Userquestionlist;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Userquestionlist from \"./Userquestionlist\";\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Userquestion = (props) => {\r\n  const department = localStorage.getItem(\"department\");\r\n  const pageSize = parseInt(window.innerHeight / 50);\r\n  let count = 0;\r\n  const [size, setSize] = React.useState(0);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(1);\r\n  const num = data[0];\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = (count) => {\r\n    const _data = data.slice(\r\n      (count - 1) * pageSize,\r\n      (count - 1) * pageSize + pageSize\r\n    );\r\n    // data page에 따라 자르는 작업\r\n\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    return _data.map((it, i) => {\r\n      // 게시글 번호 계산\r\n\r\n      if (it.department === \"공통 질문\" || it.department === department) {\r\n        return (\r\n          <Userquestionlist\r\n            key={i}\r\n            data={it}\r\n            getData={getData}\r\n            setPage={setPage}\r\n            page={page}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n\r\n    const response = await axios\r\n      .post(`https://mfam.site/knowledgePlus`, formData)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          toast.success(\"질문을 등록했습니다!\");\r\n          setPage(1);\r\n          getData();\r\n          setVisible(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    //pagenum은 1,2,3,4 식으로 전송 됨.\r\n    setPage(pagenum);\r\n    getData();\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/question`);\r\n    response.data.map((i, it) => {\r\n      if (i.department === (\"공통 질문\" || department)) {\r\n        count += 1;\r\n      }\r\n    });\r\n    setData(response.data.reverse());\r\n    //setData(response.data.values.reverse());\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>유저들의 질문</p>\r\n      </div>\r\n      소융봇에서 제공하고 있지 않은 질문들에 대해서 유저들이 남긴 질문입니다.\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"5px 0\" }}>\r\n        <Link to=\"/question\">\r\n          <u>질문 수정페이지</u>\r\n        </Link>{\" \"}\r\n        에서 질문에 대한 답변을 올려주세요 😊\r\n      </div>\r\n      {/* {data.map((it,i)=>{\r\n        it.count=data.length-i;\r\n        it.props=props;\r\n        return(\r\n            <QuestionList key = {i} data={it} getData={getData}/>\r\n        )\r\n      })} */}\r\n      {PageRefresh(page)}\r\n      <div style={{ marginBottom: \"2rem\" }} />\r\n      <Pagination\r\n        current={page}\r\n        total={data.length}\r\n        defaultPageSize={pageSize}\r\n        onChange={onPageChange}\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Userquestion;\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Professor = () => {\r\n  const [list, setlist] = React.useState([]);\r\n  const [form] = Form.useForm();\r\n  const [data, getData] = React.useState({});\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [nameCheck, setNameCheck] = React.useState(false);\r\n  const onFinishFunc = async (_data) => {\r\n    _data.modifier = localStorage.getItem(\"username\");\r\n    const response = await axios\r\n      .put(`https://mfam.site/professor/${inputValue}`, _data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    if (nameCheck === false) {\r\n      return toast.error(\"교수님 성함 입력 후 Seacrh 해주세요!\");\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChangeFunc = (name) => {\r\n    setNameCheck(false);\r\n    setInputValue(name);\r\n  };\r\n\r\n  const showModifier = () => {\r\n    return (\r\n      <p style={{ width: \"100%\", color: \"gray\" }}>\r\n        {data.modifier}\r\n        <br />\r\n        {data.time}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const onSearchFunc = async () => {\r\n    let name = inputValue;\r\n    if (name.length < 2) {\r\n      return toast.error(\"존재하지 않는 이름입니다.\");\r\n    }\r\n    const response = await axios\r\n      .get(`https://mfam.site/professor/${name}`)\r\n      .catch((error) => {\r\n        toast.error(\"에러가 났어요!\");\r\n      });\r\n    console.log(response);\r\n\r\n    if (response.data.length === 0) {\r\n      return toast.error(\"존재하지 않는 이름입니다.\");\r\n    }\r\n    toast.success(\"교수님 정보를 성공적으로 불러왔습니다.\");\r\n    setNameCheck(true);\r\n    getData({\r\n      modifier: response.data[0].modifier + \" 조교님\",\r\n      time:\r\n        \"(\" + moment(response.data[0].time).add(9, \"hours\").format(\"LLL\") + \")\",\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      class_position: response.data[0].class_position,\r\n      phone_number: response.data[0].phone_number,\r\n      email: response.data[0].email,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let p_list = [];\r\n    axios.get(`https://mfam.site/professor/`).then((res) => {\r\n      res.data.map((v, i) => {\r\n        p_list.push({ value: v.name });\r\n      });\r\n    });\r\n\r\n    setlist(p_list);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>교수님 연구실 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045727-22f9f380-25d5-11eb-8a36-a2135d9fb51d.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045910-5fc5ea80-25d5-11eb-8f68-7b071a52350e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045316-7cadee00-25d4-11eb-9b20-8c5bb4fbb247.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          margin: \"0 0 2rem 0\",\r\n          width: \"30rem\",\r\n        }}\r\n      >\r\n        <p style={{ width: \"5rem\" }}>성함:</p>\r\n        <AutoComplete\r\n          style={{ width: \"100%\", marginRight: \"1rem\" }}\r\n          options={list}\r\n          placeholder=\"교수님 성함을 입력해주세요\"\r\n          filterOption={(input, option) => option.value.indexOf(input) === 0}\r\n          onChange={onChangeFunc}\r\n        />\r\n        {/* <Input style={{ margin: \"0 4% 0 0\" }} onChange={onChangeFunc} /> */}\r\n        <Button icon={<SearchOutlined />} onClick={onSearchFunc}>\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"30rem\" }}\r\n      >\r\n        <Form.Item label=\"연구실\" name=\"class_position\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"전화번호\" name=\"phone_number\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"이메일\" name=\"email\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        {showModifier()}\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Professor;\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { getDefaultNormalizer } from \"@testing-library/react\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Timetable = () => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const [list, setlist] = React.useState([]);\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = React.useState({});\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [nameCheck, setNameCheck] = React.useState(false);\r\n\r\n  const confirmFunc = (formData) => {\r\n    if (nameCheck === false) {\r\n      return toast.error(\"강의실 이름을 Seacrh 해주세요!\");\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (data) => {\r\n    data.modifier = name;\r\n    console.log(data);\r\n    const response = await axios\r\n      .put(`https://mfam.site/timetable/${inputValue}`, data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n        onSearchFunc();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const onChangeFunc = (name) => {\r\n    setNameCheck(false);\r\n    setInputValue(name);\r\n  };\r\n\r\n  const onSearchFunc = async () => {\r\n    let value = inputValue.replace(/(\\s*)/g, \"\"); // 띄어쓰기 제거\r\n    if (value.length < 3) {\r\n      return toast.error(\"존재하지 않는 강의실입니다.\");\r\n    }\r\n    const response = await axios\r\n      .get(`https://mfam.site/timetable/${value}`)\r\n      .catch((error) => {\r\n        toast.error(\"에러가 났어요!\");\r\n      });\r\n\r\n    console.log(response);\r\n    if (response.data.length === 0) {\r\n      return toast.error(\"존재하지 않는 강의실입니다.\");\r\n    } else {\r\n      toast.success(\"강의실 정보를 성공적으로 불러왔습니다.\");\r\n      setNameCheck(true);\r\n      setData({\r\n        modifier: response.data[0].modifier + \" 조교님\",\r\n        time:\r\n          \"(\" +\r\n          moment(response.data[0].time).add(9, \"hours\").format(\"LLL\") +\r\n          \")\",\r\n      });\r\n      form.setFieldsValue({\r\n        link: response.data[0].link,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let p_list = [];\r\n    axios.get(`https://mfam.site/timetable/`).then((res) => {\r\n      res.data.map((v, i) => {\r\n        p_list.push({ value: v.classname });\r\n      });\r\n    });\r\n\r\n    setlist(p_list);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>강의실 시간표 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046546-3eb1c980-25d6-11eb-91d1-9e65182a72cb.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046550-3fe2f680-25d6-11eb-8f35-49df97a88419.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046554-41142380-25d6-11eb-8be4-b10796d051f3.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          margin: \"0 0 2rem 0\",\r\n          width: \"30rem\",\r\n        }}\r\n      >\r\n        <p style={{ width: \"5rem\" }}>강의실:</p>\r\n        <AutoComplete\r\n          style={{ width: \"100%\", marginRight: \"1rem\" }}\r\n          options={list}\r\n          placeholder=\"강의실을 입력해주세요\"\r\n          filterOption={(input, option) => option.value.indexOf(input) !== -1}\r\n          onChange={onChangeFunc}\r\n        />\r\n        <Button icon={<SearchOutlined />} onClick={onSearchFunc}>\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"30rem\" }}\r\n      >\r\n        <Form.Item label=\"링크\" name=\"link\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier}\r\n          <br />\r\n          {data.time}\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timetable;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n} from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst BestqaData = ({ data, key }) => {\r\n  const [form] = Form.useForm();\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    formData.modifier = localStorage.getItem(\"username\");\r\n\r\n    const response = await axios\r\n      .put(`https://mfam.site/bestqa/${data.id}`, formData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        } else {\r\n          toast.error(\"서버와의 에러가 발생했습니다!\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <Form\r\n        initialValues={{ id: data.id, question: data.question }}\r\n        onFinish={confirmFunc}\r\n        autoComplete=\"off\"\r\n        form={form}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Form.Item label={`TOP ${data.id} `} name=\"question\">\r\n          <Input style={{ width: \"30vw\" }} />\r\n        </Form.Item>\r\n        <Form.Item colon={false} wrapperCol={{ span: 11, offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Bestqa = () => {\r\n  const [data, setData] = React.useState([]);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\"https://mfam.site/bestqa\");\r\n    console.log(response);\r\n    setData(response.data);\r\n  }, []);\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>자주 묻는 질문 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047553-b502fb80-25d7-11eb-898a-7b1c46473b0f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047557-b6342880-25d7-11eb-8fcf-7256e6887d65.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047561-b7fdec00-25d7-11eb-87a3-9b443cd8be5a.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047565-b9c7af80-25d7-11eb-852d-b6d83dd1012f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      {data.map((it, i) => {\r\n        return <BestqaData key={it.classname} data={it} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bestqa;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col, Divider, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst DataModifylist = ({ data, getData, setPage, page, count }) => {\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://mfam.site/fixRequest/${data.idx}`, formData)\r\n      .catch((error) => {\r\n        return toast.error(\"에러가 났어요!\");\r\n        console.log(error);\r\n      });\r\n    setPage(page);\r\n    getData();\r\n    toast.success(\"요청을 삭제했습니다!\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ margin: \"2vh 0\" }} />\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col\r\n          flex={1}\r\n          style={{ paddingLeft: \"2rem\", width: \"5%\", fontWeight: \"bold\" }}\r\n        >\r\n          {count}\r\n        </Col>\r\n        <Col flex={8} style={{ paddingLeft: \"2rem\", width: \"60%\" }}>\r\n          {data.question}\r\n        </Col>\r\n        <Col flex={2} style={{ width: \"15%\" }}>\r\n          {data.time}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button\r\n            onClick={confirmFunc}\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"red\", border: \"none\" }}\r\n          >\r\n            삭제하기\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataModifylist;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport DataModifylist from \"./DataModifyList\";\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst DataModify = (props) => {\r\n  const department = localStorage.getItem(\"department\");\r\n  const pageSize = parseInt(window.innerHeight / 50);\r\n  let count = 0;\r\n  const [size, setSize] = React.useState(0);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(1);\r\n  const num = data[0];\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = (count) => {\r\n    const _data = data.slice(\r\n      (count - 1) * pageSize,\r\n      (count - 1) * pageSize + pageSize\r\n    );\r\n    // data page에 따라 자르는 작업\r\n\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    return _data.map((it, i) => {\r\n      // 게시글 번호 계산\r\n\r\n      return (\r\n        <DataModifylist\r\n          key={i}\r\n          data={it}\r\n          count={data.length - i - pageSize * (page - 1)}\r\n          getData={getData}\r\n          setPage={setPage}\r\n          page={page}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    //pagenum은 1,2,3,4 식으로 전송 됨.\r\n    setPage(pagenum);\r\n    getData();\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/fixRequest`);\r\n\r\n    response.data.map((i, it) => {\r\n      count += 1;\r\n    });\r\n    setData(response.data.reverse());\r\n    //setData(response.data.values.reverse());\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>유저들의 데이터 수정 요청</p>\r\n      </div>\r\n      데이터에 오류가 있는 질문들의 수정 요청입니다.\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"5px 0\" }}>\r\n        <Link to=\"/question\">\r\n          <u>질문 수정페이지</u>\r\n        </Link>{\" \"}\r\n        에서 질문에 대한 답변을 수정해주세요 😊\r\n      </div>\r\n      {/* {data.map((it,i)=>{\r\n        it.count=data.length-i;\r\n        it.props=props;\r\n        return(\r\n            <QuestionList key = {i} data={it} getData={getData}/>\r\n        )\r\n      })} */}\r\n      {PageRefresh(page)}\r\n      <div style={{ marginBottom: \"2rem\" }} />\r\n      <Pagination\r\n        current={page}\r\n        total={data.length}\r\n        defaultPageSize={pageSize}\r\n        onChange={onPageChange}\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataModify;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authUser } from \"../actions/userAction\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nexport default function (Component, option , adminRoute = null){\r\n    //option\r\n    //null => 아무나 출입 가능\r\n    //true => 로그인한 유저만 출입 가능\r\n    //false => 로그인한 유저는 출입 불가능\r\n\r\n    function AuthCheck(props){\r\n        const dispatch = useDispatch();\r\n        let _data={};\r\n        useEffect(() =>{\r\n        dispatch(authUser()).then((res) =>{\r\n            if(!res){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title:'로그인이 필요합니다',\r\n                    showConfirmButton: true,\r\n                    width:'25rem',\r\n                    timer: 2000,\r\n                }).then(props.history.push(\"/\"));\r\n            }\r\n            else{\r\n                _data = Object.assign(_data,res);\r\n            }\r\n        });\r\n    },[]);\r\n            return <Component data={_data}/>\r\n    }\r\n\r\n    return AuthCheck;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Menu from \"../components/Menu\";\r\nimport Welcome from \"./Welcome\";\r\nimport Curriculum from \"./Curriculum\";\r\nimport Status from \"./Status\";\r\nimport Notice from \"./Notice\";\r\nimport Question from \"./Question\";\r\nimport Userquestion from \"./Userquestion\";\r\nimport Professor from \"./Professor\";\r\nimport Timetable from \"./Timetable\";\r\nimport Bestqa from \"./Bestqa\";\r\nimport datamodify from \"./DataModify\";\r\nimport oc from \"open-color\";\r\nimport Auth from \"../hoc/auth\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 800px;\r\n  min-height: 800px;\r\n  margin-bottom: 3rem;\r\n  margin-top: 4rem;\r\n  padding-left: 1rem;\r\n  -ms-user-select: none;\r\n  -moz-user-select: -moz-none;\r\n  -khtml-user-select: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n`;\r\n\r\nconst MenuBar = styled.div`\r\n  width: 12rem;\r\n  height: 85%;\r\n  background-color: ${oc.gray[1]};\r\n  border-radius: 1rem;\r\n  position: fixed;\r\n  z-index: 2;\r\n  border: 4px groove ${oc.gray[4]};\r\n  \"&:hover\": {\r\n    background: \"#efefef\";\r\n  }\r\n  // @media (max-width: 767px) {\r\n  //     display:none;\r\n  // }\r\n`;\r\n\r\nconst Contents = styled.div`\r\n  width: 90%;\r\n  height: 85%;\r\n  min-height: 600px;\r\n  min-width: 800px;\r\n  margin: 2rem 2rem 0 13rem;\r\n  border-radius: 0.5rem;\r\n  background-color: ${oc.gray[1]};\r\n  border: 2px groove ${oc.gray[4]};\r\n`;\r\n\r\nconst MainPage = (props) => {\r\n  const userdata = props.data;\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <Container>\r\n        <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n          <MenuBar style={{ marginTop: \"2rem\" }}>\r\n            <Menu />\r\n          </MenuBar>\r\n          <Contents>\r\n            <Switch>\r\n              <Route path=\"/status\" component={Auth(Status)} exact />\r\n              <Route path=\"/question\" component={Question} exact />\r\n              <Route path=\"/userquestion\" component={Userquestion} exact />\r\n              <Route path=\"/curriculum\" component={Auth(Curriculum)} exact />\r\n              <Route path=\"/notice\" component={Auth(Notice)} exact />\r\n              <Route path=\"/professor\" component={Auth(Professor)} exact />\r\n              <Route path=\"/timetable\" component={Auth(Timetable)} exact />\r\n              <Route path=\"/bestqa\" component={Auth(Bestqa)} exact />\r\n              <Route path=\"/datamodify\" component={Auth(datamodify)} exact />\r\n              <Route path=\"/main\" component={Auth(Welcome)} exact />\r\n            </Switch>\r\n          </Contents>\r\n        </Router>\r\n      </Container>\r\n      {/* <Footer/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { Component, useState } from \"react\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { registerUser } from \"../actions/userAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  AutoComplete,\r\n  Modal,\r\n} from \"antd\";\r\nimport { QuestionCircleOutlined, LeftOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  min-width: 800px;\r\n  min-height: 600px;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #a31432;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Whitespace = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 6rem;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-radius: 2rem;\r\n`;\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst Title = styled.div`\r\n  font-size: 3rem;\r\n  color: #a31432;\r\n  font-family: \"Rajdhani\";\r\n  margin-top: 5rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst Backwards = styled.div`\r\n  font-size: 2.8rem;\r\n  left: 7rem;\r\n  top: 3.5rem;\r\n  color: #a31432;\r\n  position: absolute;\r\n  &:hover {\r\n    color: ${oc.red[8]};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Signup = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [emailAuthform] = Form.useForm();\r\n  const [_id, setId] = useState(\"\");\r\n  const [_password, setPassword] = useState(\"\");\r\n  const [_department, setDepartment] = useState(\"\");\r\n  const [_email, setEmail] = useState(\"\");\r\n  const [_name, setName] = useState(\"\");\r\n  const [_phonenum, setPhonenum] = useState(\"\");\r\n  const [id_duplication, checkDup] = useState(false);\r\n  const [email_check, checkEmail] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [email_auth, setEmailAuth] = useState(0);\r\n  const sejongemail = \"@sejong.ac.kr\";\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    setEmailAuth(\"\");\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n    setEmailAuth(\"\");\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n    checkDup(false);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n  const onEmailHandler = (e) => {\r\n    setEmail(e.currentTarget.value);\r\n    checkEmail(false);\r\n  };\r\n  const onNameHandler = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const onPhoneHandler = (e) => {\r\n    setPhonenum(e.currentTarget.value);\r\n  };\r\n\r\n  const onEmailCheckSubmit = (e) => {\r\n    console.log({\r\n      email: _email,\r\n      authNumber: email_auth,\r\n    });\r\n    axios\r\n      .post(\"https://mfam.site/mail/verify\", {\r\n        email: _email,\r\n        authNumber: email_auth,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 201) {\r\n          handleCancel();\r\n          setEmail(true);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            text: \"인증되었습니다.\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 2000,\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            text: \"인증번호가 옳지 않습니다.\",\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"인증번호가 옳지 않습니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n\r\n        // Swal.fire({\r\n        //   icon: \"warning\",\r\n        //   text: \"서버와의 연결이 옳지 않습니다.\",\r\n        //   showConfirmButton: true,\r\n        //   width: \"25rem\",\r\n        //   timer: 1500,\r\n        // });\r\n      });\r\n  };\r\n\r\n  const onEmailCheckHandler = (e) => {\r\n    setEmailAuth(e.currentTarget.value);\r\n    console.log(email_auth);\r\n  };\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    setDepartment(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onEmailHadnler = (e) => {\r\n    if (_email.indexOf(sejongemail) === _email.length - sejongemail.length) {\r\n      return setVisible(true);\r\n    }\r\n\r\n    //세종대이메일 검사\r\n\r\n    axios\r\n      .post(\"https://mfam.site/mail/send\", { to: _email })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log({ to: _email });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"이메일이 발송되지 않았습니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n\r\n  const onDuplicationHadnler = (e) => {\r\n    if (_id.length === 0) {\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        text: \"아이디를 입력해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 1500,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"https://mfam.site/auth/idCheck\", { userid: _id })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n\r\n          checkDup(true);\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n\r\n          checkDup(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"중복된 아이디 입니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n\r\n        checkDup(false);\r\n      });\r\n  };\r\n  const linktoMain = (e) => {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n    let body = {\r\n      email: _email,\r\n      username: _name,\r\n      password: _password,\r\n      userid: _id,\r\n      phoneNumber: _phonenum,\r\n      department: _department,\r\n    };\r\n\r\n    if (id_duplication === false) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"가입 실패\",\r\n        text: \"아이디 중복검사를 완료해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 2000,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (email_check === false) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"가입 실패\",\r\n        text: \"이메일 인증을 완료해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 2000,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    dispatch(registerUser(body))\r\n      .then((res) => {\r\n        if (res.status === 409) {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"가입 실패\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 2000,\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"가입 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 2000,\r\n          });\r\n          props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onSubmitHandler}\r\n        autoComplete=\"off\"\r\n        scrollToFirstError\r\n      >\r\n        <Container>\r\n          <Whitespace>\r\n            <Backwards>\r\n              <LeftOutlined onClick={linktoMain} />\r\n            </Backwards>\r\n            <Title>\r\n              <p>Sign up</p>\r\n            </Title>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"6rem\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n                name=\"id\"\r\n                label=\"아이디\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"아이디를 입력해주세요.\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input onChange={onIdHandler} />\r\n              </Form.Item>\r\n              <Button\r\n                style={{\r\n                  position: \"relatvive\",\r\n                  width: \"5rem\",\r\n                  fontSize: \"0.7rem\",\r\n                  marginLeft: \"1rem\",\r\n                }}\r\n                onClick={onDuplicationHadnler}\r\n              >\r\n                중복검사\r\n              </Button>\r\n            </div>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"password\"\r\n              label=\"비밀번호\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"패스워드를 입력해주세요.\",\r\n                },\r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input.Password onChange={onPasswordHanlder} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"confirm\"\r\n              label=\"비밀번호 확인\"\r\n              dependencies={[\"password\"]}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"패스워드를 확인해주세요\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\"비밀번호가 일치하지 않습니다!\");\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"name\"\r\n              label=\"이름\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"이름을 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input onChange={onNameHandler} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"department\"\r\n              label=\"학과\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"학과를 선택해주세요\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select onChange={onChangeSelectFunc}>\r\n                <Option value=\"0\">컴퓨터공학과</Option>\r\n                <Option value=\"1\">소프트웨어학과</Option>\r\n                <Option value=\"2\">정보보호학과</Option>\r\n                <Option value=\"3\">데이터사이언스학과</Option>\r\n                <Option value=\"4\">지능기전공학부</Option>\r\n                <Option value=\"5\">디자인이노베이션</Option>\r\n                <Option value=\"6\">만화애니메이션텍</Option>\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"6rem\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n                name=\"email\"\r\n                label=\"이메일\"\r\n                initialValue=\"\"\r\n                hasFeedback\r\n                rules={[\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"올바른 이메일이 아닙니다\",\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: \"이메일을 입력해주세요.\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                      if (\r\n                        value.indexOf(sejongemail) ===\r\n                          value.length - sejongemail.length ||\r\n                        !value\r\n                      ) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\"\");\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input\r\n                  onChange={onEmailHandler}\r\n                  placeholder=\"abc@sejong.ac.kr\"\r\n                />\r\n              </Form.Item>\r\n              <Button\r\n                style={{\r\n                  position: \"relatvive\",\r\n                  width: \"5rem\",\r\n                  fontSize: \"0.7rem\",\r\n                  marginLeft: \"1rem\",\r\n                }}\r\n                onClick={onEmailHadnler}\r\n              >\r\n                메일인증\r\n              </Button>\r\n            </div>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"phonenumber\"\r\n              label=\"휴대폰 번호\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"휴대폰 번호를 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input onChange={onPhoneHandler} />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{\r\n                  backgroundColor: \"#a31432\",\r\n                  border: \"none\",\r\n                  margin: \"0.5rem 1rem 0\",\r\n                }}\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </Form.Item>\r\n          </Whitespace>\r\n        </Container>\r\n      </Form>\r\n\r\n      <Modal\r\n        title=\"이메일 인증\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n        width=\"40rem\"\r\n      >\r\n        <Form\r\n          form={emailAuthform}\r\n          name=\"emailCheck\"\r\n          onFinish={onEmailCheckSubmit}\r\n          autoComplete=\"off\"\r\n          style={{ width: \"auto\" }}\r\n        >\r\n          <Form.Item\r\n            style={{ width: \"auto\" }}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"인증번호를 입력해주세요.\",\r\n              },\r\n            ]}\r\n          >\r\n            <p>{_email}로 인증번호를 보냈습니다.</p>\r\n\r\n            <Input\r\n              onChange={onEmailCheckHandler}\r\n              placeholder=\"인증번호를 입력해주세요\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n            <Button htmlType=\"submit\">인증하기</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { Component, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Login from \"./pages/Login\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport Signup from \"./pages/Signup\";\r\nimport \"./App.css\";\r\nimport Auth from \"./hoc/auth\";\r\n\r\nconst Container = styled.div`\r\n  -ms-user-select: none;\r\n  -moz-user-select: -moz-none;\r\n  -khtml-user-select: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n`;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n          <Switch>\r\n            <Route path=\"/\" component={Login} exact />\r\n            <Route path=\"/signup\" component={Signup} exact />\r\n            <Route path=\"/main\" component={Auth(MainPage, true)} exact />\r\n          </Switch>\r\n        </Router>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { REGISTER_USER, LOGIN_USER,LOGOUT_USER,REGISTER_ERROR,AUTH_USER,LOGIN_SUCCESS,AUTH_SUCCESS,AUTH_FAILED } from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n  loggedIn : false,\r\n  user : {},\r\n}\r\n\r\nexport default function (state = defaultState, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return { ...state, loggedIn:false, user:{}};\r\n    case REGISTER_ERROR:\r\n        return { ...state, loggedIn:false, user:{}};\r\n    case LOGIN_USER:\r\n      return { ...state, loggedIn:true, user:{...action.payload} };\r\n    case LOGOUT_USER:\r\n      return { ...state, loggedIn:false, user:{} };\r\n    case AUTH_USER:\r\n      return {...state,loggedIn:true,user:{...action.payload}};\r\n    case AUTH_FAILED:\r\n      return {...state,loggedIn:false,user:{}};\r\n    case AUTH_SUCCESS:\r\n      return {...state,loggedIn:true};\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport user from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"antd/dist/antd.css\";\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport promiseMiddlerware from \"redux-promise\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst createStoreWidthMiddleware = applyMiddleware(\r\n  promiseMiddlerware,\r\n  reduxThunk\r\n)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n    store={createStoreWidthMiddleware(\r\n      reducer,\r\n      //개발자 도구를 사용하기 위한 설정\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )}>\r\n    <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}