{"version":3,"sources":["utils/axios.js","actions/userAction.js","actions/types.js","pages/Login.js","components/Header.js","components/Footer.js","components/Menu.js","pages/Welcome.js","pages/Curriculum.js","pages/Status.js","pages/Notice.js","pages/QuestionList.js","pages/Question.js","pages/Professor.js","pages/Timetable.js","pages/Bestqa.js","hoc/auth.js","pages/MainPage.js","pages/Signup.js","App.js","serviceWorker.js","reducer/userReducer.js","reducer/index.js","index.js"],"names":["axios","defaults","withCredentials","authUser","props","token","localStorage","getItem","header","headers","console","log","dispatch","get","widthCredentials","then","res","type","data","department","num","dept","setItem","userid","username","catch","error","withReactContent","Swal","LoginForm","styled","div","Logo","Whitespace","Login","useState","_id","setId","_password","setPassword","useDispatch","style","marginBottom","name","className","onFinish","e","clear","dataToSubmit","uid","payload","post","response","loginUser","password","accessToken","status","loginSuccess","history","push","fire","icon","title","text","message","showConfirmButton","width","timer","err","autoComplete","Item","rules","required","paddingBottom","prefix","UserOutlined","paddingRight","onChange","currentTarget","value","placeholder","LockOutlined","htmlType","backgroundColor","border","margin","to","Spacer","Positioner","Logout","oc","gray","GradientBorder","UserContainer","red","HeaderContents","withRouter","fontSize","letterSpacing","fontFamily","color","padding","marginRight","borderRadius","onClick","MenuContainer","MenuContent","MenuItem","Menu","textDecoration","NotificationOutlined","BulbOutlined","LoadingOutlined","BarsOutlined","CalendarOutlined","AuditOutlined","LayoutOutlined","MessageOutlined","Component","Welcome","display","alignItems","flexDirection","background","height","textAlign","Curriculum","Select","Option","Input","TextArea","Form","useForm","form","React","setData","getData","useCallback","a","setFieldsValue","link","getFieldValue","formData","Object","assign","put","toast","success","useEffect","onFieldsChange","changedValue","allValue","label","readOnly","colon","wrapperCol","span","offset","CloudUploadOutlined","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Status","isDisable","setDisable","comment","noStyle","shouldUpdate","preValues","currentValues","messsage","disabled","resize","Notice","QuestionList","setPage","page","visible","setVisible","onDeleteFunc","delete","faqno","onChangeFunc","entries","key","undefined","NaN","setTimeout","category1","category2","category3","category4","category5","question","questionAnswer","landingUrl","imageinfo","orientation","count","justify","flex","marginLeft","onOk","onCancel","footer","initialvalues","ExclamationCircleOutlined","Question","pageSize","parseInt","window","innerHeight","onFinishFunc","reverse","slice","map","it","i","length","PageRefresh","current","total","defaultPageSize","pagenum","Professor","inputValue","setInputValue","onSearchFunc","class_position","phone_number","target","SearchOutlined","Timetable","BestqaData","id","initialValues","Bestqa","classname","option","AuthCheck","_data","Container","MenuBar","Contents","MainPage","basename","process","marginTop","path","component","Auth","exact","Title","AutoComplete","formItemLayout","labelCol","xs","sm","tailFormItemLayout","Backwards","Signup","_department","setDepartment","_email","setEmail","_name","setName","_phonenum","setPhonenum","id_duplication","checkDup","onChangeSelectFunc","body","email","phoneNumber","scrollToFirstError","LeftOutlined","justifyContent","hasFeedback","Password","dependencies","validator","rule","Promise","reject","resolve","initialValue","indexOf","App","Boolean","location","hostname","match","defaultState","loggedIn","user","rootReducer","combineReducers","state","action","createStoreWidthMiddleware","applyMiddleware","promiseMiddlerware","reduxThunk","createStore","ReactDOM","render","store","reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8edf04be.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst DOMAIN = \"https://mfam.site\";\r\naxios.defaults.withCredentials = true; // 쿠키 데이터를 전송받기 위해\r\nexport const request = (method, url, data) => {\r\n  return axios({\r\n    method,\r\n    url: DOMAIN + url,\r\n    data,\r\n  })\r\n    .then((res) => res)\r\n    .catch((err) => console.log(err));\r\n};","import { \r\n  REGISTER_USER,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  AUTH_USER,\r\n  REGISTER_ERROR,\r\n  LOGIN_SUCCESS,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAILED,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport { request } from \"../utils/axios\";\r\n\r\nexport function registerUser(dataToSubmit) {\r\n        return (dispatch) => {\r\n          dispatch({\r\n              type: REGISTER_USER,\r\n          });\r\n          \r\n          return axios.post('https://mfam.site/auth/signup', dataToSubmit)\r\n          .then((response) => response)\r\n          .catch((error) => error.response )\r\n      };\r\n  }\r\n  \r\n  // export function loginUser(dataToSubmit) {\r\n  //   const data = request(\"post\", \"/auth/login\", dataToSubmit);\r\n  //   return {\r\n  //       type: LOGIN_USER,\r\n  //       payload: data,\r\n  //   };\r\n  // }\r\n\r\n  export function loginUser(dataToSubmit) {\r\n    const uid = dataToSubmit.userid;\r\n\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: LOGIN_USER,\r\n            payload:uid,\r\n        });\r\n\r\n        return axios.post('https://mfam.site/auth/login', dataToSubmit)\r\n        .then((response) => response)\r\n        .catch((error) => error.response)\r\n    };\r\n  }\r\n\r\n  export function loginSuccess(accessToken){\r\n    localStorage.setItem('user_token', accessToken);\r\n    //axios.defaults.headers.common['Authorization'] = accessToken;\r\n\r\n    return (dispatch) =>{\r\n\r\n    dispatch({\r\n      type:LOGIN_SUCCESS,\r\n    });\r\n   }\r\n  }\r\n\r\n  export function logoutUser(){\r\n    return (dispatch) => {\r\n      dispatch({\r\n          type: LOGOUT_USER,\r\n      });\r\n    };\r\n  }\r\n\r\n  export function authUser(props) {\r\n    const token = localStorage.getItem('user_token');\r\n    const header = {\r\n      headers:{\r\n      \"authorization\":`Bearer ${token}`\r\n      }\r\n    }\r\n\r\n    console.log(header);\r\n\r\n    return (dispatch) =>{\r\n  \r\n    return axios.get('https://mfam.site/auth/check',header ,{widthCredentials:true})\r\n      .then((res)=> {\r\n        dispatch({\r\n          type:AUTH_SUCCESS,\r\n        })\r\n        console.log(res.data.data);\r\n\r\n        const department = dept(res.data.data.department);\r\n\r\n        localStorage.setItem('userid',res.data.data.userid);\r\n        localStorage.setItem('username',res.data.data.username);\r\n        localStorage.setItem('department',department);\r\n\r\n        return res.data.data;\r\n      })\r\n      .catch((error)=> \r\n      {\r\n        dispatch({\r\n          type:AUTH_FAILED,\r\n        })\r\n      });\r\n    };\r\n  }\r\n\r\n  function dept(num){\r\n\r\n    switch(num){\r\n      case 0:\r\n        return \"컴퓨터공학과\";\r\n        break;\r\n      case 1:\r\n        return \"소프트웨어학과\";\r\n        break;\r\n      case 2:\r\n        return \"정보보호학과\";\r\n        break;\r\n      case 3:\r\n        return \"데이터사이언스학과\";\r\n        break;   \r\n      case 4:\r\n        return \"지능기전공학부\";\r\n        break;\r\n      case 5:\r\n        return \"창의소프트학부\";\r\n        break;\r\n      default:\r\n        return \"\";\r\n    }\r\n\r\n  }","export const REGISTER_USER = \"REGISTER_USER\";\r\nexport const LOGIN_USER =\"LOGIN_USER\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const AUTH_USER = \"AUTH_USER\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAILED = \"AUTH_FAILED\";","import React , { Component,useState } from 'react';\r\nimport { Link, Redirect, Route, Switch, BrowserRouter as Router } from \"react-router-dom\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from 'styled-components';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { loginUser,authUser,loginSuccess } from \"../actions/userAction\";\r\nimport axios from \"axios\";\r\nimport oc from 'open-color';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst LoginForm = styled.div`\r\n    display:flex;\r\n    min-width:800px;\r\n    min-height:600px;\r\n    position:absolute;\r\n    width:100%;\r\n    height:100%;\r\n    background-color:#a31432;\r\n    justify-content:center;\r\n    align-items:center;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n    font-size : 6rem;\r\n    letter-spacing:1rem;\r\n    color: #a31432;\r\n    font-family:'Rajdhani';\r\n`;\r\n\r\nconst Whitespace = styled.div`\r\n  display:flex;\r\n  flex-direction:column;\r\n  background-color:white;\r\n  justify-content:center;\r\n  align-items:center;\r\n  padding-bottom:6rem;\r\n  width:90%;\r\n  height:90%;\r\n  border-radius:2rem;\r\n`\r\n\r\nconst Login = (props) => {\r\n    const [_id,setId] = useState(\"\");\r\n    const [_password,setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const onIdHandler = (e) => {\r\n        setId(e.currentTarget.value);\r\n      };\r\n    const onPasswordHanlder = (e) => {\r\n        setPassword(e.currentTarget.value);\r\n    };\r\n    \r\n    const onLogin = (e) => {\r\n        localStorage.clear();\r\n        const body = {\r\n          userid:_id,\r\n          password:_password,\r\n        };\r\n        \r\n        dispatch(loginUser(body))\r\n          .then((res) => {\r\n            const accessToken = res.data.token;\r\n            console.log(res.status);\r\n            if (res.status === 201) {\r\n                dispatch(loginSuccess(accessToken));\r\n                dispatch(authUser())\r\n                .then((res)=>{\r\n                    if(res){                                // res 추가해서 비동기적으로 실행되게 하기위함 (로그인 됬을 때 username 못불러오는 현상 해결)\r\n                        props.history.push(\"/main\");\r\n                    }\r\n                });\r\n            } \r\n            else{\r\n                  Swal.fire({\r\n                      icon: 'error',\r\n                      title:'로그인 실패',\r\n                      text: res.data.message,\r\n                      showConfirmButton: true,\r\n                      width:'25rem',\r\n                      timer: 2000,\r\n                  })\r\n              }\r\n\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      };\r\n\r\n  return (\r\n    <LoginForm>\r\n        <Whitespace>\r\n            <Logo style={{marginBottom:\"3%\"}}>\r\n                SYB ADMIN\r\n            </Logo>\r\n            <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            onFinish={onLogin}\r\n            autoComplete=\"off\"\r\n            >\r\n            <Form.Item\r\n                name=\"id\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: 'ID를 입력해주세요',\r\n                },\r\n                ]}\r\n                style={{paddingBottom:\"0.5rem\"}}\r\n            >\r\n                <Input \r\n                prefix={<UserOutlined className=\"site-form-item-icon\" style={{paddingRight:\"0.5rem\"}}/>}\r\n                onChange={onIdHandler}\r\n                placeholder=\"아이디\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: '비밀번호를 입력해주세요',\r\n                },\r\n                ]}\r\n                style={{paddingBottom:\"1rem\"}}\r\n            >\r\n                <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" style={{paddingRight:\"0.5rem\"}}/>}\r\n                type=\"password\"\r\n                placeholder=\"비밀번호\"\r\n                onChange={onPasswordHanlder}\r\n                />\r\n            </Form.Item>\r\n            \r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{backgroundColor:\"#a31432\", border:\"none\", margin:\"0 1rem\"}}>\r\n                   로그인\r\n                </Button>\r\n                <Link to='/signup' style={{margin:\"0 1rem\"}}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{backgroundColor:\"#a31432\", border:\"none\"}}>\r\n                        회원가입\r\n                    </Button>\r\n                </Link>\r\n            </Form.Item>\r\n            </Form>\r\n        </Whitespace>\r\n    </LoginForm>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React , { Component,useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link, Redirect, Route, Switch, withRouter, BrowserRouter as Router } from \"react-router-dom\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutUser,authUser} from \"../actions/userAction\";\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {Button} from 'antd';\r\nimport oc from 'open-color';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst Logo = styled.div`\r\n    font-size : 2.5rem;\r\n    letter-spacing:15px;\r\n    color:white;\r\n    font-family:'Rajdhani';\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst Positioner = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background:#a31432;\r\n    position: fixed;    \r\n    top: 0px;\r\n    width:100%;\r\n    min-width:800px;\r\n    z-index:3;\r\n`;\r\n\r\nconst Logout = styled.div`\r\n    font-size : 1.2rem;\r\n    letter-spacing:3px;\r\n    color:black;\r\n    font-family:'Rajdhani';\r\n    &:hover {\r\n        color: ${oc.gray[6]};\r\n        cursor: pointer;\r\n      }\r\n`;\r\n\r\nconst GradientBorder = styled.div`\r\n    height:10   px;\r\n    background: linear-gradient(to right, black, white);\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n    background-color:white;\r\n    padding:0 2rem;\r\n    height:70%;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n    border-radius:55px;\r\n    border:3px solid ${oc.red[8]};\r\n`;\r\n\r\nconst HeaderContents = styled.div`\r\n    width: 100%;\r\n    height: 75px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    margin:0 2rem;\r\n    padding-right: 3rem;\r\n    padding-left: 1rem;\r\n`;\r\n\r\nfunction Header(props) {\r\n    const dispatch = useDispatch();\r\n    const username = localStorage.getItem('username')\r\n    const dept = localStorage.getItem('department');\r\n    const onClickHandler = () => {\r\n\r\n        dispatch(logoutUser());\r\n        localStorage.clear();\r\n        props.history.push(\"/\");\r\n    };\r\n        return(\r\n            <Positioner>    \r\n                    <HeaderContents>\r\n                        <Logo>\r\n                            SYB ADMIN\r\n                        </Logo>\r\n                        <Spacer/>\r\n                        <UserContainer>\r\n                            <Logo style={{fontSize:\"1.2rem\",letterSpacing:\"1px\",paddingRight:\"3rem\",fontFamily:\"Gothic A1\",color:\"black\"}}>\r\n                            <UserOutlined style={{color:\"white\", padding:\"5px\",fontSize:\"1.5rem\", marginRight:\"1rem\",borderRadius:\"100%\",backgroundColor:\"gray\"}}/>    \r\n                            {dept}&emsp;\r\n                            {username}님\r\n                            </Logo>\r\n                            <Logout onClick={onClickHandler}>Logout</Logout>\r\n                        </UserContainer>\r\n                    </HeaderContents>\r\n                <GradientBorder/>\r\n            </Positioner>\r\n        );\r\n};\r\n\r\nexport default withRouter(Header);  // withRouter 해야 'push'를 못찾는 에러 메세지 뜨지 않음\r\n","import React , { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\"\r\nimport oc from 'open-color';\r\n\r\nconst Logo = styled.div`\r\n    font-size : 2rem;\r\n    letter-spacing:3px;\r\n    color:white;\r\n    font-family:'Rajdhani';\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst Positioner = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color:${oc.gray[8]};\r\n    position:fixed;\r\n    height:6.5%;\r\n    bottom:0%;\r\n    width:100%;\r\n    min-width:800px;\r\n    z-index:0;\r\n`;\r\n\r\nconst GradientBorder = styled.div`\r\n    height:2px;\r\n    margin:0rem 1rem 0 2rem;\r\n    border-radius:5rem;\r\n    background: linear-gradient(to right, #a31432, #ffcccb);\r\n`;\r\n\r\nconst HeaderContents = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    padding-right: 3rem;\r\n    padding-left: 1rem;\r\n`;\r\n\r\nconst Footer = ({children}) =>{\r\n        return(\r\n            <Positioner>    \r\n                    <HeaderContents>\r\n                        <Logo>\r\n                            Footer TEST\r\n                        </Logo>\r\n                        <Spacer/>\r\n                        <Logo>\r\n                            SYB\r\n                        </Logo>\r\n                    </HeaderContents>\r\n            </Positioner>\r\n        );\r\n};\r\n\r\nexport default Footer;\r\n","import React , { Component } from 'react';\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\"\r\nimport { \r\n    NotificationOutlined,\r\n    LoadingOutlined,\r\n    CalendarOutlined,\r\n    BarsOutlined,\r\n    AuditOutlined,\r\n    LayoutOutlined,\r\n    MessageOutlined,\r\n    BulbOutlined,\r\n} from '@ant-design/icons';\r\nimport {Divider} from 'antd';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\n\r\nconst MenuContainer = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-Items:center;\r\n    padding-top:2rem;\r\n`;\r\n\r\nconst MenuContent = styled.div`\r\n    color:${oc.gray[7]};\r\n    width:11rem;                    // 클릭 박스 조정\r\n    height:100%;\r\n    padding:1rem 0;\r\n    font-weight:bold;\r\n`;\r\n\r\nconst MenuItem = styled.div`\r\n  display:flex;\r\n  justify-content:space-between;\r\n  align-items:center;\r\n  height:3rem;\r\n  width:100%;\r\n  border-radius:5px;\r\n  &:hover {\r\n    background: ${oc.gray[3]};\r\n    cursor: pointer;\r\n    font-size:1rem;\r\n  }\r\n`;\r\n\r\nclass Menu extends Component{\r\n    render(){\r\n        return(\r\n            <MenuContainer>\r\n                <MenuItem>\r\n                    <Link to=\"/main\" style={{textDecoration: 'none'}}>\r\n                            <MenuContent>\r\n                            <NotificationOutlined style={{padding:\"0 1rem\"}} />\r\n                                공지사항\r\n                            </MenuContent>\r\n                    </Link>\r\n                </MenuItem>\r\n                <Divider style={{margin:\"0\"}}/>\r\n                <MenuItem>\r\n                    <Link to=\"/question\" style={{textDecoration: 'none'}}>\r\n                            <MenuContent>\r\n                            <BulbOutlined style={{padding:\"0 1rem\"}} />\r\n                                질문 추가 및 수정\r\n                            </MenuContent>\r\n                    </Link>\r\n                </MenuItem>\r\n                <Divider style={{margin:\"0\"}}/>\r\n                <MenuItem>\r\n                    <Link to=\"/status\" style={{textDecoration: 'none'}}>\r\n                            <MenuContent>\r\n                            <LoadingOutlined style={{padding:\"0 1rem\"}}/>\r\n                                조교 부재여부\r\n                            </MenuContent>\r\n                    </Link>\r\n                </MenuItem>\r\n                <Divider style={{margin:\"0\"}}/>\r\n                <MenuItem>\r\n                    <Link to=\"/curriculum\" style={{textDecoration: 'none'}}>\r\n                            <MenuContent>\r\n                            <BarsOutlined style={{padding:\"0 1rem\"}}/>\r\n                                교과과정\r\n                            </MenuContent>\r\n                    </Link>\r\n                </MenuItem>\r\n                <Divider style={{margin:\"0\"}}/>\r\n                <MenuItem>\r\n                    <Link to=\"/notice\" style={{textDecoration: 'none'}}>\r\n                            <MenuContent >\r\n                            <CalendarOutlined style={{padding:\"0 1rem\"}}/>\r\n                                학과공지\r\n                            </MenuContent>\r\n                    </Link>\r\n                </MenuItem>\r\n                <Divider style={{margin:\"0\"}}/>\r\n                <MenuItem>\r\n                    <Link to=\"/professor\" style={{textDecoration: 'none'}}>\r\n                            <MenuContent>\r\n                            <AuditOutlined style={{padding:\"0 1rem\"}}/>\r\n                                교수님 연구실\r\n                            </MenuContent>\r\n                    </Link>\r\n                </MenuItem>\r\n                <Divider style={{margin:\"0\"}}/>\r\n                <MenuItem>\r\n                    <Link to=\"/timetable\" style={{textDecoration: 'none'}}>\r\n                            <MenuContent>\r\n                            <LayoutOutlined style={{padding:\"0 1rem\"}}/>\r\n                                강의실\r\n                            </MenuContent>\r\n                    </Link>\r\n                </MenuItem>\r\n                <Divider style={{margin:\"0\"}}/>\r\n                <MenuItem>\r\n                    <Link to=\"/bestqa\" style={{textDecoration: 'none'}}>\r\n                            <MenuContent>\r\n                            <MessageOutlined style={{padding:\"0 1rem\"}}/>\r\n                                자주 묻는 질문\r\n                            </MenuContent>\r\n                    </Link>\r\n                </MenuItem>\r\n                <Divider style={{margin:\"0\"}}/>\r\n            </MenuContainer>\r\n        );\r\n    }\r\n  }\r\n\r\nexport default Menu;\r\n","import React , { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { Form, Select, Input, Button } from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\n\r\nclass Welcome extends Component{\r\n    render(){\r\n        return(\r\n            <div style={{margin: \"3% 10%\", padding:\"1% 0%\", display:\"flex\",alignItems:\"center\", flexDirection:\"column\", background:\"white\", borderRadius:\"0.5rem\",border:\"2px solid lightgray\",height:\"30rem\"}}>\r\n                <div style={{ textAlign: \"center\", fontSize: \"30px\", margin:\"0 0 2rem 0\" , fontFamily:\"Gothic A1\"}}>\r\n                관리자 공지사항\r\n                </div>\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n\r\nexport default Welcome;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Select, Input, Button } from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\"\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Curriculum = () => {\r\n    const [form] = Form.useForm();\r\n    const department = localStorage.getItem('department');\r\n    const [data, setData] = React.useState([]);\r\n    const [isDisable, setDisable] = React.useState(true);\r\n    const getData = React.useCallback(async () => {\r\n      const response = await axios.get(`https://mfam.site/curriculum/${department}`);\r\n      console.log(response);\r\n      setData(response.data);\r\n\r\n      form.setFieldsValue({\r\n        department: response.data[0].department,\r\n        link: response.data[0].link,\r\n      });\r\n    }, [department]);\r\n\r\n    const onChangeSelectFunc = React.useCallback((e) => {\r\n      console.log(form.getFieldValue(\"department\"));\r\n    }, []);\r\n  \r\n    const onValuesChange = (changedValue, allValue) => {\r\n      console.log(changedValue);\r\n    };\r\n  \r\n    const onFinish = async (formData) => {\r\n      let data = {userid:localStorage.getItem('userid')};\r\n      Object.assign(data,formData);\r\n      // formdata에 userid 추가\r\n      const response = await axios\r\n      .put(`https://mfam.site/${formData.department}`, formData)\r\n      .then((res)=>{\r\n        toast.success(\"수정에 성공하였습니다!\");\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"에러가 났어요!\");\r\n      });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n      getData();\r\n      // eslint-disable-next-line\r\n    }, [department, getData]);\r\n\r\n    return (\r\n      <div style={{margin: \"3% 10%\", padding:\"1% 0%\", display:\"flex\",alignItems:\"center\", flexDirection:\"column\", background:\"white\", borderRadius:\"0.5rem\",border:\"2px solid lightgray\"}}>\r\n        <div style={{ textAlign: \"center\", fontSize: \"30px\", fontFamily:\"Gothic A1\"}}>\r\n          <p>교과 과정 링크 수정 페이지</p>\r\n        </div>\r\n        <Form form={form} onFinish={onFinish} onFieldsChange={onValuesChange} autoComplete=\"off\" style={{width:\"30rem\"}}>\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly=\"true\"/>\r\n        </Form.Item>\r\n        <Form.Item label=\"링크\" name=\"link\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item colon={false} wrapperCol={{ span: 11, offset: 11 }}>\r\n          <Button type=\"primary\" icon ={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n      </div>\r\n    );\r\n  };\r\n  \r\nexport default Curriculum;\r\n","import React from \"react\";\r\nimport { Form, Select, Input, Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from 'styled-components';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from 'antd/lib/form';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\"\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Status = () => {\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem('department');\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\r\n      `https://mfam.site/status/${department}`\r\n    );\r\n    console.log(response.data);\r\n    let data = \"\";\r\n    if (response.data[0].status === 0) {\r\n      data = \"근무중\";\r\n    } else if (response.data[0].status === 1) {\r\n      data = \"부재중\";\r\n    } else {\r\n      data = \"기타내용 입력\";\r\n    }\r\n    form.setFieldsValue({\r\n      department: response.data[0].department,\r\n      status: data,\r\n      comment: response.data[0].comment,\r\n    });\r\n  });\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onFinish = async (data) => {\r\n    const response = await axios\r\n      .put(`https://mfam.site/status/${data.department}`, data)\r\n      .catch((error) => {\r\n        return toast.error(\"에러가 났어요!\");\r\n      });\r\n    toast.success(\"등록에 성공하였습니다!\");\r\n    console.log(response);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    console.log(form.getFieldValue(\"status\"));\r\n    if (form.getFieldValue(\"status\") === \"2\") {\r\n      setDisable(true);\r\n    } else {\r\n      setDisable(false);\r\n    }\r\n  }, [form.data]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(department);\r\n    if (department === \"\") return;\r\n    getData();\r\n  }, [department, getData]);\r\n\r\n  return (\r\n    <div style={{margin: \"3% 10%\", padding:\"1% 0%\", display:\"flex\",alignItems:\"center\", flexDirection:\"column\", background:\"white\", borderRadius:\"0.5rem\",border:\"2px solid lightgray\"}}>\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily:\"Gothic A1\"\r\n        }}\r\n      >\r\n        <p >{department} 조교 상태 수정 페이지</p>\r\n      </div>\r\n\r\n      <Form form={form} onFinish={onFinish} onFieldsChange={onValuesChange} style={{width:\"30rem\"}}>\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly=\"true\"/>\r\n        </Form.Item>\r\n        <Form.Item label=\"상태\" name=\"status\" required>\r\n          <Select>\r\n            <Option value=\"0\">근무중</Option>\r\n            <Option value=\"1\">부재중</Option>\r\n            <Option value=\"2\">기타내용 입력</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          noStyle\r\n          shouldUpdate={(preValues,currentValues)=>preValues.status !== currentValues.status}\r\n        >\r\n          {({ getFieldValue })=>{\r\n            return form.getFieldValue('status') === '2' || form.getFieldValue('status')==='기타내용 입력' ?\r\n            (\r\n              <Form.Item label=\"기타내용\" name=\"comment\" rules={[{required:true, messsage:'기타 내용을 입력해주세요'}]}>\r\n                <TextArea disabled={isDisable} style={{resize:\"none\"}}/>\r\n              </Form.Item>)\r\n            : null;\r\n          }}\r\n        </Form.Item>\r\n        <Form.Item colon={false} wrapperCol={{ span: 11, offset: 11 }}>\r\n          <Button type=\"primary\" icon ={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Select, Input, Button } from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\"\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Notice = () => {\r\n    const [form] = Form.useForm();\r\n    const department = localStorage.getItem('department');\r\n    const [data, setData] = React.useState([]);\r\n    const [isDisable, setDisable] = React.useState(true);\r\n    const getData = React.useCallback(async () => {\r\n      const response = await axios.get(`https://mfam.site/notice/${department}`);\r\n      console.log(response);\r\n      setData(response.data);\r\n\r\n      form.setFieldsValue({\r\n        department: response.data[0].department,\r\n        link: response.data[0].link,\r\n      });\r\n    }, [department]);\r\n\r\n    const onChangeSelectFunc = React.useCallback((e) => {\r\n      console.log(form.getFieldValue(\"department\"));\r\n    }, []);\r\n  \r\n    const onValuesChange = (changedValue, allValue) => {\r\n      console.log(changedValue);\r\n    };\r\n  \r\n    const onFinish = async (formData) => {\r\n      const response = await axios\r\n      .put(`https://mfam.site/notice/${formData.department}`, formData)\r\n      .catch((error) => {\r\n        toast.error(\"에러가 났어요!\");\r\n      });\r\n    toast.success(\"수정에 성공하였습니다!\");\r\n    console.log(response);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n      getData();\r\n      // eslint-disable-next-line\r\n    }, [department, getData]);\r\n\r\n    return (\r\n      <div style={{margin: \"3% 10%\", padding:\"1% 0%\", display:\"flex\",alignItems:\"center\", flexDirection:\"column\", background:\"white\", borderRadius:\"0.5rem\",border:\"2px solid lightgray\"}}>\r\n        <div style={{ textAlign: \"center\", fontSize: \"30px\", fontFamily:\"Gothic A1\" }}>\r\n          <p>학과 공지 링크 수정 페이지</p>\r\n        </div>\r\n        <Form form={form} onFinish={onFinish} onFieldsChange={onValuesChange} autoComplete=\"off\" style={{width:\"30rem\"}}>\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly=\"true\"/>\r\n        </Form.Item>\r\n        <Form.Item label=\"링크\" name=\"link\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item colon={false} wrapperCol={{ span: 11, offset: 11 }}>\r\n          <Button type=\"primary\" icon ={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n      </div>\r\n    );\r\n  };\r\n  \r\nexport default Notice;\r\n","import React from \"react\";\r\nimport { Form, Select, Input, Button,Row, Col, Divider,Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from 'styled-components';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from 'antd/lib/form';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined , ExclamationCircleOutlined } from \"@ant-design/icons\"\r\n\r\nconst QuestionList = ({data,getData,setPage,page}) => {\r\n    console.log(data);\r\n    const [form] = Form.useForm();\r\n    const [visible,setVisible] = React.useState(false);\r\n    const num = data[0];\r\n    const FormHandler = () => {\r\n      setVisible(true);\r\n    };\r\n  \r\n    const handleOk = (e) => {\r\n      setVisible(false);\r\n    };\r\n  \r\n    const handleCancel = (e) => {\r\n      setVisible(false);\r\n    };\r\n  \r\n    const onDeleteFunc = async (formData) => {\r\n      const response = await axios\r\n        .delete(`https://mfam.site/knowledgePlus/${data.faqno}`, formData)\r\n        .catch((error) => {\r\n          return toast.error(\"에러가 났어요!\");\r\n          console.log(error);\r\n        });\r\n      toast.success(\"질문을 삭제했습니다!\");\r\n      setVisible(false);\r\n      setPage(page);\r\n      getData();\r\n    };\r\n  \r\n    const onChangeFunc = async (formData) => {\r\n        // 공백 문자처리\r\n        for (const [key, value] of Object.entries(formData)) {\r\n          if(value === undefined || value === null || value === NaN){\r\n            formData[key]=\"\";\r\n          }\r\n        }\r\n  \r\n      const response = await axios\r\n        .put(`https://mfam.site/knowledgePlus/${data.faqno}`, formData)\r\n        .catch((error) => {\r\n          return toast.error(\"에러가 났어요!\");\r\n          console.log(error);\r\n        });\r\n      toast.success(\"질문을 수정했습니다!\");\r\n      console.log(response);\r\n      setVisible(false);\r\n      setPage(page);\r\n      getData();\r\n    };\r\n  \r\n    const onValuesChange = (changedValue, allValue) => {\r\n      console.log(changedValue);\r\n    };\r\n  \r\n    setTimeout(function () {\r\n      form.setFieldsValue({\r\n        faqno:data.faqno,\r\n        category1: data.category1,\r\n        category2: data.category2,\r\n        category3: data.category3,\r\n        category4: data.category4,\r\n        category5: data.category5,\r\n        question: data.question,\r\n        questionAnswer: data.questionAnswer,\r\n        landingUrl: data.landingUrl,\r\n        imageinfo: data.imageinfo,\r\n      });\r\n    },0);\r\n  \r\n  \r\n    return (\r\n      <>\r\n      <Divider orientation=\"left\">{data.count}</Divider>\r\n      <Row justify=\"start\" style={{width:\"90%\" , border:\"1px solid lightgray\",padding:\"0.8rem 0\",margin:\"0 1rem\", display:\"flex\",alignItems:\"center\",borderRadius:\"5px\"}}>\r\n        <Col flex={9} style={{marginLeft:\"2rem\",width:\"70%\"}}>\r\n          {data.question}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button onClick={FormHandler}>수정하기</Button>\r\n          <Modal\r\n            title=\"질문수정\"\r\n            visible={visible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n              null,\r\n              null,\r\n            ]}  //ok와 cancel 버튼을 없애기 위함\r\n            width=\"40rem\"\r\n          >\r\n          <Form \r\n            form={form} \r\n            onFinish={onChangeFunc} \r\n            onFieldsChange={onValuesChange}\r\n            autoComplete=\"off\"\r\n            style={{width:\"95%\", padding:\"0 5%\"}}\r\n          >\r\n           <Form.Item \r\n              label=\"질문\" \r\n              name=\"question\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: '질문을 입력해주세요',\r\n                },\r\n              ]}\r\n              required\r\n            >\r\n              <Input initialvalues={data.question}/>\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"답변\"\r\n              name=\"questionAnswer\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: '답변을 입력해주세요',\r\n                },\r\n              ]}\r\n              required\r\n            >\r\n              <Input initialvalues={data.questionAnswer}/>\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"카테고리 1\"\r\n              name=\"category1\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: '하나 이상의 카테고리를 설정해주세요',\r\n                },\r\n              ]}\r\n              required\r\n            >\r\n              <Input initialvalues={data.category1}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"카테고리 2\" name=\"category2\">\r\n              <Input initialvalues={data.category2}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"카테고리 3\" name=\"category3\">\r\n              <Input initialvalues={data.category3}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"카테고리 4\" name=\"category4\">\r\n              <Input initialvalues={data.category4}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"카테고리 5\" name=\"category5\">\r\n              <Input initialvalues={data.category5}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"답변링크\" name=\"landingUrl\">\r\n              <Input initialvalues={data.landingUrl}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"이미지링크\" name=\"imageinfo\">\r\n              <Input initialvalues={data.imageinfo}/>\r\n            </Form.Item>\r\n            \r\n            <Form.Item colon={false} wrapperCol={{ span: 20, offset: 7 }}>\r\n              <Button icon ={<CloudUploadOutlined />} htmlType=\"submit\">\r\n                수정하기\r\n              </Button>\r\n            <Button icon ={<ExclamationCircleOutlined />} type=\"primary\" onClick={onDeleteFunc} style={{backgroundColor:\"red\", color:\"white\",border:\"none\",marginLeft:\"3rem\"}}>\r\n                삭제하기\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n      <ToastContainer\r\n            position=\"bottom-right\"\r\n            autoClose={2500}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  export default QuestionList;\r\n","import React from \"react\";\r\nimport { Form, Select, Input, Button,Row, Col, Divider,Modal,Pagination } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from 'styled-components';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from 'antd/lib/form';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\"\r\nimport QuestionList from \"./QuestionList\"\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Question = (props) => {\r\n  const pageSize = parseInt(window.innerHeight/200);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible,setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page,setPage] = React.useState(1);\r\n  const num = data[0];\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = (num) => {\r\n    const _data= data.slice((num-1)*pageSize,(num-1)*pageSize+pageSize);\r\n    // data page에 따라 자르는 작업\r\n\r\n    return _data.map((it,i)=>{\r\n      it.count=data.length-i-(pageSize*(page-1));\r\n      // 게시글 번호 계산\r\n    \r\n      it.props=props;\r\n      return(\r\n          <QuestionList key = {i} data={it} getData={getData} setPage={setPage} page={page}/>\r\n      )\r\n    })\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if(value === undefined || value === null || value === NaN){\r\n        formData[key]=\"\";\r\n      }\r\n    }\r\n\r\n    const response = await axios\r\n      .post(`https://mfam.site/knowledgePlus`, formData)\r\n      .catch((error) => {\r\n        return toast.error(\"에러가 났어요!\");\r\n        console.log(error);\r\n      });\r\n    toast.success(\"질문을 등록했습니다!\");\r\n    console.log(response);\r\n    setPage(1);\r\n    getData();\r\n    setVisible(false);\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n \r\n  const onPageChange = (pagenum) => {\r\n    //pagenum은 1,2,3,4 식으로 전송 됨.\r\n    setPage(pagenum);\r\n    getData();\r\n  }\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/knowledgePlus`);\r\n    setData(response.data.reverse());\r\n    //setData(response.data.values.reverse());\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{margin: \"3% 10%\", padding:\"1% 0%\", display:\"flex\",alignItems:\"center\", flexDirection:\"column\", background:\"white\", borderRadius:\"0.5rem\",border:\"2px solid lightgray\"}}>\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily:\"Gothic A1\"\r\n        }}\r\n      >\r\n        <p >질문 수정 페이지</p>\r\n      </div>\r\n      {/* {data.map((it,i)=>{\r\n        it.count=data.length-i;\r\n        it.props=props;\r\n        return(\r\n            <QuestionList key = {i} data={it} getData={getData}/>\r\n        )\r\n      })} */}\r\n      {PageRefresh(page)}\r\n      <div style={{marginBottom:\"2rem\"}}/>\r\n      \r\n      <Pagination current={page} total={data.length} defaultPageSize={pageSize} onChange={onPageChange} style={{marginBottom:\"1.5rem\"}}/>\r\n\r\n      <Button onClick={FormHandler}>\r\n        질문 추가\r\n      </Button>\r\n      <Modal\r\n          title=\"질문추가\"\r\n          visible={visible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          footer={[\r\n            null,\r\n            null,\r\n          ]}  //ok와 cancel 버튼을 없애기 위함\r\n          width=\"40rem\"\r\n        >\r\n        <Form \r\n          form={form} \r\n          onFinish={onFinishFunc} \r\n          onFieldsChange={onValuesChange}\r\n          autoComplete=\"off\"\r\n          style={{width:\"95%\", padding:\"0 5%\"}}\r\n        >\r\n          <Form.Item \r\n            label=\"질문\" \r\n            name=\"question\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '질문을 입력해주세요',\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input/>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"답변\"\r\n            name=\"questionAnswer\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '답변을 입력해주세요',\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input/>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"카테고리 1\"\r\n            name=\"category1\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '하나 이상의 카테고리를 설정해주세요',\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input/>\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 2\" name=\"category2\">\r\n            <Input/>\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 3\" name=\"category3\">\r\n            <Input/>\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 4\" name=\"category4\">\r\n            <Input/>\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 5\" name=\"category5\">\r\n            <Input/>\r\n          </Form.Item>\r\n          <Form.Item label=\"답변링크\" name=\"landingUrl\">\r\n            <Input/>\r\n          </Form.Item>\r\n          <Form.Item label=\"이미지링크\" name=\"imageinfo\">\r\n            <Input/>\r\n          </Form.Item>\r\n          <Form.Item colon={false} wrapperCol={{ span: 11, offset: 10 }}>\r\n            <Button icon ={<CloudUploadOutlined />} htmlType=\"submit\" style={{margin:\"1rem 1rem 0 1rem\"}}>\r\n              추가하기\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Select, Input, Button } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\"\r\n\r\nconst Professor = () => {\r\n    const [form] = Form.useForm();\r\n    const [inputValue, setInputValue] = React.useState(\"\");\r\n    const onFinishFunc = async (data) => {\r\n      const response = await axios\r\n        .put(`hhttps://mfam.site/professor/${inputValue}`, data)\r\n        .catch((error) => {\r\n          toast.error(\"에러가 났어요!\");\r\n        });\r\n      toast.success(\"수정에 성공하였습니다!\");\r\n      console.log(response);\r\n    };\r\n  \r\n    const onChangeFunc = (e) => {\r\n      setInputValue(e.target.value);\r\n    };\r\n  \r\n    const onSearchFunc = async () => {\r\n      console.log(inputValue);\r\n      const response = await axios\r\n        .get(`https://mfam.site/professor/${inputValue}`)\r\n        .catch((error) => {\r\n          toast.error(\"에러가 났어요!\");\r\n        });\r\n      console.log(response);\r\n      if (response.data.length === 0) {\r\n        return toast.error(\"존재하지 않는 이름입니다.\");\r\n      }\r\n      toast.success(\"교수님 정보를 성공적으로 불러왔습니다.\");\r\n      form.setFieldsValue({\r\n        class_position: response.data[0].class_position,\r\n        phone_number: response.data[0].phone_number,\r\n      });\r\n    };\r\n    return (\r\n    <div style={{margin: \"3% 10%\", padding:\"1% 0%\", display:\"flex\",alignItems:\"center\", flexDirection:\"column\", background:\"white\", borderRadius:\"0.5rem\",border:\"2px solid lightgray\"}}>\r\n        <div style={{ textAlign: \"center\", fontSize: \"30px\", fontFamily:\"Gothic A1\" }}>\r\n          <p>교수님 연구실 수정 페이지</p>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"0 0 2rem 0\", width:\"30rem\"}}>\r\n          <p style={{width:\"5rem\"}}>성함:</p>\r\n          <Input style={{ margin: \"0 4% 0 0\" }} onChange={onChangeFunc} />\r\n          <Button icon={<SearchOutlined />} onClick={onSearchFunc}>\r\n            Search\r\n          </Button>\r\n        </div>\r\n        <Form form={form} onFinish={onFinishFunc} autoComplete=\"off\" style={{width:\"30rem\"}}>\r\n          <Form.Item label=\"연구실\" name=\"class_position\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"전화번호\" name=\"phone_number\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ span: 11, offset: 11 }}>\r\n            <Button type=\"primary\" icon ={<CloudUploadOutlined />} htmlType=\"submit\">\r\n              수정하기\r\n            </Button>\r\n          </Form.Item>\r\n          <ToastContainer\r\n            position=\"bottom-right\"\r\n            autoClose={2500}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n        </Form>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Professor;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Select, Input, Button } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\"\r\n\r\nconst Timetable = () => {\r\n    const [form] = Form.useForm();\r\n    const [inputValue, setInputValue] = React.useState(\"\");\r\n    const onFinishFunc = async (data) => {\r\n      const response = await axios\r\n        .put(`https://mfam.site/timetable/${inputValue}`, data)\r\n        .catch((error) => {\r\n          toast.error(\"에러가 났어요!\");\r\n        });\r\n      toast.success(\"수정에 성공하였습니다!\");\r\n      console.log(response);\r\n    };\r\n  \r\n    const onChangeFunc = (e) => {\r\n      setInputValue(e.target.value);\r\n    };\r\n  \r\n    const onSearchFunc = async () => {\r\n      console.log(inputValue);\r\n      const response = await axios\r\n        .get(`https://mfam.site/timetable/${inputValue}`)\r\n        .catch((error) => {\r\n          toast.error(\"에러가 났어요!\");\r\n        });\r\n      console.log(response);\r\n      if (response.data.length === 0) {\r\n        return toast.error(\"존재하지 않는 강의실입니다.\");\r\n      }\r\n      toast.success(\"강의실 정보를 성공적으로 불러왔습니다.\");\r\n      form.setFieldsValue({\r\n        link: response.data[0].link,\r\n      });\r\n    };\r\n    return (\r\n    <div style={{margin: \"3% 10%\", padding:\"1% 0%\", display:\"flex\",alignItems:\"center\", flexDirection:\"column\", background:\"white\", borderRadius:\"0.5rem\",border:\"2px solid lightgray\"}}>\r\n        <div style={{ textAlign: \"center\", fontSize: \"30px\" , fontFamily:\"Gothic A1\"}}>\r\n          <p>강의실 시간표 수정 페이지</p>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"0 0 2rem 0\", width:\"30rem\"}}>\r\n          <p style={{width:\"5rem\"}}>강의실:</p>\r\n          <Input style={{ margin: \"0 4% 0 0\" }} onChange={onChangeFunc} />\r\n          <Button icon={<SearchOutlined />} onClick={onSearchFunc}>\r\n            Search\r\n          </Button>\r\n        </div>\r\n        <Form form={form} onFinish={onFinishFunc} autoComplete=\"off\" style={{width:\"30rem\"}}>\r\n          <Form.Item label=\"링크\" name=\"link\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ span: 11, offset: 11 }}>\r\n            <Button type=\"primary\" icon ={<CloudUploadOutlined />} htmlType=\"submit\">\r\n              수정하기\r\n            </Button>\r\n          </Form.Item>\r\n          <ToastContainer\r\n            position=\"bottom-right\"\r\n            autoClose={2500}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n        </Form>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Timetable;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Select, Input, Button } from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\"\r\n\r\nconst BestqaData = ({ data }) => {\r\n    const [form] = Form.useForm();\r\n    const onFinishFunc = async (formData) => {\r\n      const response = await axios\r\n        .put(`https://mfam.site/bestqa/${data.id}`, formData)\r\n        .catch((error) => {\r\n          toast.error(\"에러가 났어요!\");\r\n        });\r\n      toast.success(\"수정에 성공하였습니다!\");\r\n      console.log(response);\r\n    };\r\n    return (\r\n      <div style={{width:\"30rem\"}}>\r\n        <Form\r\n          initialValues={{ id: data.id, question: data.question }}\r\n          onFinish={onFinishFunc}\r\n          autoComplete=\"off\"\r\n          form={form}\r\n        >\r\n          <Form.Item label={`Top ${data.id} `} name=\"question\">\r\n            <Input/>\r\n          </Form.Item>\r\n          <Form.Item colon={false} wrapperCol={{ span: 11, offset: 11 }}>\r\n            <Button type=\"primary\" icon ={<CloudUploadOutlined />} htmlType=\"submit\">\r\n              수정하기\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\nconst Bestqa = () => {\r\n    const [data, setData] = React.useState([]);\r\n    const getData = React.useCallback(async () => {\r\n      const response = await axios.get(\"https://mfam.site/bestqa\");\r\n      console.log(response);\r\n      setData(response.data);\r\n    }, []);\r\n    React.useEffect(() => {\r\n      getData();\r\n    }, []);\r\n    return (\r\n      <div style={{margin: \"3% 10%\", padding:\"1% 0%\", display:\"flex\",alignItems:\"center\", flexDirection:\"column\", background:\"white\", borderRadius:\"0.5rem\",border:\"2px solid lightgray\"}}>\r\n        <div style={{ textAlign: \"center\", fontSize: \"30px\", margin:\"0 0 2rem 0\" , fontFamily:\"Gothic A1\"}}>\r\n          자주 묻는 질문 수정 페이지\r\n        </div>\r\n        {data.map((it, i) => {\r\n          return <BestqaData key={it.classname} data={it}/>;\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  \r\nexport default Bestqa;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authUser } from \"../actions/userAction\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nexport default function (Component, option , adminRoute = null){\r\n    //option\r\n    //null => 아무나 출입 가능\r\n    //true => 로그인한 유저만 출입 가능\r\n    //false => 로그인한 유저는 출입 불가능\r\n\r\n    function AuthCheck(props){\r\n        const dispatch = useDispatch();\r\n        let _data={};\r\n        useEffect(() =>{\r\n        dispatch(authUser()).then((res) =>{\r\n            if(!res){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title:'로그인이 필요합니다',\r\n                    showConfirmButton: true,\r\n                    width:'25rem',\r\n                    timer: 2000,\r\n                }).then(props.history.push(\"/\"));\r\n            }\r\n            else{\r\n                _data = Object.assign(_data,res);\r\n            }\r\n        });\r\n    },[]);\r\n            return <Component data={_data}/>\r\n    }\r\n\r\n    return AuthCheck;\r\n}\r\n","import React , { Component } from 'react';\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\"\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer'\r\nimport Menu from '../components/Menu';\r\nimport Welcome from './Welcome';\r\nimport Curriculum from './Curriculum';\r\nimport Status from './Status';\r\nimport Notice from './Notice';\r\nimport Question from './Question';\r\nimport Professor from './Professor';\r\nimport Timetable from './Timetable';\r\nimport Bestqa from './Bestqa';\r\nimport oc from 'open-color';\r\nimport Auth from \"../hoc/auth\";\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    position:absolute;\r\n    flex-direction:row;\r\n    width:100%;\r\n    height:100%;\r\n    \r\n    margin-top:4rem;\r\n    padding-left:1rem;\r\n    -ms-user-select: none; \r\n    -moz-user-select: -moz-none;\r\n    -khtml-user-select: none;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n\r\n    @media (min-width: 768px) {\r\n      min-width:800px;\r\n      min-height:800px;\r\n    }\r\n`;\r\n\r\nconst MenuBar = styled.div`\r\n  width:12rem;\r\n  height:85%;\r\n  background-color:${oc.gray[1]};\r\n  border-radius:1rem;\r\n  position:fixed;\r\n  z-index:2;\r\n  border:4px groove ${oc.gray[4]};\r\n  \"&:hover\": {\r\n      background: \"#efefef\"\r\n    }\r\n  @media (max-width: 767px) {\r\n      display:none;\r\n  }\r\n`;\r\n\r\nconst Contents = styled.div`\r\n  width:100%;\r\n  height:85%;\r\n  min-width:800px;\r\n  margin:2rem 2rem 0 13rem;\r\n  border-radius:0.5rem;\r\n  background-color:${oc.gray[1]};\r\n  border:2px groove ${oc.gray[4]};\r\n`;\r\n\r\nconst MainPage = (props) => {\r\n  const userdata = props.data;\r\n        return(\r\n          <div>\r\n            <header>\r\n              <Header/>\r\n            </header>\r\n              <Container>\r\n              <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n                  <MenuBar style={{marginTop:\"2rem\"}}>\r\n                    <Menu/>\r\n                  </MenuBar>\r\n                  <Contents>\r\n                    <Switch>\r\n                      <Route path=\"/status\" component={Auth(Status)} exact/>\r\n                      <Route path=\"/question\" component={Question} exact/>\r\n                      <Route path=\"/curriculum\" component={Auth(Curriculum)} exact/>\r\n                      <Route path=\"/notice\" component={Auth(Notice)} exact/>\r\n                      <Route path=\"/professor\" component={Auth(Professor)} exact/>\r\n                      <Route path=\"/timetable\" component={Auth(Timetable)} exact/>\r\n                      <Route path=\"/bestqa\" component={Auth(Bestqa)} exact/>\r\n                      <Route path=\"/main\" component={Auth(Welcome)} exact/>\r\n                    </Switch>\r\n                  </Contents>\r\n                </Router>\r\n              </Container>\r\n              {/* <Footer/> */}\r\n          </div>\r\n        );\r\n  }\r\n\r\nexport default MainPage;","import React , { Component, useState } from 'react';\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\"\r\nimport { registerUser } from \"../actions/userAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Cascader,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Checkbox,\r\n    Button,\r\n    AutoComplete,\r\n  } from 'antd';\r\nimport { \r\n  QuestionCircleOutlined,\r\n  LeftOutlined,\r\n } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport axios from \"axios\";\r\nimport oc from 'open-color';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    min-width:800px;\r\n    min-height:600px;\r\n    position:absolute;\r\n    width:100%;\r\n    height:100%;\r\n    background-color:#a31432;\r\n    justify-content:center;\r\n    align-items:center;\r\n`;\r\n\r\nconst Whitespace = styled.div`\r\n  display:flex;\r\n  flex-direction:column;\r\n  background-color:white;\r\n  justify-content:center;\r\n  align-items:center;\r\n  padding-bottom:6rem;\r\n  width:90%;\r\n  height:90%;\r\n  border-radius:2rem;\r\n`\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst Title = styled.div`\r\n    font-size : 3rem;\r\n    color: #a31432;\r\n    font-family:'Rajdhani';\r\n    margin-top:5rem;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n`;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst Backwards = styled.div`\r\n  font-size:2.8rem;\r\n  left:7rem;\r\n  top:3.5rem;\r\n  color:#a31432;\r\n  position:absolute;\r\n  &:hover {\r\n    color: ${oc.red[8]};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Signup = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [_id,setId] = useState(\"\");\r\n  const [_password,setPassword] = useState(\"\");\r\n  const [_department,setDepartment] = useState(\"\");\r\n  const [_email,setEmail] = useState(\"\");\r\n  const [_name,setName] = useState(\"\");\r\n  const [_phonenum,setPhonenum] = useState(\"\");\r\n  const [id_duplication,checkDup] = useState(\"false\");\r\n  const sejongemail = '@sejong.ac.kr';\r\n  const dispatch = useDispatch();\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n    checkDup(false);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n      setPassword(e.currentTarget.value);\r\n  };\r\n  const onEmailHandler = (e) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n  const onNameHandler = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const onPhoneHandler = (e) => {\r\n      setPhonenum(e.currentTarget.value);\r\n  };\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    setDepartment(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onDuplicationHadnler = (e) => {\r\n    if(_id.length===0){\r\n      Swal.fire({\r\n        icon: 'warning',\r\n        text: '아이디를 입력해주세요',\r\n        showConfirmButton: true,\r\n        width:'25rem',\r\n        timer: 1500\r\n      })\r\n\r\n      return ;\r\n    }\r\n\r\n    axios.post('https://mfam.site/auth/idCheck', {userid:_id})\r\n      .then((res) => {\r\n        console.log(res);\r\n        if(res.status===201){\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text:res.data.message,\r\n            showConfirmButton: true,\r\n            width:'25rem',\r\n            timer: 1500\r\n          })\r\n          \r\n          checkDup(true);\r\n          console.log(id_duplication);\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            icon: 'warning',\r\n            text:res.data.message,\r\n            showConfirmButton: true,\r\n            width:'25rem',\r\n            timer: 1500\r\n          })\r\n\r\n          checkDup(false);\r\n        }\r\n      }\r\n      )\r\n      .catch((error) =>  {     \r\n        console.log(error);   \r\n        Swal.fire({\r\n        icon: 'warning',\r\n        text: '중복된 아이디 입니다.',\r\n        showConfirmButton: true,\r\n        width:'25rem',\r\n        timer: 1500\r\n      })\r\n\r\n      checkDup(false);\r\n      })\r\n  };\r\n  const a = (e) =>{\r\n    props.history.push(\"/\");\r\n  }\r\n\r\n  const onSubmitHandler = (e) => {\r\n      let body = {\r\n        email: _email,\r\n        username: _name,\r\n        password: _password,\r\n        userid: _id,\r\n        phoneNumber: _phonenum,\r\n        department:_department,\r\n      };\r\n      console.log(body);\r\n\r\n      if(id_duplication===false){\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: '가입 실패',\r\n          text: '아이디 중복검사를 완료해주세요',\r\n          showConfirmButton: true,\r\n          width:'25rem',\r\n          timer: 2000\r\n        })\r\n\r\n        return ;\r\n      }\r\n\r\n      dispatch(registerUser(body)).then((res) => {\r\n        \r\n        if(res.status===409){\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: '가입 실패',\r\n            text:res.data.message,\r\n            showConfirmButton: true,\r\n            width:'25rem',\r\n            timer: 2000\r\n          })\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: '가입 완료',\r\n            showConfirmButton: false,\r\n            width:'20rem',\r\n            timer: 2000\r\n          })\r\n          props.history.push(\"/\");\r\n        }\r\n        \r\n      }).catch((err) => {\r\n        console.log(err);\r\n     }); \r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onSubmitHandler}\r\n      autoComplete=\"off\"\r\n      scrollToFirstError\r\n    >\r\n    <Container>\r\n      <Whitespace>\r\n        <Backwards>\r\n          <LeftOutlined onClick={a}/>\r\n        </Backwards>\r\n      <Title>\r\n        <p>Sign up</p>\r\n      </Title>\r\n\r\n      <div style={{display:'flex',flexDirection:'row',justifyContent:'center',marginLeft:'6rem'}}>\r\n      <Form.Item\r\n        style={{width:\"20rem\", paddingBottom:\"1%\"}}\r\n        name=\"id\"\r\n        label=\"아이디\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '아이디를 입력해주세요.',\r\n          },\r\n        ]}\r\n      >\r\n        <Input onChange={onIdHandler}/>\r\n        \r\n      </Form.Item>\r\n      <Button style={{position:\"relatvive\",width:\"5rem\", fontSize:\"0.7rem\",marginLeft:\"1rem\"}} onClick={onDuplicationHadnler}>중복검사</Button>\r\n      </div>\r\n\r\n      <Form.Item\r\n        style={{width:\"20rem\", paddingBottom:\"1%\"}}\r\n        name=\"password\"\r\n        label=\"비밀번호\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '패스워드를 입력해주세요.',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password onChange={onPasswordHanlder}/>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        style={{width:\"20rem\", paddingBottom:\"1%\"}}\r\n        name=\"confirm\"\r\n        label=\"비밀번호 확인\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '패스워드를 확인해주세요',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(rule, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n              return Promise.reject('비밀번호가 일치하지 않습니다!');\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        style={{width:\"20rem\", paddingBottom:\"1%\"}}\r\n        name=\"name\"\r\n        label=\"이름\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '이름을 입력해주세요.',\r\n          },\r\n        ]}\r\n      >\r\n        <Input onChange={onNameHandler}/>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        style={{width:\"20rem\", paddingBottom:\"1%\"}}\r\n        name=\"department\"\r\n        label=\"학과\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '학과를 선택해주세요',\r\n          },\r\n        ]}\r\n      >\r\n       <Select onChange={onChangeSelectFunc}>\r\n            <Option value=\"0\">컴퓨터공학과</Option>\r\n            <Option value=\"1\">소프트웨어학과</Option>\r\n            <Option value=\"2\">정보보호학과</Option>\r\n            <Option value=\"3\">데이터사이언스학과</Option>\r\n            <Option value=\"4\">지능기전공학부</Option>\r\n            <Option value=\"5\">창의소프트학부</Option>\r\n          </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        style={{width:\"20rem\", paddingBottom:\"1%\"}}\r\n        name=\"email\"\r\n        label=\"이메일\"\r\n        initialValue=\"\"\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: '올바른 이메일이 아닙니다',\r\n          },\r\n          {\r\n            required: true,\r\n            message: '이메일을 입력해주세요.',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(rule, value) {\r\n              if (value.indexOf(sejongemail)===value.length-sejongemail.length || !value) {\r\n                return Promise.resolve();\r\n              }\r\n              return Promise.reject('');\r\n            },\r\n          }),\r\n          \r\n        ]}\r\n      >\r\n        <Input onChange={onEmailHandler} placeholder=\"abc@sejong.ac.kr\"/>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        style={{width:\"20rem\", paddingBottom:\"1%\"}}\r\n        name=\"phonenumber\"\r\n        label=\"휴대폰 번호\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '휴대폰 번호를 입력해주세요.',\r\n          },\r\n        ]}\r\n      >\r\n        <Input onChange={onPhoneHandler}/>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\" style={{backgroundColor:\"#a31432\", border:\"none\",margin:\"0.5rem 1rem 0\"}}>\r\n              회원가입\r\n          </Button>\r\n      </Form.Item>\r\n      </Whitespace>\r\n      </Container>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, {Component,useState} from 'react';\nimport { Link, Route, Switch, withRouter, BrowserRouter as Router } from \"react-router-dom\"\nimport styled from 'styled-components';\nimport Login from \"./pages/Login\"\nimport MainPage from \"./pages/MainPage\"\nimport Signup from \"./pages/Signup\"\nimport './App.css';\nimport Auth from \"./hoc/auth\";\n\nconst Container = styled.div`\n    -ms-user-select: none; \n    -moz-user-select: -moz-none;\n    -khtml-user-select: none;\n    -webkit-user-select: none;\n    user-select: none;\n`;\n\nclass App extends Component {\n  render(){\n  return (\n    <Container>\n      <Router basename={`${process.env.PUBLIC_URL}/`}>\n        <Switch>\n          <Route path=\"/\" component={Login} exact/>\n          <Route path=\"/signup\" component={Signup} exact/>\n          <Route path=\"/main\" component={Auth(MainPage,true)} exact/>\n        </Switch>\n      </Router>\n    </Container>\n  );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { REGISTER_USER, LOGIN_USER,LOGOUT_USER,REGISTER_ERROR,AUTH_USER,LOGIN_SUCCESS,AUTH_SUCCESS,AUTH_FAILED } from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n  loggedIn : false,\r\n  user : {},\r\n}\r\n\r\nexport default function (state = defaultState, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return { ...state, loggedIn:false, user:{}};\r\n    case REGISTER_ERROR:\r\n        return { ...state, loggedIn:false, user:{}};\r\n    case LOGIN_USER:\r\n      return { ...state, loggedIn:true, user:{...action.payload} };\r\n    case LOGOUT_USER:\r\n      return { ...state, loggedIn:false, user:{} };\r\n    case AUTH_USER:\r\n      return {...state,loggedIn:true,user:{...action.payload}};\r\n    case AUTH_FAILED:\r\n      return {...state,loggedIn:false,user:{}};\r\n    case AUTH_SUCCESS:\r\n      return {...state,loggedIn:true};\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport user from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport promiseMiddlerware from \"redux-promise\";\nimport reduxThunk from \"redux-thunk\";\nimport reducer from \"./reducer\";\n\nconst createStoreWidthMiddleware = applyMiddleware(\n  promiseMiddlerware,\n  reduxThunk\n)(createStore);\n\nReactDOM.render(\n    <Provider\n    store={createStoreWidthMiddleware(\n      reducer,\n      //개발자 도구를 사용하기 위한 설정\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}