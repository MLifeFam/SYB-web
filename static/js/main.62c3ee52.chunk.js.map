{"version":3,"sources":["actions/types.js","utils/axios.js","actions/userAction.js","pages/Login.js","components/Header.js","components/Footer.js","components/Menu.js","pages/Welcome.js","pages/Curriculum.js","pages/Status.js","pages/Notice.js","pages/QuestionList.js","pages/Question.js","pages/Userquestionlist.js","pages/Userquestion.js","pages/ProfessorAdd.js","pages/ProfessorModify.js","pages/Professor.js","pages/TimetableAdd.js","pages/TimetableModify.js","pages/Timetable.js","pages/Bestqa.js","pages/DataModifyList.js","pages/DataModify.js","pages/Adminpage.js","hoc/auth.js","pages/MainPage.js","pages/Signup.js","App.js","serviceWorker.js","reducer/userReducer.js","reducer/index.js","index.js"],"names":["REGISTER_USER","LOGIN_USER","LOGOUT_USER","AUTH_USER","REGISTER_ERROR","AUTH_SUCCESS","AUTH_FAILED","axios","defaults","withCredentials","authUser","props","token","localStorage","getItem","header","headers","authorization","dispatch","get","widthCredentials","then","res","type","res2","setItem","data","result","department","user","role","catch","error","console","log","withReactContent","Swal","LoginForm","styled","div","Logo","Whitespace","Login","useState","_id","setId","_password","setPassword","useDispatch","style","marginBottom","name","className","onFinish","e","clear","dataToSubmit","uid","userid","payload","post","response","loginUser","password","status","accessToken","loginSuccess","history","push","fire","icon","title","text","message","showConfirmButton","width","timer","err","autoComplete","Item","rules","required","paddingBottom","prefix","UserOutlined","paddingRight","onChange","currentTarget","value","placeholder","LockOutlined","htmlType","backgroundColor","border","margin","to","Spacer","Positioner","Logout","oc","gray","GradientBorder","UserContainer","red","HeaderContents","withRouter","username","dept","fontSize","letterSpacing","fontFamily","color","padding","marginRight","borderRadius","onClick","MenuContainer","MenuContent","MenuItem","Menu","useHistory","ScrollTop","window","scrollTo","top","behavior","textDecoration","NotificationOutlined","BulbOutlined","QuestionCircleOutlined","WarningOutlined","ClockCircleOutlined","BarsOutlined","CalendarOutlined","AuditOutlined","LayoutOutlined","MessageOutlined","Welcome","Select","Option","Input","TextArea","deptname","Form","useForm","form","React","visible","setVisible","setData","confirmFunc","formData","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","isConfirmed","onFinishFunc","FormHandler","CancleModify","a","Object","entries","key","undefined","NaN","modifier","put","getData","toast","onValuesChange","changedValue","allValue","useCallback","content","User","time","moment","updatedAt","format","setFieldsValue","useEffect","display","alignItems","flexDirection","background","justifyContent","onFieldsChange","theme","height","float","dangerouslySetInnerHTML","__html","Curriculum","link","getFieldValue","textAlign","src","label","readOnly","colon","wrapperCol","offset","CloudUploadOutlined","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Status","isDisable","setDisable","comment","phoneNumber","disabled","resize","Notice","QuestionList","setPage","page","count","pageSize","onDeleteFunc","delete","faqno","success","onChangeFunc","category1","category2","category3","category4","category5","question","questionAnswer","landingUrl","imageinfo","justify","flex","paddingLeft","fontWeight","onOk","onCancel","maskClosable","footer","initialvalues","span","ExclamationCircleOutlined","marginLeft","Question","parseInt","innerHeight","dataSize","setdataSize","rows","map","it","i","current","total","defaultPageSize","pagenum","Userquestionlist","idx","Userquestion","ProfessorAdd","_data","classPosition","email","notification","description","placement","duration","openNotification","ProfessorModify","list","setlist","inputValue","setInputValue","nameCheck","setNameCheck","onSearchFunc","length","p_list","v","options","filterOption","input","option","indexOf","SearchOutlined","TabPane","Tabs","Professor","defaultActiveKey","tab","TimetableAdd","fileList","setFileList","classname","setClassname","meta","contents","handleUpload","FormData","append","initialValues","img","target","withIcon","withPreview","buttonText","pictureFiles","pictureDataURLs","imgExtension","maxFileSize","singleImage","TimetableModify","replace","maxWidth","cursor","Timetable","BestqaData","id","Bestqa","DataModifylist","DataModify","PageRefresh","AdminPage","Component","AuthCheck","assign","Container","MenuBar","Contents","MainPage","basename","process","marginTop","path","component","Auth","exact","Datamodify","Adminpage","Title","AutoComplete","formItemLayout","labelCol","xs","sm","tailFormItemLayout","Backwards","Signup","emailAuthform","_department","setDepartment","_email","setEmail","_name","setName","_phonenum","setPhonenum","id_duplication","checkDup","email_check","checkEmail","email_auth","setEmailAuth","dep","setDep","sejongemail","handleCancel","onChangeSelectFunc","scrollToFirstError","LeftOutlined","hasFeedback","Password","dependencies","validator","rule","Promise","reject","resolve","initialValue","authNumber","App","Boolean","location","hostname","match","defaultState","loggedIn","rootReducer","combineReducers","state","action","createStoreWidthMiddleware","applyMiddleware","promiseMiddlerware","reduxThunk","createStore","ReactDOM","render","store","reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62c3ee52.chunk.js","sourcesContent":["export const REGISTER_USER = \"REGISTER_USER\";\r\nexport const LOGIN_USER =\"LOGIN_USER\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const AUTH_USER = \"AUTH_USER\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAILED = \"AUTH_FAILED\";","import axios from \"axios\";\r\n\r\n// const DOMAIN = \"https://mfam.site\";\r\nconst DOMAIN = \"https://sjswbot.site/\"\r\naxios.defaults.withCredentials = true; // 쿠키 데이터를 전송받기 위해\r\nexport const request = (method, url, data) => {\r\n  return axios({\r\n    method,\r\n    url: DOMAIN + url,\r\n    data,\r\n  })\r\n    .then((res) => res)\r\n    .catch((err) => console.log(err));\r\n};","import {\r\n  REGISTER_USER,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  AUTH_USER,\r\n  REGISTER_ERROR,\r\n  LOGIN_SUCCESS,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAILED,\r\n} from \"./types\";\r\nimport React, { Component, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { request } from \"../utils/axios\";\r\n\r\nexport function registerUser(dataToSubmit) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: REGISTER_USER,\r\n    });\r\n\r\n    return axios\r\n      .post(\"https://sjswbot.site/auth/signup\", dataToSubmit)\r\n      .then((response) => {\r\n        console.log(response);\r\n        return response;\r\n      }\r\n      )\r\n      .catch((error) => {\r\n        console.log(error);\r\n        return error.response;\r\n      })\r\n  };\r\n}\r\n\r\n// export function loginUser(dataToSubmit) {\r\n//   const data = request(\"post\", \"/auth/login\", dataToSubmit);\r\n//   return {\r\n//       type: LOGIN_USER,\r\n//       payload: data,\r\n//   };\r\n// }\r\n\r\nexport function loginUser(dataToSubmit) {\r\n  const uid = dataToSubmit.userid;\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_USER,\r\n      payload: uid,\r\n    });\r\n\r\n    return axios\r\n      .post(\"https://sjswbot.site/auth/login\", dataToSubmit)\r\n      .then((response) => response)\r\n      .catch((error) => error.response);\r\n  };\r\n}\r\n\r\nexport function loginSuccess(accessToken) {\r\n  localStorage.setItem(\"user_token\", accessToken);\r\n  //axios.defaults.headers.common['Authorization'] = accessToken;\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n    });\r\n  };\r\n}\r\n\r\nexport function logoutUser() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGOUT_USER,\r\n    });\r\n  };\r\n}\r\n\r\nexport function authUser(props) {\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(\"https://sjswbot.site/auth/check\", header, { widthCredentials: true })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: AUTH_SUCCESS,\r\n        });\r\n        let dept = \"\";\r\n        \r\n        axios\r\n        .get(\"https://sjswbot.site/dep\")\r\n        .then((res2) => {\r\n          localStorage.setItem(\"dept_name\",res2.data.result[res.data.result[0].department-1].department);\r\n        }) \r\n        localStorage.setItem(\"username\", res.data.result[0].user);\r\n        localStorage.setItem(\"department\", res.data.result[0].department);\r\n        localStorage.setItem(\"role\",res.data.result[0].role);\r\n        return res.data.result[0];\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch({\r\n          type: AUTH_FAILED,\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nfunction dep(num) {\r\n  return axios\r\n  .get(\"https://sjswbot.site/dep\")\r\n  .then((res) => res.data.result[num-1].department\r\n  )\r\n}","import React, { Component, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { loginUser, authUser, loginSuccess } from \"../actions/userAction\";\r\nimport axios from \"axios\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst LoginForm = styled.div`\r\n  display: flex;\r\n  min-width: 800px;\r\n  min-height: 600px;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #a31432;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  font-size: 6rem;\r\n  letter-spacing: 1rem;\r\n  color: #a31432;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Whitespace = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 6rem;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-radius: 2rem;\r\n`;\r\n\r\nconst Login = (props) => {\r\n  const [_id, setId] = useState(\"\");\r\n  const [_password, setPassword] = useState(\"\");\r\n  const [_studentid, setStudentId] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const onLogin = (e) => {\r\n    localStorage.clear();\r\n    const body = {\r\n      userid: _id,\r\n      password: _password,\r\n    };\r\n\r\n    dispatch(loginUser(body))\r\n      .then((res) => {\r\n        console.log(res)\r\n        \r\n        if (res.status === 200) {\r\n          const accessToken = res.data.result[0].token;\r\n          dispatch(loginSuccess(accessToken));\r\n          dispatch(authUser()).then((res) => {\r\n            if (res) {\r\n              // res 추가해서 비동기적으로 실행되게 하기위함 (로그인 됬을 때 username 못불러오는 현상 해결)\r\n              props.history.push(\"/main\");\r\n            }\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"로그인 실패\",\r\n            text: res.data.message,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 2000,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          text: \"로그인이 실패 하였습니다.\",\r\n          title: \"로그인실패\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 2000,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <LoginForm>\r\n      <Whitespace>\r\n        <Logo style={{ marginBottom: \"3%\" }}>SYB ADMIN</Logo>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          onFinish={onLogin}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"id\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"ID를 입력해주세요\",\r\n              },\r\n            ]}\r\n            style={{ paddingBottom: \"0.5rem\" }}\r\n          >\r\n            <Input\r\n              prefix={\r\n                <UserOutlined\r\n                  className=\"site-form-item-icon\"\r\n                  style={{ paddingRight: \"0.5rem\" }}\r\n                />\r\n              }\r\n              onChange={onIdHandler}\r\n              placeholder=\"아이디\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 입력해주세요\",\r\n              },\r\n            ]}\r\n            style={{ paddingBottom: \"1rem\" }}\r\n          >\r\n            <Input\r\n              prefix={\r\n                <LockOutlined\r\n                  className=\"site-form-item-icon\"\r\n                  style={{ paddingRight: \"0.5rem\" }}\r\n                />\r\n              }\r\n              type=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              onChange={onPasswordHanlder}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                backgroundColor: \"#a31432\",\r\n                border: \"none\",\r\n                margin: \"0 1rem\",\r\n              }}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <Link to=\"/signup\" style={{ margin: \"0 1rem\" }}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                style={{ backgroundColor: \"#a31432\", border: \"none\" }}\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </Whitespace>\r\n    </LoginForm>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { Component, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutUser, authUser } from \"../actions/userAction\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst Logo = styled.div`\r\n  font-size: 2.5rem;\r\n  letter-spacing: 15px;\r\n  color: white;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Positioner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #a31432;\r\n  position: fixed;\r\n  top: 0px;\r\n  width: 100%;\r\n  min-width: 800px;\r\n  z-index: 3;\r\n`;\r\n\r\nconst Logout = styled.div`\r\n  font-size: 1.2rem;\r\n  letter-spacing: 3px;\r\n  color: black;\r\n  font-family: \"Rajdhani\";\r\n  &:hover {\r\n    color: ${oc.gray[6]};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst GradientBorder = styled.div`\r\n  height: 10 px;\r\n  background: linear-gradient(to right, black, white);\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n  background-color: white;\r\n  padding: 0 2rem;\r\n  height: 70%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  border-radius: 55px;\r\n  border: 3px solid ${oc.red[8]};\r\n`;\r\n\r\nconst HeaderContents = styled.div`\r\n  width: 100%;\r\n  height: 75px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0 2rem;\r\n  padding-right: 3rem;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nfunction Header(props) {\r\n  const dispatch = useDispatch();\r\n  const username = localStorage.getItem(\"username\");\r\n  const dept = localStorage.getItem(\"dept_name\");\r\n  const onClickHandler = () => {\r\n    dispatch(logoutUser());\r\n    localStorage.clear();\r\n    props.history.push(\"/\");\r\n  };\r\n  return (\r\n    <Positioner>\r\n      <HeaderContents>\r\n        <Logo>SYB ADMIN</Logo>\r\n        <Spacer />\r\n        <UserContainer>\r\n          <Logo\r\n            style={{\r\n              fontSize: \"1.2rem\",\r\n              letterSpacing: \"1px\",\r\n              paddingRight: \"3rem\",\r\n              fontFamily: \"Gothic A1\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            <UserOutlined\r\n              style={{\r\n                color: \"white\",\r\n                padding: \"5px\",\r\n                fontSize: \"1.5rem\",\r\n                marginRight: \"1rem\",\r\n                borderRadius: \"100%\",\r\n                backgroundColor: \"gray\",\r\n              }}\r\n            />\r\n            {dept}&emsp;\r\n            {username} 조교님\r\n          </Logo>\r\n          <Logout onClick={onClickHandler}>Logout</Logout>\r\n        </UserContainer>\r\n      </HeaderContents>\r\n      <GradientBorder />\r\n    </Positioner>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header); // withRouter 해야 'push'를 못찾는 에러 메세지 뜨지 않음\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport oc from \"open-color\";\r\n\r\nconst Logo = styled.div`\r\n  font-size: 2rem;\r\n  letter-spacing: 3px;\r\n  color: white;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Positioner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${oc.gray[8]};\r\n  position: fixed;\r\n  height: 6.5%;\r\n  bottom: 0%;\r\n  width: 100%;\r\n  min-width: 800px;\r\n  z-index: 0;\r\n`;\r\n\r\nconst GradientBorder = styled.div`\r\n  height: 2px;\r\n  margin: 0rem 1rem 0 2rem;\r\n  border-radius: 5rem;\r\n  background: linear-gradient(to right, #a31432, #ffcccb);\r\n`;\r\n\r\nconst HeaderContents = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding-right: 3rem;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nconst Footer = ({ children }) => {\r\n  return (\r\n    <Positioner>\r\n      <HeaderContents>\r\n        <Logo>Footer TEST</Logo>\r\n        <Spacer />\r\n        <Logo>SYB</Logo>\r\n      </HeaderContents>\r\n    </Positioner>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  useHistory,\r\n  Switch,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport {\r\n  NotificationOutlined,\r\n  LoadingOutlined,\r\n  CalendarOutlined,\r\n  BarsOutlined,\r\n  AuditOutlined,\r\n  LayoutOutlined,\r\n  MessageOutlined,\r\n  BulbOutlined,\r\n  ClockCircleOutlined,\r\n  QuestionCircleOutlined,\r\n  WarningOutlined,\r\n  LockOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Divider } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport oc from \"open-color\";\r\n\r\nconst MenuContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 2rem;\r\n`;\r\n\r\nconst MenuContent = styled.div`\r\n  color: ${oc.gray[7]};\r\n  width: 11rem; // 클릭 박스 조정\r\n  height: 100%;\r\n  padding: 1rem 0;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst MenuItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 3rem;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  transition: all 0.2s;\r\n  &:hover {\r\n    background: ${oc.gray[3]};\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst Menu = () => {\r\n  let history = useHistory();\r\n  const name = localStorage.getItem(\"username\");\r\n  const ScrollTop = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <MenuContainer>\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/main\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <NotificationOutlined style={{ padding: \"0 1rem\" }} />\r\n            공지사항\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/question\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <BulbOutlined style={{ padding: \"0 1rem\" }} />\r\n            질문 추가 및 수정\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/userquestion\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <QuestionCircleOutlined style={{ padding: \"0 1rem\" }} />\r\n            유저들의 질문\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/datamodify\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <WarningOutlined style={{ padding: \"0 1rem\" }} />\r\n            데이터 수정 요청\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/status\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <ClockCircleOutlined style={{ padding: \"0 1rem\" }} />\r\n            학과 사무실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/curriculum\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <BarsOutlined style={{ padding: \"0 1rem\" }} />\r\n            교과과정\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/notice\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <CalendarOutlined style={{ padding: \"0 1rem\" }} />\r\n            학과공지\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/professor\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <AuditOutlined style={{ padding: \"0 1rem\" }} />\r\n            교수님 연구실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/timetable\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <LayoutOutlined style={{ padding: \"0 1rem\" }} />\r\n            강의실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/bestqa\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <MessageOutlined style={{ padding: \"0 1rem\" }} />\r\n            자주 묻는 질문\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      { name === (\"이종민\" || \"허균\" || \"홍은호\") ?(<MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/adminpage\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <LockOutlined style={{ padding: \"0 1rem\" }} />\r\n            관리자페이지\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>):null}\r\n    </MenuContainer>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Welcome = (props) => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const department = localStorage.getItem(\"department\");\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const CancleModify = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n    \r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n    formData.modifier = name;\r\n    const response = await axios\r\n      .put(`https://sjswbot.site/assistantNotice/${department}`, formData,header,{ widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          }).then(()=>{\r\n            getData()\r\n            setVisible(false);\r\n          });\r\n        } else {\r\n          toast.error(\"서버와의 에러가 발생했습니다!\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const loadContent = () => {\r\n    if (visible === true) {\r\n      return (\r\n        <Form\r\n          form={form}\r\n          onFinish={confirmFunc}\r\n          onFieldsChange={onValuesChange}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"content\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            {/* <TextArea\r\n              style={{\r\n                fontSize: \"1rem\",\r\n                width: \"50rem\",\r\n                resize: \"none\",\r\n                padding: \"1rem\",\r\n                textAlign: \"center\",\r\n              }}\r\n              autoSize={true}\r\n              resize=\"none\"\r\n            /> */}\r\n            <ReactQuill theme=\"snow\" value={data.content} style={{width:\"50rem\",height:\"auto\"}}/>\r\n          </Form.Item>\r\n          <div style={{ marginBottom: \"1rem\" }} />\r\n          <Divider />\r\n          <p style={{ width: \"100%\", color: \"gray\", marginBottom: \"2rem\" }}>\r\n            수정 하시려면 수정하기 버튼을, 취소하려면 취소 버튼을 눌러주세요{\" \"}\r\n          </p>\r\n          <Form.Item >\r\n            <div style={{ display: \"inline-block\" ,float:\"right\"}}>\r\n              <Button htmlType=\"submit\" style={{ margin: \"0 1rem\" }}>\r\n                수정하기\r\n              </Button>\r\n              <Button onClick={CancleModify} style={{ margin: \"0 1rem\" }}>\r\n                취소\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          {/* <TextArea\r\n            value={data.content}\r\n            style={{\r\n              fontSize: \"1rem\",\r\n              width: \"50rem\",\r\n              resize: \"none\",\r\n              padding: \"1rem\",\r\n              textAlign: \"center\",\r\n            }}\r\n            bordered={false}\r\n            autoSize={true}\r\n            readOnly={true}\r\n          /> */}\r\n          <div dangerouslySetInnerHTML={{ __html: data.content }} style={{width:\"50rem\"}}></div>\r\n          <div style={{ marginBottom: \"1rem\" }} />\r\n          <Divider />\r\n          <p style={{ width: \"100%\", color: \"gray\" }}>\r\n            {data.modifier} 조교님\r\n            <br />({data.time})\r\n          </p>\r\n          <Button onClick={FormHandler} style={{float:\"right\"}}>수정하기</Button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.get(\r\n      `https://sjswbot.site/assistantNotice/${department}`, header, { widthCredentials: true }\r\n    );\r\n    console.log(response);\r\n    setData({\r\n      content: response.data.result.content,\r\n      modifier: response.data.result.User.username,\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      content: response.data.result.content,\r\n    });\r\n  }, [department]);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{deptname} 공지사항 </p>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          padding: \"2rem 2rem\",\r\n        }}\r\n      >\r\n        {loadContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Curriculum = () => {\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const [data, setData] = React.useState([]);\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\r\n      `https://sjswbot.site/curriculum/${department}`\r\n    );\r\n    console.log(response);\r\n    setData({\r\n      modifier: response.data.result.User.username,\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      department: deptname,\r\n      link: response.data.result.link,\r\n    });\r\n  }, [department]);\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    console.log(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (formData) => {\r\n    // formData.modifier = localStorage.getItem(\"username\");\r\n    // formdata에 userid 추가\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n    \r\n    const response = await axios\r\n      .put(`https://sjswbot.site/curriculum/${department}`, formData , header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          }).then(()=>getData());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n    // eslint-disable-next-line\r\n  }, [department, getData]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{deptname} 교과과정 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468769-55939d00-221f-11eb-9ead-db3cce00f58c.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468774-575d6080-221f-11eb-97ad-fe254308449e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468778-59272400-221f-11eb-95f0-4df3d930c7bb.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"링크\" name=\"link\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Curriculum;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Form, Select, Input, Button, Carousel, Image, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Status = () => {\r\n  const id = localStorage.getItem(\"username\");\r\n  //const [time,setTime] = React.useState(new Date().toLocaleString());\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const [data, setData] = React.useState({});\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://sjswbot.site/status/${department}`);\r\n    console.log(response);\r\n    let data = \"\";\r\n    if (response.data.result.status === 1) {\r\n      data = \"근무중\";\r\n    } else if (response.data.result.status === 2) {\r\n      data = \"휴가중\";\r\n    }\r\n    setData({\r\n      modifier: response.data.result.User.username,\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n      // 시간 안더해줘도 됨 (21-01-21)\r\n    });\r\n    form.setFieldsValue({\r\n      // department: response.data.result.department,\r\n      status: data,\r\n      comment: response.data.result.comment,\r\n      position: response.data.result.position,\r\n      phoneNumber: response.data.result.phoneNumber,\r\n      // time: time,\r\n    });\r\n  });\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        // setTime(new Date().toLocaleString());\r\n        console.log(formData);\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (data) => {\r\n    // data.modifier = localStorage.getItem(\"username\");\r\n    // 기존 modifier 넣어준 것 뺌\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n\r\n    if(data.status === \"근무중\"){\r\n      data.status = 1;\r\n    }\r\n    else if (data.status === \"휴가중\"){\r\n      data.status = 2;\r\n    }\r\n    \r\n    const response = await axios\r\n      .put(`https://sjswbot.site/status/${department}`, data, header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          }).then(()=>getData());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setDisable(false);\r\n  }, [form.data]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(department);\r\n    if (department === \"\") return;\r\n    getData();\r\n  }, [department]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{deptname} 사무실 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468848-ae633580-221f-11eb-9afd-762834755b54.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468849-af946280-221f-11eb-975b-d12318fc58ad.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468851-b0c58f80-221f-11eb-9868-c9392a9bf029.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468853-b1f6bc80-221f-11eb-9928-35e67889354c.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        {/* <Form.Item\r\n          label=\"학과\"\r\n          name=\"department\"\r\n          value={department}\r\n          style={{\r\n            width: \"0rem\",\r\n            height: \"0rem\",\r\n            visibility: \"hidden\",\r\n            margin: \"0\",\r\n          }}\r\n        >\r\n          <Input readOnly={true} />\r\n        </Form.Item> */}\r\n        {/* <Form.Item label=\"시간\" name=\"time\" value={time} style={{width:\"0rem\", height:\"0rem\" , visibility:\"hidden\", margin:\"0\"}}>\r\n          <Input readOnly=\"true\"/>\r\n        </Form.Item> */}\r\n        {/* <Form.Item\r\n          label=\"이름\"\r\n          name=\"modifier\"\r\n          value={id}\r\n          style={{\r\n            width: \"0rem\",\r\n            height: \"0rem\",\r\n            visibility: \"hidden\",\r\n            margin: \"0\",\r\n          }}\r\n        >\r\n          <Input readOnly={true} />\r\n        </Form.Item> */}\r\n        <Form.Item label=\"위치\" name=\"position\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"전화번호\" name=\"phoneNumber\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"조교 부재여부\" name=\"status\" required>\r\n          <Select>\r\n            <Option value=\"1\">근무중</Option>\r\n            <Option value=\"2\">휴가중</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"기타내용\"\r\n          name=\"comment\"\r\n          // rules={[\r\n          //   { required: true, messsage: \"코멘트르 입력해주세요\" },\r\n          // ]}\\\r\n          required\r\n        >\r\n          <TextArea disabled={isDisable} style={{ resize: \"none\" }} />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Notice = () => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const [data, setData] = React.useState([]);\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://sjswbot.site/notice/${department}`);\r\n    console.log(response);\r\n    setData({\r\n      modifier: response.data.result.User.username,\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      department: deptname,\r\n      link: response.data.result.link,\r\n    });\r\n  }, [department]);\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    console.log(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (formData) => {\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios\r\n      .put(`https://sjswbot.site/notice/${department}`, formData  , header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          }).then(()=>getData());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{deptname} 공지 링크 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468604-8f17d880-221e-11eb-90fc-43a1acad45c6.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468606-90e19c00-221e-11eb-9dde-738e963f0458.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468607-9212c900-221e-11eb-8763-c018eebf650f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"링크\" name=\"link\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col, Divider, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst QuestionList = ({ data, getData, setPage, page,count,pageSize }) => {\r\n  console.log(data);\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n  \r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://sjswbot.site/knowledgePlus/${data.faqno}`, header, { withReactContent : true })\r\n      .catch((error) => {\r\n        return toast.error(\"에러가 났어요!\");\r\n        console.log(error);\r\n      });\r\n    setVisible(false);\r\n    setPage(page);\r\n    getData();\r\n    toast.success(\"질문을 삭제했습니다!\");\r\n  };\r\n\r\n  const onChangeFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n    console.log(formData);\r\n    const response = await axios\r\n      .put(`https://sjswbot.site/knowledgePlus/${data.faqno}`, formData, header, { withReactContent : true })\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        if (res.status === 200) {\r\n          setVisible(false);\r\n          setPage(0);\r\n          getData();\r\n          toast.success(\"질문을 수정했습니다!\");\r\n        } else {\r\n          toast.error(\"에러가 났어요!\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"에러가 났어요!\");\r\n      });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      faqno: data.faqno,\r\n      category1: data.category1,\r\n      category2: data.category2,\r\n      category3: data.category3,\r\n      category4: data.category4,\r\n      category5: data.category5,\r\n      question: data.question,\r\n      questionAnswer: data.questionAnswer,\r\n      landingUrl: data.landingUrl,\r\n      imageinfo: data.imageinfo,\r\n    });\r\n  },[form]);\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ margin: \"1vh 0\" }} />\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0.1rem 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col\r\n          flex={1}\r\n          style={{ paddingLeft: \"2rem\", width: \"5%\", fontWeight: \"bold\" }}\r\n        >\r\n          {count}\r\n        </Col>\r\n        <Col flex={8} style={{ paddingLeft: \"2rem\", width: \"60%\" }}>\r\n          {data.question}\r\n        </Col>\r\n        <Col flex={2} style={{ width: \"15%\" }}>\r\n          {moment(data.updatedAt).format(\"LLL\")}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button onClick={FormHandler}>수정하기</Button>\r\n          <Modal\r\n            title=\"질문수정\"\r\n            visible={visible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            maskClosable={false}\r\n            footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n            width=\"40rem\"\r\n          >\r\n            <Form\r\n              form={form}\r\n              onFinish={onChangeFunc}\r\n              onFieldsChange={onValuesChange}\r\n              autoComplete=\"off\"\r\n              style={{ width: \"95%\", padding: \"0 5%\" }}\r\n            >\r\n              <Form.Item\r\n                label=\"질문\"\r\n                name=\"question\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"질문을 입력해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input initialvalues={data.question} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"답변\"\r\n                name=\"questionAnswer\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"답변을 입력해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input initialvalues={data.questionAnswer} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"카테고리 1\"\r\n                name=\"category1\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"하나 이상의 카테고리를 설정해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input initialvalues={data.category1} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 2\" name=\"category2\">\r\n                <Input initialvalues={data.category2} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 3\" name=\"category3\">\r\n                <Input initialvalues={data.category3} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 4\" name=\"category4\">\r\n                <Input initialvalues={data.category4} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 5\" name=\"category5\">\r\n                <Input initialvalues={data.category5} />\r\n              </Form.Item>\r\n              <Form.Item label=\"답변링크\" name=\"landingUrl\">\r\n                <Input initialvalues={data.landingUrl} />\r\n              </Form.Item>\r\n              <Form.Item label=\"이미지링크\" name=\"imageinfo\">\r\n                <Input initialvalues={data.imageinfo} />\r\n              </Form.Item>\r\n              <Divider />\r\n              <p style={{ width: \"100%\", color: \"gray\" }}>\r\n                {data.User.username} 조교님\r\n                <br />({moment(data.updatedAt).format(\"LLL\")})\r\n              </p>\r\n              <Form.Item colon={false} wrapperCol={{ span: 20, offset: 7 }}>\r\n                <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n                  수정하기\r\n                </Button>\r\n                <Button\r\n                  icon={<ExclamationCircleOutlined />}\r\n                  type=\"primary\"\r\n                  onClick={confirmFunc}\r\n                  style={{\r\n                    backgroundColor: \"RGB(255,0,0,0.6)\",\r\n                    color: \"white\",\r\n                    border: \"none\",\r\n                    marginLeft: \"3rem\",\r\n                  }}\r\n                >\r\n                  삭제하기\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionList;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport QuestionList from \"./QuestionList\";\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Question = (props) => {\r\n  const pageSize = parseInt(window.innerHeight / 70);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [dataSize,setdataSize] = React.useState(0);\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    return data.map((it, i) => {\r\n\r\n      return (\r\n        <QuestionList\r\n          key={i}\r\n          data={it}\r\n          count={dataSize - i - pageSize * (page)}\r\n          getData={getData}\r\n          setPage={setPage}\r\n          pageSize={pageSize}\r\n          page={page}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n\r\n    const response = await axios\r\n      .post(`https://sjswbot.site/knowledgePlus`, formData, header, { widthCredentials:true })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          toast.success(\"질문을 등록했습니다!\");\r\n          setPage(0);\r\n          getData();\r\n          setVisible(false);\r\n          form.setFieldsValue({\r\n            faqno: \"\",\r\n            category1: \"\",\r\n            category2: \"\",\r\n            category3: \"\",\r\n            category4: \"\",\r\n            question: \"\",\r\n            questionAnswer: \"\",\r\n            landingUrl: \"\",\r\n            imageinfo: \"\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    //pagenum은 1,2,3,4 식으로 전송 됨.\r\n    setPage(pagenum-1);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://sjswbot.site/knowledgePlus?page=${page}&size=${pageSize}`,header,{ widthCredentials: true });\r\n    console.log(response);\r\n    setdataSize(response.data.result.count);\r\n    setData(response.data.result.rows);\r\n  }, [page,setPage]);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, [page,setPage]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>질문 수정 페이지</p>\r\n      </div>\r\n      소융봇에서 제공 할 질문과 답변을 관리하는 페이지입니다.\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"10px 0 2rem\" }}>\r\n        <Link to=\"/userquestion\">\r\n          <u>유저들의 질문</u>\r\n        </Link>{\" \"}\r\n        에서 질문을 골라보세요 😊\r\n      </div>\r\n      {PageRefresh()}\r\n      <div style={{ marginBottom: \"2rem\" }} />\r\n      <Pagination\r\n        current={page+1}\r\n        total={dataSize}\r\n        defaultPageSize={pageSize}\r\n        onChange={onPageChange}\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n      />\r\n      <Button onClick={FormHandler}>질문 추가</Button>\r\n      <Modal\r\n        title=\"질문추가\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        maskClosable={false}\r\n        footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n        width=\"40rem\"\r\n      >\r\n        <Form\r\n          form={form}\r\n          onFinish={onFinishFunc}\r\n          onFieldsChange={onValuesChange}\r\n          autoComplete=\"off\"\r\n          style={{ width: \"95%\", padding: \"0 5%\" }}\r\n        >\r\n          <Form.Item\r\n            label=\"질문\"\r\n            name=\"question\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"질문을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"답변\"\r\n            name=\"questionAnswer\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"답변을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"카테고리 1\"\r\n            name=\"category1\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"하나 이상의 카테고리를 설정해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 2\" name=\"category2\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 3\" name=\"category3\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 4\" name=\"category4\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 5\" name=\"category5\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"답변링크\" name=\"landingUrl\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"이미지링크\" name=\"imageinfo\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n            <Button\r\n              icon={<CloudUploadOutlined />}\r\n              htmlType=\"submit\"\r\n              style={{ margin: \"1rem 1rem 0 1rem\" }}\r\n            >\r\n              추가하기\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col, Divider, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport moment from \"moment\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Userquestionlist = ({ data, getData, setPage, page }) => {\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://sjswbot.site/question/${data.idx}`,header, {widthCredentials:true})\r\n      .catch((error) => {\r\n        return toast.error(\"에러가 났어요!\");\r\n        console.log(error);\r\n      });\r\n    setPage(page);\r\n    getData();\r\n    toast.success(\"질문을 삭제했습니다!\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ margin: \"1vh 0\" }} />\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0.1rem 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col\r\n          flex={1}\r\n          style={{ textAlign: \"center\", width: \"15%\", fontWeight: \"bold\" }}\r\n        >\r\n          {data.department === 11\r\n          ?\"공통질문\"\r\n          :deptname}\r\n        </Col>\r\n        <Col flex={8} style={{ marginLeft: \"2rem\", width: \"50%\" }}>\r\n          {data.content}\r\n        </Col>\r\n        <Col flex={2} style={{ width: \"15%\" }}>\r\n          {moment(data.updatedAt).format(\"LLL\")}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button\r\n            onClick={confirmFunc}\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"RGB(255,0,0,0.6)\", border: \"none\"}}\r\n          >\r\n            삭제하기\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Userquestionlist;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Userquestionlist from \"./Userquestionlist\";\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Userquestion = (props) => {\r\n  const department = localStorage.getItem(\"department\");\r\n  const pageSize = parseInt(window.innerHeight / 70);\r\n  let count = 0;\r\n  const [dataSize,setdataSize] = React.useState(0);\r\n  const [size, setSize] = React.useState(0);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    return data.map((it, i) => {\r\n      // 게시글 번호 계산\r\n\r\n      // if (it.department === \"공통 질문\" || it.department === department) {\r\n        return (\r\n          <Userquestionlist\r\n            key={i}\r\n            data={it}\r\n            getData={getData}\r\n            setPage={setPage}\r\n            pageSize={pageSize}\r\n            page={page}\r\n          />\r\n        );\r\n      // }\r\n    });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    //pagenum은 1,2,3,4 식으로 전송 됨.\r\n    setPage(pagenum-1);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://sjswbot.site/question/${department}?page=${page}&size=${pageSize}`,header, { widthCredentials: true });\r\n    console.log(response);\r\n    setdataSize(response.data.result.count);\r\n    setData(response.data.result.rows);\r\n  }, [page,setPage]);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, [page,setPage]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>유저들의 질문</p>\r\n      </div>\r\n      소융봇에서 제공하고 있지 않은 질문들에 대해서 유저들이 남긴 질문입니다.\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"10px 0 2rem\" }}>\r\n        <Link to=\"/question\">\r\n          <u>질문 수정페이지</u>\r\n        </Link>{\" \"}\r\n        에서 질문에 대한 답변을 올려주세요 😊\r\n      </div>\r\n      {/* {data.map((it,i)=>{\r\n        it.count=data.length-i;\r\n        it.props=props;\r\n        return(\r\n            <QuestionList key = {i} data={it} getData={getData}/>\r\n        )\r\n      })} */}\r\n      {PageRefresh()}\r\n      <div style={{ marginBottom: \"2rem\" }} />\r\n      <Pagination\r\n        current={page+1}\r\n        total={dataSize}\r\n        defaultPageSize={pageSize}\r\n        onChange={onPageChange}\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Userquestion;\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  notification,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 2,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst ProfessorAdd = () => {\r\n  const [form] = Form.useForm();\r\n  const [data, getData] = React.useState({});\r\n  const onFinishFunc = async (_data) => {\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n\r\n    console.log(_data);\r\n\r\n    const response = await axios\r\n      .post(`https://sjswbot.site/professor`, _data , header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: `등록되었습니다.`,\r\n            showConfirmButton: false,\r\n            width: \"auto\",\r\n            timer: 1500,\r\n          }).then(()=>{\r\n            form.setFieldsValue({\r\n              name:\"\",\r\n              classPosition:\"\",\r\n              phoneNumber:\"\",\r\n              email:\"\",\r\n            });\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n        name:\"\",\r\n        classPosition:\"\",\r\n        phoneNumber:\"\",\r\n        email:\"\",\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045727-22f9f380-25d5-11eb-8a36-a2135d9fb51d.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045910-5fc5ea80-25d5-11eb-8f68-7b071a52350e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045316-7cadee00-25d4-11eb-9b20-8c5bb4fbb247.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={onFinishFunc}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"성함\" name=\"name\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"연구실\" name=\"classPosition\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"전화번호\" name=\"phoneNumber\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"이메일\" name=\"email\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item colon={false}>\r\n            <center>\r\n                <Button htmlType=\"submit\">\r\n                    등록하기\r\n                </Button>\r\n            </center>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfessorAdd;\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  notification,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n    notification[type]({\r\n      description: comment,\r\n      placement: \"bottomRight\",\r\n      duration: 2,\r\n      width: \"auto\",\r\n    });\r\n};\r\n\r\nconst ProfessorModify = () => {\r\n  const [list, setlist] = React.useState([]);\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = React.useState({});\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [nameCheck, setNameCheck] = React.useState(false);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  const onDeleteFunc = async () => {\r\n    if (nameCheck === false) {\r\n        return openNotification('error', '성함을 입력 후 search 버튼을 눌러주세요');\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios.delete(`https://sjswbot.site/professor/${inputValue}`, header, { widthCredentials: true })\r\n        .then(()=>\r\n        Swal.fire({\r\n            icon: \"success\",\r\n            title: \"삭제되었습니다.\",\r\n            showConfirmButton: false,\r\n            width: \"auto\",\r\n            timer: 1500,\r\n          }).then(()=>{\r\n            form.setFieldsValue({\r\n              classPosition: \"\",\r\n              phoneNumber: \"\",\r\n              email: \"\",\r\n            });\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (_data) => {\r\n    console.log(inputValue);\r\n    const response = await axios\r\n      .put(`https://sjswbot.site/professor/${inputValue}`, _data , header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정되었습니다.\",\r\n            showConfirmButton: false,\r\n            width: \"auto\",\r\n            timer: 1500,\r\n          }).then(()=>\r\n            onSearchFunc()\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        \r\n      });\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    if (nameCheck === false) {\r\n        return openNotification('error', '성함을 입력 후 search 버튼을 눌러주세요');\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChangeFunc = (name) => {\r\n    setNameCheck(false);\r\n    setInputValue(name);\r\n  };\r\n\r\n  const showModifier = () => {\r\n    return (\r\n      <p style={{ width: \"100%\", color: \"gray\" }}>\r\n        {data.modifier}\r\n        <br />\r\n        {data.time}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n\r\n    const response = await axios\r\n      .get(`https://sjswbot.site/professor/${inputValue}`)\r\n      .catch((error) => {\r\n      });\r\n    console.log(response);\r\n\r\n    if (!response.data.result) {\r\n      return openNotification('error', '존재하지 않는 이름입니다.');\r\n    }\r\n    openNotification('success','데이터를 성공적으로 불러왔습니다.');\r\n    setNameCheck(true);\r\n    setData({\r\n      modifier: response.data.result.User.username + \" 조교님\",\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      classPosition: response.data.result.classPosition,\r\n      phoneNumber: response.data.result.phoneNumber,\r\n      email: response.data.result.email,\r\n    });\r\n  }, []);\r\n\r\n  const onSearchFunc = async () => {\r\n    let name = inputValue;\r\n    if (name.length < 2) {\r\n        return openNotification('error', '존재하지 않는 이름입니다.');\r\n    }\r\n    const response = await axios\r\n      .get(`https://sjswbot.site/professor/${name}`)\r\n      .catch((error) => {\r\n      });\r\n\r\n    if (!response.data.result) {\r\n      return openNotification('error', '존재하지 않는 이름입니다.');\r\n    }\r\n    openNotification('success','데이터를 성공적으로 불러왔습니다.');\r\n    setNameCheck(true);\r\n    setData({\r\n      modifier: response.data.result.User.username + \" 조교님\",\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      classPosition: response.data.result.classPosition,\r\n      phoneNumber: response.data.result.phoneNumber,\r\n      email: response.data.result.email,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let p_list = [];\r\n    axios.get(`https://sjswbot.site/professor/list`).then((res) => {\r\n    console.log(res.data.result);\r\n    res.data.result.map((v, i) => {\r\n        p_list.push({ value: v.name });\r\n    });\r\n    })\r\n    setlist(p_list);\r\n    console.log(p_list);\r\n  },[]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045727-22f9f380-25d5-11eb-8a36-a2135d9fb51d.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045910-5fc5ea80-25d5-11eb-8f68-7b071a52350e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045316-7cadee00-25d4-11eb-9b20-8c5bb4fbb247.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          margin: \"0 0 2rem 0\",\r\n          width: \"40rem\",\r\n          height:\"auto\",\r\n        }}\r\n      >\r\n        <p style={{ width: \"5rem\" }}>성함:</p>\r\n        <AutoComplete\r\n          style={{ width: \"100%\", marginRight: \"1rem\"}}\r\n          options={list}\r\n          placeholder=\"교수님 성함을 입력해주세요\"\r\n          filterOption={(input, option) => option.value.indexOf(input) === 0}\r\n          onChange={onChangeFunc}\r\n        />\r\n        {/* <Input style={{ margin: \"0 4% 0 0\" }} onChange={onChangeFunc} /> */}\r\n        <Button icon={<SearchOutlined />} onClick={onSearchFunc}>\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Form\r\n          form={form}\r\n          onFinish={confirmFunc}\r\n          autoComplete=\"off\"\r\n          style={{ width: \"40rem\" }}\r\n        >\r\n          {\r\n            nameCheck === true\r\n            ? <>\r\n              <Form.Item label=\"연구실\" name=\"classPosition\" required>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item label=\"전화번호\" name=\"phoneNumber\" required>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item label=\"이메일\" name=\"email\" required>\r\n                <Input />\r\n              </Form.Item>\r\n              \r\n            </>\r\n            :null\r\n          }\r\n          <Divider />\r\n          {\r\n            nameCheck === true\r\n            ?showModifier()\r\n            :null\r\n          }\r\n          <Form.Item>\r\n              <center>\r\n                  <Button icon={<CloudUploadOutlined />} htmlType=\"submit\" style={{float:'left', marginLeft:'12rem'}}>\r\n                      수정하기\r\n                  </Button>\r\n                  <Button icon={<CloudUploadOutlined />} onClick={onDeleteFunc} style={{float:'right',marginRight:'12rem'}}>\r\n                      삭제하기\r\n                  </Button>\r\n              </center>\r\n          </Form.Item>\r\n        </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfessorModify;\r\n","import React, { useEffect,useState} from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n  Tabs,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport ProfessorAdd from './ProfessorAdd';\r\nimport ProfessorModify from './ProfessorModify';\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst { TabPane } = Tabs;\r\n\r\nconst Professor = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>교수님 연구실 페이지</p>\r\n      </div>\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"교수님 데이터 추가\" key=\"1\">\r\n          <ProfessorAdd/>\r\n        </TabPane>\r\n        <TabPane tab=\"교수님 데이터 수정/삭제\" key=\"2\">\r\n          <ProfessorModify/>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Professor;\r\n","import React, { useEffect , useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  notification,\r\n  Input,\r\n  message,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Upload,\r\n  Divider,\r\n} from \"antd\";\r\nimport ImageUploader from 'react-images-upload';\r\nimport { SearchOutlined,UploadOutlined } from \"@ant-design/icons\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 2,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst TimetableAdd = () => {\r\n  const [form] = Form.useForm();\r\n  const [data, getData] = useState({});\r\n  const [fileList, setFileList] = useState([]);\r\n  const [classname,setClassname] = useState(\"\");\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n  const meta = {\r\n    title:'title 1',\r\n    contents: 'contents 1',\r\n  }\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('img',fileList[0]);\r\n    // fileList.forEach(file => formData.append('img',file));\r\n    formData.classname=classname;\r\n\r\n    for(let key in meta) {\r\n      formData.append(key,meta[key]);\r\n    }\r\n    console.log(formData);\r\n    await axios\r\n      .post(`https://sjswbot.site/timetable/${classname}`, formData , header , { widthCredentials: true })\r\n      .then((res)=>{\r\n        if(res.status === 200){\r\n            return Swal.fire({\r\n              icon: \"success\",\r\n              title: `등록되었습니다.`,\r\n              showConfirmButton: false,\r\n              width: \"auto\",\r\n              timer: 1500,\r\n            }).then(()=>{\r\n              form.setFieldsValue({\r\n                classname:\"\",\r\n              });\r\n            });\r\n          }\r\n\r\n      })\r\n      .catch((err) => {\r\n        openNotification('error','서버와의 에러가 발생했습니다.');\r\n      });\r\n  }\r\n\r\n  const nameHandler = (e) => {\r\n    setClassname(e.target.value);\r\n  }\r\n\r\n  const showModifier = () => {\r\n    return (\r\n      <div style={{ width: \"100%\", color: \"gray\" }}>\r\n        {data.modifier}\r\n        <br />\r\n        {data.time}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n        classname:\"\",\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045727-22f9f380-25d5-11eb-8a36-a2135d9fb51d.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045910-5fc5ea80-25d5-11eb-8f68-7b071a52350e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045316-7cadee00-25d4-11eb-9b20-8c5bb4fbb247.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={handleUpload}\r\n        autoComplete=\"off\"\r\n        initialValues = {{img:fileList}}\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"강의실\" name=\"classname\" required>\r\n          <Input onChange={nameHandler} />\r\n        </Form.Item>\r\n        <Form.Item \r\n          label=\"시간표\" \r\n          name=\"img\" \r\n          required\r\n        >\r\n          <ImageUploader\r\n                withIcon={true}\r\n                withPreview={true}\r\n                buttonText='이미지를 업로드해주세요'\r\n                onChange = {(pictureFiles,pictureDataURLs)=>setFileList(pictureFiles)}\r\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                maxFileSize={5242880}\r\n                singleImage\r\n          />\r\n        </Form.Item>\r\n        <Divider />\r\n        {showModifier()}\r\n        <Form.Item colon={false}>\r\n            <center>\r\n                <Button htmlType=\"submit\">\r\n                    등록하기\r\n                </Button>\r\n            </center>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimetableAdd;\r\n","import React, { useEffect ,useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  notification,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport ImageUploader from 'react-images-upload';\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { getDefaultNormalizer } from \"@testing-library/react\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 2,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst TimetableModify = () => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const [list, setlist] = useState([]);\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState({});\r\n  const [fileList, setFileList] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [nameCheck, setNameCheck] = useState(false);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  const meta = {\r\n    title:'title 1',\r\n    contents: 'contents 1',\r\n  }\r\n\r\n  const onDeleteFunc = async () => {\r\n    if (nameCheck === false) {\r\n        return openNotification('error', '강의실을 입력 후 Search 버튼을 눌러주세요');\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios.delete(`https://sjswbot.site/timetable/${inputValue}`, header, { widthCredentials: true })\r\n        .then(()=>\r\n        Swal.fire({\r\n            icon: \"success\",\r\n            title: \"삭제되었습니다.\",\r\n            showConfirmButton: false,\r\n            width: \"auto\",\r\n            timer: 1500,\r\n          }).then(()=>{\r\n            setInputValue(\"\");\r\n            setData([]);\r\n            setNameCheck(false);\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('img',fileList[0]);\r\n    // fileList.forEach(file => formData.append('img',file));\r\n\r\n    for(let key in meta) {\r\n      formData.append(key,meta[key]);\r\n    }\r\n    console.log(formData);\r\n    await axios\r\n      .put(`https://sjswbot.site/timetable/${inputValue}`, formData , header , { widthCredentials: true })\r\n      .then((res)=>{\r\n        if(res.status === 200){\r\n            return Swal.fire({\r\n              icon: \"success\",\r\n              title: `등록되었습니다.`,\r\n              showConfirmButton: false,\r\n              width: \"auto\",\r\n              timer: 1500,\r\n            }).then(()=>{\r\n              onSearchFunc();\r\n            });\r\n          }\r\n      })\r\n      .catch((err) => {\r\n        openNotification('error','서버와의 에러가 발생했습니다.');\r\n      });\r\n  }\r\n\r\n  const confirmFunc = (formData) => {\r\n    if (nameCheck === false) {\r\n      return openNotification('error', '강의실을 입력 후 Search 버튼을 눌러주세요');\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        handleUpload();\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChangeFunc = (name) => {\r\n    setNameCheck(false);\r\n    setInputValue(name);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios\r\n    .get(`https://sjswbot.site/timetable/${inputValue}`)\r\n    .catch((error) => {\r\n      openNotification('error', '서버와의 에러가 발생했습니다.');\r\n    });\r\n\r\n    if (!response.data.result) {\r\n      return openNotification('error', '존재하지 않는 강의실 입니다.');\r\n    } else {\r\n      openNotification('success', '강의실 정보를 성공적으로 불러왔습니다.');\r\n      setNameCheck(true);\r\n      setData({\r\n        modifier: response.data.result.User.username + \" 조교님\",\r\n        time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n        link: response.data.result.link,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onSearchFunc = async () => {\r\n    let value = inputValue.replace(/(\\s*)/g, \"\"); // 띄어쓰기 제거\r\n    if (value.length < 1) {\r\n      return openNotification('error', '강의실을 입력 후 Search 버튼을 눌러주세요');\r\n    }\r\n    const response = await axios\r\n      .get(`https://sjswbot.site/timetable/${value}`)\r\n      .catch((error) => {\r\n        openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n\r\n    console.log(response);\r\n    if (!response.data.result) {\r\n      return openNotification('error', '존재하지 않는 강의실 입니다.');\r\n    } else {\r\n      openNotification('success', '강의실 정보를 성공적으로 불러왔습니다.');\r\n      setNameCheck(true);\r\n      setData({\r\n        modifier: response.data.result.User.username + \" 조교님\",\r\n        time:\r\n        \"(\" + moment(response.data.result.time).format(\"LLL\") + \")\",\r\n        link: response.data.result.link,\r\n      });\r\n    }\r\n    // getData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let p_list = [];\r\n    axios.get(`https://sjswbot.site/timetable/list`).then((res) => {\r\n    console.log(res.data.result);\r\n    res.data.result.map((v, i) => {\r\n        p_list.push({ value: v.classname });\r\n    });\r\n    })\r\n    setlist(p_list);\r\n    console.log(p_list);\r\n  },[]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046546-3eb1c980-25d6-11eb-91d1-9e65182a72cb.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046550-3fe2f680-25d6-11eb-8f35-49df97a88419.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046554-41142380-25d6-11eb-8be4-b10796d051f3.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          margin: \"0 0 2rem 0\",\r\n          width: \"40rem\",\r\n        }}\r\n      >\r\n        <p style={{ width: \"6rem\" }}>강의실:</p>\r\n        <AutoComplete\r\n          name=\"classname\"\r\n          style={{ width: \"100%\", marginRight: \"1rem\" }}\r\n          options={list}\r\n          placeholder=\"강의실을 입력해주세요\"\r\n          filterOption={(input, option) => option.value.indexOf(input) !== -1}\r\n          onChange={onChangeFunc}\r\n        />\r\n        <Button icon={<SearchOutlined />} onClick={onSearchFunc}>\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        {\r\n          data.link?\r\n          <Form.Item\r\n            label = \"현재 시간표\"\r\n          >\r\n            <Image src={\"https://sjswbot.site\"+data.link} style={{maxWidth:\"40rem\"}}></Image>\r\n          </Form.Item>\r\n          :null\r\n        }\r\n        {\r\n          data.link?\r\n          <Form.Item \r\n            label=\"수정 시간표\" \r\n            name=\"img\" \r\n          >\r\n            <ImageUploader\r\n                  withIcon={true}\r\n                  withPreview={true}\r\n                  buttonText='이미지를 업로드해주세요'\r\n                  onChange = {(pictureFiles,pictureDataURLs)=>setFileList(pictureFiles)}\r\n                  imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                  maxFileSize={5242880}\r\n                  singleImage\r\n            />\r\n          </Form.Item>\r\n          :null\r\n        }   \r\n\r\n        <Divider />\r\n        {\r\n          data.modifier\r\n          ?<p style={{ width: \"100%\", color: \"gray\",cursor:\"pointer\" }}>\r\n            {data.modifier}\r\n            <br />\r\n            {data.time}\r\n          </p>\r\n          :null\r\n        }\r\n        <Form.Item style={{margin:'3rem 0 0'}}>\r\n            <center>\r\n                <Button icon={<CloudUploadOutlined />} htmlType=\"submit\" style={{float:'left', marginLeft:'12rem'}}>\r\n                    수정하기\r\n                </Button>\r\n                <Button icon={<CloudUploadOutlined />} onClick={onDeleteFunc} style={{float:'right',marginRight:'12rem'}}>\r\n                    삭제하기\r\n                </Button>\r\n            </center>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimetableModify;\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n  Tabs,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport TimetableAdd from './TimetableAdd';\r\nimport TimetableModify from './TimetableModify';\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst { TabPane } = Tabs;\r\n\r\nconst Timetable = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>강의실 시간표 수정 페이지</p>\r\n      </div>\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"강의실 시간표 추가\" key=\"1\">\r\n          <TimetableAdd/>\r\n        </TabPane>\r\n        <TabPane tab=\"강의실 시간표 수정/삭제\" key=\"2\">\r\n          <TimetableModify/>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timetable;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Divider,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst BestqaData = ({ data, key }) => {\r\n  const [form] = Form.useForm();\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n    console.log(formData);\r\n    const response = await axios\r\n      .put(`https://sjswbot.site/bestqa/${data.idx}`, formData,header,{ widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        } else {\r\n          toast.error(\"서버와의 에러가 발생했습니다!\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height:\"auto\",\r\n        margin:\"0.5rem 0\"\r\n      }}\r\n    >\r\n      <Form\r\n        initialValues={{ id: data.idx, question: data.question }}\r\n        onFinish={confirmFunc}\r\n        autoComplete=\"off\"\r\n        form={form}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Form.Item label={`TOP ${data.idx} `} name=\"question\">\r\n          <Input style={{ width: \"30vw\" }} />\r\n        </Form.Item>\r\n        <Form.Item colon={false} wrapperCol={{ span: 11, offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <div style={{color: \"gray\" ,marginLeft:'5rem'}}>\r\n            {data.User.username} 조교님\r\n            <br />({moment(data.updatedAt).format(\"LLL\")})\r\n        </div>\r\n      </Form>\r\n\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Bestqa = () => {\r\n  const [data, setData] = React.useState([]);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\"https://sjswbot.site/bestqa\");\r\n    console.log(response);\r\n    setData(response.data.result);\r\n  }, []);\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>자주 묻는 질문 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047553-b502fb80-25d7-11eb-898a-7b1c46473b0f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047557-b6342880-25d7-11eb-8fcf-7256e6887d65.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047561-b7fdec00-25d7-11eb-87a3-9b443cd8be5a.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047565-b9c7af80-25d7-11eb-852d-b6d83dd1012f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      {data.map((it, i) => {\r\n        return <BestqaData key={i} data={it} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bestqa;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col, Divider, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst DataModifylist = ({ data, getData, setPage, page, count ,pageSize}) => {\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://sjswbot.site/fixRequest/${data.idx}`, header, { widthCredentials: true })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        return toast.error(\"에러가 났어요!\");\r\n      });\r\n    setPage(page);\r\n    getData();\r\n    toast.success(\"데이터 요청을 삭제했습니다!\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ margin: \"1vh 0\" }} />\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0.1rem 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col\r\n          flex={1}\r\n          style={{ paddingLeft: \"2rem\", width: \"5%\", fontWeight: \"bold\" }}\r\n        >\r\n          {count}\r\n        </Col>\r\n        <Col flex={8} style={{ paddingLeft: \"2rem\", width: \"60%\" }}>\r\n          {data.question}\r\n        </Col>\r\n        <Col flex={2} style={{ width: \"15%\" }}>\r\n          {moment(data.updatedAt).format(\"LLL\")}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button\r\n            onClick={confirmFunc}\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"RGB(255,0,0,0.6)\", border: \"none\" }}\r\n          >\r\n            삭제하기\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataModifylist;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport DataModifylist from \"./DataModifyList\";\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst DataModify = (props) => {\r\n  const department = localStorage.getItem(\"department\");\r\n  const pageSize = parseInt(window.innerHeight / 70);\r\n  const [dataSize,setdataSize] = React.useState(0);\r\n  let count = 0;\r\n  const [size, setSize] = React.useState(0);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n  \r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = () => {\r\n    // const _data = data.slice(\r\n    //   (count - 1) * pageSize,\r\n    //   (count - 1) * pageSize + pageSize\r\n    // );\r\n    // data page에 따라 자르는 작업\r\n\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    return data.map((it, i) => {\r\n      // 게시글 번호 계산\r\n\r\n      return (\r\n        <DataModifylist\r\n          key={i}\r\n          data={it}\r\n          count={dataSize - i - pageSize * (page)}\r\n          getData={getData}\r\n          setPage={setPage}\r\n          pageSize={pageSize}\r\n          page={page}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    setPage(pagenum-1);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://sjswbot.site/fixRequest?page=${page}&size=${pageSize}`, header, { widthCredentials: true });\r\n\r\n    console.log(`https://sjswbot.site/fixRequest?page=${page}&size=${pageSize}`);\r\n    setdataSize(response.data.result.count);\r\n    setData(response.data.result.rows);\r\n    PageRefresh();\r\n    // setData(response.data.values.reverse());\r\n  },[page,setPage]);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, [page,setPage]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>유저들의 데이터 수정 요청</p>\r\n      </div>\r\n      데이터에 오류가 있는 질문들의 수정 요청입니다.\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"10px 0 2rem\" }}>\r\n        <Link to=\"/question\">\r\n          <u>질문 수정페이지</u>\r\n        </Link>{\" \"}\r\n        에서 질문에 대한 답변을 수정해주세요 😊\r\n      </div>\r\n      {/* {data.map((it,i)=>{\r\n        it.count=data.length-i;\r\n        it.props=props;\r\n        return(\r\n            <QuestionList key = {i} data={it} getData={getData}/>\r\n        )\r\n      })} */}\r\n      {PageRefresh()}\r\n      <div style={{ marginBottom: \"2rem\" }} />\r\n      <Pagination\r\n        current={page+1}\r\n        total={dataSize}\r\n        defaultPageSize={pageSize}\r\n        onChange={onPageChange}\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataModify;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst AdminPage = (props) => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const pageSize = parseInt(window.innerHeight / 50);\r\n  let count = 0;\r\n  const [size, setSize] = React.useState(0);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(1);\r\n  const num = data[0];\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n      <>\r\n      {name === (\"이종민\" || \"허균\" || \"홍은호\") ? (\r\n        <div\r\n        style={{\r\n            margin: \"3% 10%\",\r\n            padding: \"1% 0%\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            background: \"white\",\r\n            borderRadius: \"0.5rem\",\r\n            border: \"2px solid lightgray\",\r\n        }}\r\n        >\r\n        <div\r\n            style={{\r\n            textAlign: \"center\",\r\n            fontSize: \"30px\",\r\n            fontFamily: \"Gothic A1\",\r\n            }}\r\n        >\r\n            <p> 관리자 페이지 </p>\r\n        </div>\r\n        <div\r\n            style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            padding: \"2rem 2rem\",\r\n            }}\r\n        >\r\n            관리자페이지 입니다.\r\n        </div>\r\n        </div>\r\n      ):\r\n      <p>관리자만 접근 가능한 페이지 입니다.</p>\r\n      }\r\n      </>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authUser } from \"../actions/userAction\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nexport default function (Component, option , adminRoute = null){\r\n    //option\r\n    //null => 아무나 출입 가능\r\n    //true => 로그인한 유저만 출입 가능\r\n    //false => 로그인한 유저는 출입 불가능\r\n\r\n    function AuthCheck(props){\r\n        const dispatch = useDispatch();\r\n        let _data={};\r\n        useEffect(() =>{\r\n        dispatch(authUser()).then((res) =>{\r\n            if(!res){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title:'로그인이 필요합니다',\r\n                    showConfirmButton: true,\r\n                    width:'25rem',\r\n                    timer: 2000,\r\n                }).then(props.history.push(\"/\"));\r\n            }\r\n            else{\r\n                _data = Object.assign(_data,res);\r\n            }\r\n        });\r\n    },[]);\r\n            return <Component data={_data}/>\r\n    }\r\n\r\n    return AuthCheck;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Menu from \"../components/Menu\";\r\nimport Welcome from \"./Welcome\";\r\nimport Curriculum from \"./Curriculum\";\r\nimport Status from \"./Status\";\r\nimport Notice from \"./Notice\";\r\nimport Question from \"./Question\";\r\nimport Userquestion from \"./Userquestion\";\r\nimport Professor from \"./Professor\";\r\nimport Timetable from \"./Timetable\";\r\nimport Bestqa from \"./Bestqa\";\r\nimport Datamodify from \"./DataModify\";\r\nimport Adminpage from \"./Adminpage\";\r\nimport oc from \"open-color\";\r\nimport Auth from \"../hoc/auth\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 800px;\r\n  min-height: 800px;\r\n  margin-bottom: 3rem;\r\n  margin-top: 4rem;\r\n  padding-left: 1rem;\r\n  -ms-user-select: none;\r\n  -moz-user-select: -moz-none;\r\n  -khtml-user-select: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n`;\r\n\r\nconst MenuBar = styled.div`\r\n  width: 12rem;\r\n  height: 85%;\r\n  background-color: ${oc.gray[1]};\r\n  border-radius: 1rem;\r\n  position: fixed;\r\n  z-index: 2;\r\n  border: 4px groove ${oc.gray[4]};\r\n  \"&:hover\": {\r\n    background: \"#efefef\";\r\n  }\r\n  // @media (max-width: 767px) {\r\n  //     display:none;\r\n  // }\r\n`;\r\n\r\nconst Contents = styled.div`\r\n  width: 90%;\r\n  height: 85%;\r\n  min-height: 600px;\r\n  min-width: 800px;\r\n  margin: 2rem 2rem 1rem 13rem;\r\n  border-radius: 0.5rem;\r\n  background-color: ${oc.gray[1]};\r\n  border: 2px groove ${oc.gray[4]};\r\n`;\r\n\r\nconst MainPage = (props) => {\r\n  const userdata = props.data;\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <Container>\r\n        <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n          <MenuBar style={{ marginTop: \"2rem\" }}>\r\n            <Menu />\r\n          </MenuBar>\r\n          <Contents>\r\n            <Switch>\r\n              <Route path=\"/status\" component={Auth(Status)} exact />\r\n              <Route path=\"/question\" component={Question} exact />\r\n              <Route path=\"/userquestion\" component={Userquestion} exact />\r\n              <Route path=\"/curriculum\" component={Auth(Curriculum)} exact />\r\n              <Route path=\"/notice\" component={Auth(Notice)} exact />\r\n              <Route path=\"/professor\" component={Auth(Professor)} exact />\r\n              <Route path=\"/timetable\" component={Auth(Timetable)} exact />\r\n              <Route path=\"/bestqa\" component={Auth(Bestqa)} exact />\r\n              <Route path=\"/datamodify\" component={Auth(Datamodify)} exact />\r\n              <Route path=\"/main\" component={Auth(Welcome)} exact />\r\n              <Route path=\"/adminpage\" component={Adminpage} exact />\r\n            </Switch>\r\n          </Contents>\r\n        </Router>\r\n      </Container>\r\n      {/* <Footer/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { Component, useState,useEffect } from \"react\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { registerUser } from \"../actions/userAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  AutoComplete,\r\n  Modal,\r\n} from \"antd\";\r\nimport { QuestionCircleOutlined, LeftOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  min-width: 800px;\r\n  min-height: 600px;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #a31432;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Whitespace = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 6rem;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-radius: 2rem;\r\n`;\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst Title = styled.div`\r\n  font-size: 3rem;\r\n  color: #a31432;\r\n  font-family: \"Rajdhani\";\r\n  margin-top: 5rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst Backwards = styled.div`\r\n  font-size: 2.8rem;\r\n  left: 7rem;\r\n  top: 3.5rem;\r\n  color: #a31432;\r\n  position: absolute;\r\n  &:hover {\r\n    color: ${oc.red[8]};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Signup = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [emailAuthform] = Form.useForm();\r\n  const [_id, setId] = useState(\"\");\r\n  const [_password, setPassword] = useState(\"\");\r\n  const [_department, setDepartment] = useState(\"\");\r\n  const [_email, setEmail] = useState(\"\");\r\n  const [_name, setName] = useState(\"\");\r\n  const [_phonenum, setPhonenum] = useState(\"\");\r\n  const [id_duplication, checkDup] = useState(false);\r\n  const [email_check, checkEmail] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [email_auth, setEmailAuth] = useState(0);\r\n  const [dep,setDep] = useState([]);\r\n  const sejongemail = \"@sejong.ac.kr\";\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    setEmailAuth(\"\");\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n    setEmailAuth(\"\");\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n    checkDup(false);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n  const onEmailHandler = (e) => {\r\n    setEmail(e.currentTarget.value);\r\n    checkEmail(false);\r\n  };\r\n  const onNameHandler = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const onPhoneHandler = (e) => {\r\n    setPhonenum(e.currentTarget.value);\r\n  };\r\n\r\n  const loadDep = () => {\r\n    axios\r\n      .get(\"https://sjswbot.site/dep\")\r\n      .then((res) => {\r\n        setDep(res.data.result);\r\n        console.log(dep);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"에러발생\")\r\n      });\r\n  }\r\n\r\n  const onEmailCheckSubmit = (e) => {\r\n    console.log({\r\n      email: _email,\r\n      authNumber: email_auth,\r\n    });\r\n    axios\r\n      .post(\"https://sjswbot.site/mail/verify\", {\r\n        email: _email,\r\n        authNumber: email_auth,\r\n      })\r\n      .then((res) => {\r\n        console.log(res)\r\n        if (res.status === 200) {\r\n          handleCancel();\r\n          setEmail(true);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            text: res.data.message,\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 2000,\r\n          });\r\n        } \r\n        else {\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            text: res.data.message,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"인증을 실패 하였습니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n\r\n  const onEmailCheckHandler = (e) => {\r\n    setEmailAuth(e.currentTarget.value);\r\n    console.log(email_auth);\r\n  };\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    setDepartment(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onEmailHadnler = (e) => {\r\n    if (_email.indexOf(sejongemail) !== _email.length - sejongemail.length) {\r\n      return Swal.fire({\r\n        icon: \"warning\",\r\n        text: \"세종대학교 조교 이메일(@sejong.ac.kr) 형식이 아닙니다\",\r\n        showConfirmButton: true,\r\n        width: \"auto\",\r\n      });\r\n    }\r\n    // 세종대 이메일 검사\r\n\r\n    setVisible(true);\r\n\r\n    axios\r\n      .post(\"https://sjswbot.site/mail/send\", { to: _email })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log({ to: _email });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"이메일이 발송되지 않았습니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n\r\n  const onDuplicationHadnler = (e) => {\r\n    if (_id.length === 0) {\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        text: \"아이디를 입력해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 1500,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"https://sjswbot.site/auth/idCheck\", {userid:_id})\r\n      .then((res) => {\r\n        console.log(res)\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            text: res.data.message,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n\r\n          checkDup(true);\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            text: res.data.message,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n\r\n          checkDup(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: error.response.data.message,\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n\r\n        checkDup(false);\r\n      });\r\n\r\n      checkDup(true);\r\n  };\r\n  const linktoMain = (e) => {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n\r\n    let body = {\r\n      email: _email,\r\n      username: _name,\r\n      password: _password,\r\n      userid: _id,\r\n      phoneNumber: _phonenum,\r\n      department: _department,\r\n    };\r\n\r\n    if (id_duplication === false) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"가입 실패\",\r\n        text: \"아이디 중복검사를 완료해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 2000,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (email_check === false) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"가입 실패\",\r\n        text: \"이메일 인증을 완료해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 2000,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    dispatch(registerUser(body))\r\n      .then((res) => {\r\n        if (res.status === 409) {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"가입 실패\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 2000,\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"가입 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 2000,\r\n          });\r\n          props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    loadDep()\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onSubmitHandler}\r\n        autoComplete=\"off\"\r\n        scrollToFirstError\r\n      >\r\n        <Container>\r\n          <Whitespace>\r\n            <Backwards>\r\n              <LeftOutlined onClick={linktoMain} />\r\n            </Backwards>\r\n            <Title>\r\n              <p>Sign up</p>\r\n            </Title>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"6rem\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n                name=\"id\"\r\n                label=\"아이디\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"아이디를 입력해주세요.\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input onChange={onIdHandler} />\r\n              </Form.Item>\r\n              <Button\r\n                style={{\r\n                  position: \"relatvive\",\r\n                  width: \"5rem\",\r\n                  fontSize: \"0.7rem\",\r\n                  marginLeft: \"1rem\",\r\n                }}\r\n                onClick={onDuplicationHadnler}\r\n              >\r\n                중복검사\r\n              </Button>\r\n            </div>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"password\"\r\n              label=\"비밀번호\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"패스워드를 입력해주세요.\",\r\n                },\r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input.Password onChange={onPasswordHanlder} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"confirm\"\r\n              label=\"비밀번호 확인\"\r\n              dependencies={[\"password\"]}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"패스워드를 확인해주세요\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\"비밀번호가 일치하지 않습니다!\");\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"name\"\r\n              label=\"이름\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"이름을 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input onChange={onNameHandler} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"department\"\r\n              label=\"학과\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"학과를 선택해주세요\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select onChange={onChangeSelectFunc}>\r\n                {dep.map(i => (i.department != \"관리자\") ? <Option value={i.idx}>{i.department}</Option>:null)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"6rem\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n                name=\"email\"\r\n                label=\"이메일\"\r\n                initialValue=\"\"\r\n                hasFeedback\r\n                rules={[\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"올바른 이메일이 아닙니다\",\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: \"이메일을 입력해주세요.\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                      if (\r\n                        value.indexOf(sejongemail) ===\r\n                          value.length - sejongemail.length ||\r\n                        !value\r\n                      ) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\"\");\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input\r\n                  onChange={onEmailHandler}\r\n                  placeholder=\"abc@sejong.ac.kr\"\r\n                />\r\n              </Form.Item>\r\n              <Button\r\n                style={{\r\n                  position: \"relatvive\",\r\n                  width: \"5rem\",\r\n                  fontSize: \"0.7rem\",\r\n                  marginLeft: \"1rem\",\r\n                }}\r\n                onClick={onEmailHadnler}\r\n              >\r\n                메일인증\r\n              </Button>\r\n            </div>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"phonenumber\"\r\n              label=\"휴대폰 번호\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"휴대폰 번호를 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input onChange={onPhoneHandler} />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{\r\n                  backgroundColor: \"#a31432\",\r\n                  border: \"none\",\r\n                  margin: \"0.5rem 1rem 0\",\r\n                }}\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </Form.Item>\r\n          </Whitespace>\r\n        </Container>\r\n      </Form>\r\n\r\n      <Modal\r\n        title=\"이메일 인증\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        maskClosable={false}\r\n        footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n        width=\"40rem\"\r\n      >\r\n        <Form\r\n          form={emailAuthform}\r\n          name=\"emailCheck\"\r\n          onFinish={onEmailCheckSubmit}\r\n          autoComplete=\"off\"\r\n          style={{ width: \"auto\" }}\r\n        >\r\n          <Form.Item\r\n            style={{ width: \"auto\" }}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"인증번호를 입력해주세요.\",\r\n              },\r\n            ]}\r\n          >\r\n            <p>{_email}로 인증번호를 보냈습니다.</p>\r\n\r\n            <Input\r\n              onChange={onEmailCheckHandler}\r\n              placeholder=\"인증번호를 입력해주세요\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n            <Button htmlType=\"submit\">인증하기</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { Component, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Login from \"./pages/Login\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport Signup from \"./pages/Signup\";\r\nimport \"./App.css\";\r\nimport Auth from \"./hoc/auth\";\r\n\r\nconst Container = styled.div`\r\n  -ms-user-select: none;\r\n  -moz-user-select: -moz-none;\r\n  -khtml-user-select: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n`;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n          <Switch>\r\n            <Route path=\"/\" component={Login} exact />\r\n            <Route path=\"/signup\" component={Signup} exact />\r\n            <Route path=\"/main\" component={Auth(MainPage)} exact />\r\n          </Switch>\r\n        </Router>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { REGISTER_USER, LOGIN_USER,LOGOUT_USER,REGISTER_ERROR,AUTH_USER,LOGIN_SUCCESS,AUTH_SUCCESS,AUTH_FAILED } from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n  loggedIn : false,\r\n  user : {},\r\n}\r\n\r\nexport default function (state = defaultState, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return { ...state, loggedIn:false, user:{}};\r\n    case REGISTER_ERROR:\r\n        return { ...state, loggedIn:false, user:{}};\r\n    case LOGIN_USER:\r\n      return { ...state, loggedIn:true, user:{...action.payload} };\r\n    case LOGOUT_USER:\r\n      return { ...state, loggedIn:false, user:{} };\r\n    case AUTH_USER:\r\n      return {...state,loggedIn:true,user:{...action.payload}};\r\n    case AUTH_FAILED:\r\n      return {...state,loggedIn:false,user:{}};\r\n    case AUTH_SUCCESS:\r\n      return {...state,loggedIn:true};\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport user from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"antd/dist/antd.css\";\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport promiseMiddlerware from \"redux-promise\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst createStoreWidthMiddleware = applyMiddleware(\r\n  promiseMiddlerware,\r\n  reduxThunk\r\n)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n    store={createStoreWidthMiddleware(\r\n      reducer,\r\n      //개발자 도구를 사용하기 위한 설정\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )}>\r\n    <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}