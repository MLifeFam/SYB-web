{"version":3,"sources":["actions/types.js","utils/axios.js","actions/userAction.js","pages/Login.js","components/Header.js","components/Footer.js","components/Menu.js","pages/Welcome.js","pages/Curriculum.js","pages/Status.js","pages/Notice.js","pages/QuestionList.js","pages/Question.js","pages/Userquestionlist.js","pages/Userquestion.js","pages/Professor.js","pages/Timetable.js","pages/Bestqa.js","hoc/auth.js","pages/MainPage.js","pages/Signup.js","App.js","serviceWorker.js","reducer/userReducer.js","reducer/index.js","index.js"],"names":["REGISTER_USER","LOGIN_USER","LOGOUT_USER","AUTH_USER","REGISTER_ERROR","AUTH_SUCCESS","AUTH_FAILED","axios","defaults","withCredentials","authUser","props","token","localStorage","getItem","header","headers","authorization","dispatch","get","widthCredentials","then","res","type","department","num","dept","data","setItem","username","catch","error","withReactContent","Swal","LoginForm","styled","div","Logo","Whitespace","Login","useState","_id","setId","_password","setPassword","useDispatch","style","marginBottom","name","className","onFinish","e","clear","dataToSubmit","uid","userid","payload","post","response","loginUser","password","accessToken","result","status","loginSuccess","history","push","fire","icon","title","text","showConfirmButton","width","timer","err","console","log","autoComplete","Item","rules","required","message","paddingBottom","prefix","UserOutlined","paddingRight","onChange","currentTarget","value","placeholder","LockOutlined","htmlType","backgroundColor","border","margin","to","Spacer","Positioner","Logout","oc","gray","GradientBorder","UserContainer","red","HeaderContents","withRouter","fontSize","letterSpacing","fontFamily","color","padding","marginRight","borderRadius","onClick","MenuContainer","MenuContent","MenuItem","Menu","useHistory","ScrollTop","window","scrollTo","top","behavior","textDecoration","NotificationOutlined","BulbOutlined","QuestionCircleOutlined","ClockCircleOutlined","BarsOutlined","CalendarOutlined","AuditOutlined","LayoutOutlined","MessageOutlined","TextArea","Select","Option","Input","Welcome","Form","useForm","form","React","visible","setVisible","setData","confirmFunc","formData","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","isConfirmed","onFinishFunc","FormHandler","CancleModify","a","Object","entries","key","undefined","NaN","modifier","put","toast","onValuesChange","changedValue","allValue","getData","useCallback","content","time","moment","add","format","setFieldsValue","useEffect","display","alignItems","flexDirection","background","textAlign","justifyContent","onFieldsChange","resize","autoSize","colon","wrapperCol","offset","bordered","readOnly","Curriculum","link","getFieldValue","height","src","label","CloudUploadOutlined","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Status","id","isDisable","setDisable","comment","phoneNumber","Date","toLocaleDateString","visibility","noStyle","shouldUpdate","preValues","currentValues","messsage","disabled","Notice","QuestionList","setPage","page","onDeleteFunc","delete","faqno","success","onChangeFunc","category1","category2","category3","category4","category5","question","questionAnswer","landingUrl","imageinfo","orientation","count","justify","flex","marginLeft","onOk","onCancel","footer","initialvalues","span","ExclamationCircleOutlined","Question","pageSize","parseInt","innerHeight","reverse","_data","slice","map","it","i","length","PageRefresh","current","total","defaultPageSize","pagenum","Userquestionlist","idx","fontWeight","Userquestion","Professor","list","setlist","inputValue","setInputValue","nameCheck","setNameCheck","onSearchFunc","class_position","phone_number","email","p_list","v","options","filterOption","input","option","indexOf","SearchOutlined","Timetable","replace","classname","BestqaData","initialValues","Bestqa","Component","AuthCheck","assign","Container","MenuBar","Contents","MainPage","basename","process","marginTop","path","component","Auth","exact","Title","AutoComplete","formItemLayout","labelCol","xs","sm","tailFormItemLayout","Backwards","Signup","emailAuthform","_department","setDepartment","_email","setEmail","_name","setName","_phonenum","setPhonenum","id_duplication","checkDup","email_check","checkEmail","email_auth","setEmailAuth","sejongemail","handleCancel","onChangeSelectFunc","scrollToFirstError","LeftOutlined","hasFeedback","Password","dependencies","validator","rule","Promise","reject","resolve","initialValue","authNumber","App","Boolean","location","hostname","match","defaultState","loggedIn","user","rootReducer","combineReducers","state","action","createStoreWidthMiddleware","applyMiddleware","promiseMiddlerware","reduxThunk","createStore","ReactDOM","render","store","reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f69eeff0.chunk.js","sourcesContent":["export const REGISTER_USER = \"REGISTER_USER\";\r\nexport const LOGIN_USER =\"LOGIN_USER\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const AUTH_USER = \"AUTH_USER\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAILED = \"AUTH_FAILED\";","import axios from \"axios\";\r\n\r\nconst DOMAIN = \"https://mfam.site\";\r\naxios.defaults.withCredentials = true; // 쿠키 데이터를 전송받기 위해\r\nexport const request = (method, url, data) => {\r\n  return axios({\r\n    method,\r\n    url: DOMAIN + url,\r\n    data,\r\n  })\r\n    .then((res) => res)\r\n    .catch((err) => console.log(err));\r\n};","import {\r\n  REGISTER_USER,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  AUTH_USER,\r\n  REGISTER_ERROR,\r\n  LOGIN_SUCCESS,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAILED,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport { request } from \"../utils/axios\";\r\n\r\nexport function registerUser(dataToSubmit) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: REGISTER_USER,\r\n    });\r\n\r\n    return axios\r\n      .post(\"https://mfam.site/auth/signup\", dataToSubmit)\r\n      .then((response) => response)\r\n      .catch((error) => error.response);\r\n  };\r\n}\r\n\r\n// export function loginUser(dataToSubmit) {\r\n//   const data = request(\"post\", \"/auth/login\", dataToSubmit);\r\n//   return {\r\n//       type: LOGIN_USER,\r\n//       payload: data,\r\n//   };\r\n// }\r\n\r\nexport function loginUser(dataToSubmit) {\r\n  const uid = dataToSubmit.userid;\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_USER,\r\n      payload: uid,\r\n    });\r\n\r\n    return axios\r\n      .post(\"https://mfam.site/auth/login\", dataToSubmit)\r\n      .then((response) => response)\r\n      .catch((error) => error.response);\r\n  };\r\n}\r\n\r\nexport function loginSuccess(accessToken) {\r\n  localStorage.setItem(\"user_token\", accessToken);\r\n  //axios.defaults.headers.common['Authorization'] = accessToken;\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n    });\r\n  };\r\n}\r\n\r\nexport function logoutUser() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGOUT_USER,\r\n    });\r\n  };\r\n}\r\n\r\nexport function authUser(props) {\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(\"https://mfam.site/auth/check\", header, { widthCredentials: true })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: AUTH_SUCCESS,\r\n        });\r\n\r\n        const department = dept(res.data.data.department);\r\n\r\n        localStorage.setItem(\"username\", res.data.data.username);\r\n        localStorage.setItem(\"department\", department);\r\n\r\n        return res.data.data;\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: AUTH_FAILED,\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nfunction dept(num) {\r\n  switch (num) {\r\n    case 0:\r\n      return \"컴퓨터공학과\";\r\n      break;\r\n    case 1:\r\n      return \"소프트웨어학과\";\r\n      break;\r\n    case 2:\r\n      return \"정보보호학과\";\r\n      break;\r\n    case 3:\r\n      return \"데이터사이언스학과\";\r\n      break;\r\n    case 4:\r\n      return \"지능기전공학부\";\r\n      break;\r\n    case 5:\r\n      return \"디자인이노베이션\";\r\n      break;\r\n    case 6:\r\n      return \"만화애니메이션텍\";\r\n      break;\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n","import React, { Component, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { loginUser, authUser, loginSuccess } from \"../actions/userAction\";\r\nimport axios from \"axios\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst LoginForm = styled.div`\r\n  display: flex;\r\n  min-width: 800px;\r\n  min-height: 600px;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #a31432;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  font-size: 6rem;\r\n  letter-spacing: 1rem;\r\n  color: #a31432;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Whitespace = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 6rem;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-radius: 2rem;\r\n`;\r\n\r\nconst Login = (props) => {\r\n  const [_id, setId] = useState(\"\");\r\n  const [_password, setPassword] = useState(\"\");\r\n  const [_studentid, setStudentId] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const onLogin = (e) => {\r\n    localStorage.clear();\r\n    const body = {\r\n      userid: _id,\r\n      password: _password,\r\n    };\r\n\r\n    dispatch(loginUser(body))\r\n      .then((res) => {\r\n        const accessToken = res.data.result.token;\r\n\r\n        if (res.status === 200) {\r\n          dispatch(loginSuccess(accessToken));\r\n          dispatch(authUser()).then((res) => {\r\n            if (res) {\r\n              // res 추가해서 비동기적으로 실행되게 하기위함 (로그인 됬을 때 username 못불러오는 현상 해결)\r\n              props.history.push(\"/main\");\r\n            }\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"로그인 실패\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 2000,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <LoginForm>\r\n      <Whitespace>\r\n        <Logo style={{ marginBottom: \"3%\" }}>SYB ADMIN</Logo>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          onFinish={onLogin}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"id\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"ID를 입력해주세요\",\r\n              },\r\n            ]}\r\n            style={{ paddingBottom: \"0.5rem\" }}\r\n          >\r\n            <Input\r\n              prefix={\r\n                <UserOutlined\r\n                  className=\"site-form-item-icon\"\r\n                  style={{ paddingRight: \"0.5rem\" }}\r\n                />\r\n              }\r\n              onChange={onIdHandler}\r\n              placeholder=\"아이디\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 입력해주세요\",\r\n              },\r\n            ]}\r\n            style={{ paddingBottom: \"1rem\" }}\r\n          >\r\n            <Input\r\n              prefix={\r\n                <LockOutlined\r\n                  className=\"site-form-item-icon\"\r\n                  style={{ paddingRight: \"0.5rem\" }}\r\n                />\r\n              }\r\n              type=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              onChange={onPasswordHanlder}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                backgroundColor: \"#a31432\",\r\n                border: \"none\",\r\n                margin: \"0 1rem\",\r\n              }}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <Link to=\"/signup\" style={{ margin: \"0 1rem\" }}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                style={{ backgroundColor: \"#a31432\", border: \"none\" }}\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </Whitespace>\r\n    </LoginForm>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { Component, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutUser, authUser } from \"../actions/userAction\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst Logo = styled.div`\r\n  font-size: 2.5rem;\r\n  letter-spacing: 15px;\r\n  color: white;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Positioner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #a31432;\r\n  position: fixed;\r\n  top: 0px;\r\n  width: 100%;\r\n  min-width: 800px;\r\n  z-index: 3;\r\n`;\r\n\r\nconst Logout = styled.div`\r\n  font-size: 1.2rem;\r\n  letter-spacing: 3px;\r\n  color: black;\r\n  font-family: \"Rajdhani\";\r\n  &:hover {\r\n    color: ${oc.gray[6]};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst GradientBorder = styled.div`\r\n  height: 10 px;\r\n  background: linear-gradient(to right, black, white);\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n  background-color: white;\r\n  padding: 0 2rem;\r\n  height: 70%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  border-radius: 55px;\r\n  border: 3px solid ${oc.red[8]};\r\n`;\r\n\r\nconst HeaderContents = styled.div`\r\n  width: 100%;\r\n  height: 75px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0 2rem;\r\n  padding-right: 3rem;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nfunction Header(props) {\r\n  const dispatch = useDispatch();\r\n  const username = localStorage.getItem(\"username\");\r\n  const dept = localStorage.getItem(\"department\");\r\n  const onClickHandler = () => {\r\n    dispatch(logoutUser());\r\n    localStorage.clear();\r\n    props.history.push(\"/\");\r\n  };\r\n  return (\r\n    <Positioner>\r\n      <HeaderContents>\r\n        <Logo>SYB ADMIN</Logo>\r\n        <Spacer />\r\n        <UserContainer>\r\n          <Logo\r\n            style={{\r\n              fontSize: \"1.2rem\",\r\n              letterSpacing: \"1px\",\r\n              paddingRight: \"3rem\",\r\n              fontFamily: \"Gothic A1\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            <UserOutlined\r\n              style={{\r\n                color: \"white\",\r\n                padding: \"5px\",\r\n                fontSize: \"1.5rem\",\r\n                marginRight: \"1rem\",\r\n                borderRadius: \"100%\",\r\n                backgroundColor: \"gray\",\r\n              }}\r\n            />\r\n            {dept}&emsp;\r\n            {username} 조교님\r\n          </Logo>\r\n          <Logout onClick={onClickHandler}>Logout</Logout>\r\n        </UserContainer>\r\n      </HeaderContents>\r\n      <GradientBorder />\r\n    </Positioner>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header); // withRouter 해야 'push'를 못찾는 에러 메세지 뜨지 않음\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport oc from \"open-color\";\r\n\r\nconst Logo = styled.div`\r\n  font-size: 2rem;\r\n  letter-spacing: 3px;\r\n  color: white;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Positioner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${oc.gray[8]};\r\n  position: fixed;\r\n  height: 6.5%;\r\n  bottom: 0%;\r\n  width: 100%;\r\n  min-width: 800px;\r\n  z-index: 0;\r\n`;\r\n\r\nconst GradientBorder = styled.div`\r\n  height: 2px;\r\n  margin: 0rem 1rem 0 2rem;\r\n  border-radius: 5rem;\r\n  background: linear-gradient(to right, #a31432, #ffcccb);\r\n`;\r\n\r\nconst HeaderContents = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding-right: 3rem;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nconst Footer = ({ children }) => {\r\n  return (\r\n    <Positioner>\r\n      <HeaderContents>\r\n        <Logo>Footer TEST</Logo>\r\n        <Spacer />\r\n        <Logo>SYB</Logo>\r\n      </HeaderContents>\r\n    </Positioner>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  useHistory,\r\n  Switch,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport {\r\n  NotificationOutlined,\r\n  LoadingOutlined,\r\n  CalendarOutlined,\r\n  BarsOutlined,\r\n  AuditOutlined,\r\n  LayoutOutlined,\r\n  MessageOutlined,\r\n  BulbOutlined,\r\n  ClockCircleOutlined,\r\n  QuestionCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Divider } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport oc from \"open-color\";\r\n\r\nconst MenuContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 2rem;\r\n`;\r\n\r\nconst MenuContent = styled.div`\r\n  color: ${oc.gray[7]};\r\n  width: 11rem; // 클릭 박스 조정\r\n  height: 100%;\r\n  padding: 1rem 0;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst MenuItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 3rem;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  transition: all 0.2s;\r\n  &:hover {\r\n    background: ${oc.gray[3]};\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst Menu = () => {\r\n  let history = useHistory();\r\n  const ScrollTop = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <MenuContainer>\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/main\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <NotificationOutlined style={{ padding: \"0 1rem\" }} />\r\n            공지사항\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/question\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <BulbOutlined style={{ padding: \"0 1rem\" }} />\r\n            질문 추가 및 수정\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/userquestion\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <QuestionCircleOutlined style={{ padding: \"0 1rem\" }} />\r\n            유저들의 질문\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/status\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <ClockCircleOutlined style={{ padding: \"0 1rem\" }} />\r\n            학과 사무실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/curriculum\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <BarsOutlined style={{ padding: \"0 1rem\" }} />\r\n            교과과정\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/notice\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <CalendarOutlined style={{ padding: \"0 1rem\" }} />\r\n            학과공지\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/professor\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <AuditOutlined style={{ padding: \"0 1rem\" }} />\r\n            교수님 연구실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/timetable\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <LayoutOutlined style={{ padding: \"0 1rem\" }} />\r\n            강의실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/bestqa\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <MessageOutlined style={{ padding: \"0 1rem\" }} />\r\n            자주 묻는 질문\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n    </MenuContainer>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Welcome = (props) => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const department = localStorage.getItem(\"department\");\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const CancleModify = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n    formData.modifier = name;\r\n    const response = await axios\r\n      .put(`https://mfam.site/assistantNotice/${department}`, formData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n          setVisible(false);\r\n        } else {\r\n          toast.error(\"서버와의 에러가 발생했습니다!\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const loadContent = () => {\r\n    console.log(visible);\r\n    if (visible === true) {\r\n      return (\r\n        <Form\r\n          form={form}\r\n          onFinish={confirmFunc}\r\n          onFieldsChange={onValuesChange}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"content\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <TextArea\r\n              style={{\r\n                fontSize: \"1rem\",\r\n                width: \"50rem\",\r\n                resize: \"none\",\r\n                padding: \"1rem\",\r\n                textAlign: \"center\",\r\n              }}\r\n              autoSize={true}\r\n              resize=\"none\"\r\n            />\r\n          </Form.Item>\r\n          <div style={{ marginBottom: \"1rem\" }} />\r\n          <Divider />\r\n          <p style={{ width: \"100%\", color: \"gray\", marginBottom: \"2rem\" }}>\r\n            수정 하시려면 수정하기 버튼을, 취소하려면 취소 버튼을 눌러주세요{\" \"}\r\n          </p>\r\n          <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n            <div style={{ display: \"inline-block\" }}>\r\n              <Button htmlType=\"submit\" style={{ margin: \"0 1rem\" }}>\r\n                수정하기\r\n              </Button>\r\n              <Button onClick={CancleModify} style={{ margin: \"0 1rem\" }}>\r\n                취소\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <TextArea\r\n            value={data.content}\r\n            style={{\r\n              fontSize: \"1rem\",\r\n              width: \"50rem\",\r\n              resize: \"none\",\r\n              padding: \"1rem\",\r\n              textAlign: \"center\",\r\n            }}\r\n            bordered={false}\r\n            autoSize={true}\r\n            readOnly={true}\r\n          />\r\n          <div style={{ marginBottom: \"1rem\" }} />\r\n          <Divider />\r\n          <p style={{ width: \"100%\", color: \"gray\" }}>\r\n            {data.modifier} 조교님\r\n            <br />({data.time})\r\n          </p>\r\n          <Button onClick={FormHandler}>수정하기</Button>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\r\n      `https://mfam.site/assistantNotice/${department}`\r\n    );\r\n    console.log(response);\r\n    setData({\r\n      content: response.data.result[0].content,\r\n      modifier: response.data.result[0].modifier,\r\n      time: moment(response.data.result[0].time).add(9, \"hours\").format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      content: response.data.result[0].content,\r\n    });\r\n  }, [department]);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{department} 공지사항 </p>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          padding: \"2rem 2rem\",\r\n        }}\r\n      >\r\n        {loadContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Curriculum = () => {\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const [data, setData] = React.useState([]);\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\r\n      `https://mfam.site/curriculum/${department}`\r\n    );\r\n    console.log(response);\r\n    setData({\r\n      modifier: response.data[0].modifier,\r\n      time: moment(response.data[0].time).add(9, \"hours\").format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      department: response.data[0].department,\r\n      link: response.data[0].link,\r\n    });\r\n  }, [department]);\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    console.log(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (formData) => {\r\n    formData.modifier = localStorage.getItem(\"username\");\r\n    // formdata에 userid 추가\r\n    const response = await axios\r\n      .put(`https://mfam.site/curriculum/${formData.department}`, formData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n    // eslint-disable-next-line\r\n  }, [department, getData]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p style={{ fontSize: \"2rem\" }}>\r\n          {department} 교과과정 수정 페이지\r\n          <Divider style={{ margin: \"0\", backgroundColor: \"lightgray\" }} />\r\n        </p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468769-55939d00-221f-11eb-9ead-db3cce00f58c.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468774-575d6080-221f-11eb-97ad-fe254308449e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468778-59272400-221f-11eb-95f0-4df3d930c7bb.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"링크\" name=\"link\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Curriculum;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Form, Select, Input, Button, Carousel, Image, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Status = () => {\r\n  const id = localStorage.getItem(\"username\");\r\n  //const [time,setTime] = React.useState(new Date().toLocaleString());\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const [data, setData] = React.useState({});\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/status/${department}`);\r\n    console.log(response.data);\r\n    let data = \"\";\r\n    if (response.data[0].status === 0) {\r\n      data = \"근무중\";\r\n    } else if (response.data[0].status === 1) {\r\n      data = \"부재중\";\r\n    } else {\r\n      data = \"기타내용 입력\";\r\n    }\r\n    setData({\r\n      modifier: response.data[0].modifier,\r\n      time: moment(response.data[0].time).add(9, \"hours\").format(\"LLL\"),\r\n    });\r\n    form.setFieldsValue({\r\n      department: response.data[0].department,\r\n      status: data,\r\n      comment: response.data[0].comment,\r\n      position: response.data[0].position,\r\n      phoneNumber: response.data[0].phoneNumber,\r\n      // time: time,\r\n    });\r\n  });\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n    console.log(Date().toLocaleDateString);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        // setTime(new Date().toLocaleString());\r\n        console.log(formData);\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (data) => {\r\n    data.modifier = localStorage.getItem(\"username\");\r\n    const response = await axios\r\n      .put(`https://mfam.site/status/${data.department}`, data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (form.getFieldValue(\"status\") === \"2\") {\r\n      setDisable(true);\r\n    } else {\r\n      setDisable(false);\r\n    }\r\n  }, [form.data]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(department);\r\n    if (department === \"\") return;\r\n    getData();\r\n  }, [department]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p style={{ fontSize: \"2rem\" }}>\r\n          {department} 사무실 수정 페이지\r\n          <Divider style={{ margin: \"0\", backgroundColor: \"lightgray\" }} />\r\n        </p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468848-ae633580-221f-11eb-9afd-762834755b54.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468849-af946280-221f-11eb-975b-d12318fc58ad.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468851-b0c58f80-221f-11eb-9868-c9392a9bf029.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468853-b1f6bc80-221f-11eb-9928-35e67889354c.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item\r\n          label=\"학과\"\r\n          name=\"department\"\r\n          value={department}\r\n          style={{\r\n            width: \"0rem\",\r\n            height: \"0rem\",\r\n            visibility: \"hidden\",\r\n            margin: \"0\",\r\n          }}\r\n        >\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        {/* <Form.Item label=\"시간\" name=\"time\" value={time} style={{width:\"0rem\", height:\"0rem\" , visibility:\"hidden\", margin:\"0\"}}>\r\n          <Input readOnly=\"true\"/>\r\n        </Form.Item> */}\r\n        <Form.Item\r\n          label=\"이름\"\r\n          name=\"modifier\"\r\n          value={id}\r\n          style={{\r\n            width: \"0rem\",\r\n            height: \"0rem\",\r\n            visibility: \"hidden\",\r\n            margin: \"0\",\r\n          }}\r\n        >\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"위치\" name=\"position\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"전화번호\" name=\"phoneNumber\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"조교 부재여부\" name=\"status\" required>\r\n          <Select>\r\n            <Option value=\"0\">근무중</Option>\r\n            <Option value=\"1\">부재중</Option>\r\n            <Option value=\"2\">기타내용 입력</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          noStyle\r\n          shouldUpdate={(preValues, currentValues) =>\r\n            preValues.status !== currentValues.status\r\n          }\r\n        >\r\n          {({ getFieldValue }) => {\r\n            return form.getFieldValue(\"status\") === \"2\" ||\r\n              form.getFieldValue(\"status\") === \"기타내용 입력\" ? (\r\n              <Form.Item\r\n                label=\"기타내용\"\r\n                name=\"comment\"\r\n                rules={[\r\n                  { required: true, messsage: \"기타 내용을 입력해주세요\" },\r\n                ]}\r\n              >\r\n                <TextArea disabled={isDisable} style={{ resize: \"none\" }} />\r\n              </Form.Item>\r\n            ) : null;\r\n          }}\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Notice = () => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const [data, setData] = React.useState([]);\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/notice/${department}`);\r\n    console.log(response);\r\n    setData({\r\n      modifier: response.data[0].modifier,\r\n      time: moment(response.data[0].time).add(9, \"hours\").format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      department: response.data[0].department,\r\n      link: response.data[0].link,\r\n    });\r\n  }, [department]);\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    console.log(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (formData) => {\r\n    formData.modifier = name;\r\n    const response = await axios\r\n      .put(`https://mfam.site/notice/${formData.department}`, formData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, [department, getData]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p style={{ fontSize: \"2rem\" }}>\r\n          {department} 공지 링크 페이지\r\n          <Divider style={{ margin: \"0\", backgroundColor: \"lightgray\" }} />\r\n        </p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468604-8f17d880-221e-11eb-90fc-43a1acad45c6.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468606-90e19c00-221e-11eb-9dde-738e963f0458.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468607-9212c900-221e-11eb-8763-c018eebf650f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"링크\" name=\"link\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col, Divider, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst QuestionList = ({ data, getData, setPage, page }) => {\r\n  console.log(data);\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const num = data[0];\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://mfam.site/knowledgePlus/${data.faqno}`, formData)\r\n      .catch((error) => {\r\n        return toast.error(\"에러가 났어요!\");\r\n        console.log(error);\r\n      });\r\n    setVisible(false);\r\n    setPage(page);\r\n    getData();\r\n    toast.success(\"질문을 삭제했습니다!\");\r\n  };\r\n\r\n  const onChangeFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n\r\n    const response = await axios\r\n      .put(`https://mfam.site/knowledgePlus/${data.faqno}`, formData)\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        if (res.status === 200) {\r\n          setVisible(false);\r\n          setPage(page);\r\n          getData();\r\n          toast.success(\"질문을 수정했습니다!\");\r\n        } else {\r\n          toast.error(\"에러가 났어요!\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"에러가 났어요!\");\r\n      });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      faqno: data.faqno,\r\n      category1: data.category1,\r\n      category2: data.category2,\r\n      category3: data.category3,\r\n      category4: data.category4,\r\n      category5: data.category5,\r\n      question: data.question,\r\n      questionAnswer: data.questionAnswer,\r\n      landingUrl: data.landingUrl,\r\n      imageinfo: data.imageinfo,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Divider orientation=\"left\">{data.count}</Divider>\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col flex={9} style={{ marginLeft: \"2rem\", width: \"70%\" }}>\r\n          {data.question}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button onClick={FormHandler}>수정하기</Button>\r\n          <Modal\r\n            title=\"질문수정\"\r\n            visible={visible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n            width=\"40rem\"\r\n          >\r\n            <Form\r\n              form={form}\r\n              onFinish={onChangeFunc}\r\n              onFieldsChange={onValuesChange}\r\n              autoComplete=\"off\"\r\n              style={{ width: \"95%\", padding: \"0 5%\" }}\r\n            >\r\n              <Form.Item\r\n                label=\"질문\"\r\n                name=\"question\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"질문을 입력해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input initialvalues={data.question} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"답변\"\r\n                name=\"questionAnswer\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"답변을 입력해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input initialvalues={data.questionAnswer} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"카테고리 1\"\r\n                name=\"category1\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"하나 이상의 카테고리를 설정해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input initialvalues={data.category1} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 2\" name=\"category2\">\r\n                <Input initialvalues={data.category2} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 3\" name=\"category3\">\r\n                <Input initialvalues={data.category3} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 4\" name=\"category4\">\r\n                <Input initialvalues={data.category4} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 5\" name=\"category5\">\r\n                <Input initialvalues={data.category5} />\r\n              </Form.Item>\r\n              <Form.Item label=\"답변링크\" name=\"landingUrl\">\r\n                <Input initialvalues={data.landingUrl} />\r\n              </Form.Item>\r\n              <Form.Item label=\"이미지링크\" name=\"imageinfo\">\r\n                <Input initialvalues={data.imageinfo} />\r\n              </Form.Item>\r\n\r\n              <Form.Item colon={false} wrapperCol={{ span: 20, offset: 7 }}>\r\n                <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n                  수정하기\r\n                </Button>\r\n                <Button\r\n                  icon={<ExclamationCircleOutlined />}\r\n                  type=\"primary\"\r\n                  onClick={confirmFunc}\r\n                  style={{\r\n                    backgroundColor: \"red\",\r\n                    color: \"white\",\r\n                    border: \"none\",\r\n                    marginLeft: \"3rem\",\r\n                  }}\r\n                >\r\n                  삭제하기\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionList;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport QuestionList from \"./QuestionList\";\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Question = (props) => {\r\n  const pageSize = parseInt(window.innerHeight / 100);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(1);\r\n  const num = data[0];\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = (num) => {\r\n    const _data = data.slice(\r\n      (num - 1) * pageSize,\r\n      (num - 1) * pageSize + pageSize\r\n    );\r\n    // data page에 따라 자르는 작업\r\n\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    return _data.map((it, i) => {\r\n      it.count = data.length - i - pageSize * (page - 1);\r\n      // 게시글 번호 계산\r\n\r\n      it.props = props;\r\n      return (\r\n        <QuestionList\r\n          key={i}\r\n          data={it}\r\n          getData={getData}\r\n          setPage={setPage}\r\n          page={page}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n\r\n    const response = await axios\r\n      .post(`https://mfam.site/knowledgePlus`, formData)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          toast.success(\"질문을 등록했습니다!\");\r\n          setPage(1);\r\n          getData();\r\n          setVisible(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    //pagenum은 1,2,3,4 식으로 전송 됨.\r\n    setPage(pagenum);\r\n    getData();\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/knowledgePlus`);\r\n    setData(response.data.reverse());\r\n    //setData(response.data.values.reverse());\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>질문 수정 페이지</p>\r\n      </div>\r\n      소융봇에서 제공 할 질문과 답변을 관리하는 페이지입니다.\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"5px 0\" }}>\r\n        <Link to=\"/userquestion\">\r\n          <u>유저들의 질문</u>\r\n        </Link>{\" \"}\r\n        에서 질문을 골라보세요 😊\r\n      </div>\r\n      {PageRefresh(page)}\r\n      <div style={{ marginBottom: \"2rem\" }} />\r\n      <Pagination\r\n        current={page}\r\n        total={data.length}\r\n        defaultPageSize={pageSize}\r\n        onChange={onPageChange}\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n      />\r\n      <Button onClick={FormHandler}>질문 추가</Button>\r\n      <Modal\r\n        title=\"질문추가\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n        width=\"40rem\"\r\n      >\r\n        <Form\r\n          form={form}\r\n          onFinish={onFinishFunc}\r\n          onFieldsChange={onValuesChange}\r\n          autoComplete=\"off\"\r\n          style={{ width: \"95%\", padding: \"0 5%\" }}\r\n        >\r\n          <Form.Item\r\n            label=\"질문\"\r\n            name=\"question\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"질문을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"답변\"\r\n            name=\"questionAnswer\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"답변을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"카테고리 1\"\r\n            name=\"category1\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"하나 이상의 카테고리를 설정해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 2\" name=\"category2\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 3\" name=\"category3\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 4\" name=\"category4\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 5\" name=\"category5\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"답변링크\" name=\"landingUrl\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"이미지링크\" name=\"imageinfo\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n            <Button\r\n              icon={<CloudUploadOutlined />}\r\n              htmlType=\"submit\"\r\n              style={{ margin: \"1rem 1rem 0 1rem\" }}\r\n            >\r\n              추가하기\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col, Divider, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Userquestionlist = ({ data, getData, setPage, page }) => {\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://mfam.site/question/${data.idx}`, formData)\r\n      .catch((error) => {\r\n        return toast.error(\"에러가 났어요!\");\r\n        console.log(error);\r\n      });\r\n    setPage(page);\r\n    getData();\r\n    toast.success(\"질문을 삭제했습니다!\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ margin: \"2vh 0\" }} />\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col\r\n          flex={1}\r\n          style={{ textAlign: \"center\", width: \"15%\", fontWeight: \"bold\" }}\r\n        >\r\n          {data.department}\r\n        </Col>\r\n        <Col flex={8} style={{ marginLeft: \"2rem\", width: \"60%\" }}>\r\n          {data.content}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button\r\n            onClick={confirmFunc}\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"red\", border: \"none\" }}\r\n          >\r\n            삭제하기\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Userquestionlist;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Userquestionlist from \"./Userquestionlist\";\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Userquestion = (props) => {\r\n  const department = localStorage.getItem(\"department\");\r\n  const pageSize = parseInt(window.innerHeight / 50);\r\n  let count = 0;\r\n  const [size, setSize] = React.useState(0);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(1);\r\n  const num = data[0];\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = (count) => {\r\n    const _data = data.slice(\r\n      (count - 1) * pageSize,\r\n      (count - 1) * pageSize + pageSize\r\n    );\r\n    // data page에 따라 자르는 작업\r\n\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    return _data.map((it, i) => {\r\n      // 게시글 번호 계산\r\n\r\n      if (it.department === \"공통 질문\" || it.department === department) {\r\n        return (\r\n          <Userquestionlist\r\n            key={i}\r\n            data={it}\r\n            getData={getData}\r\n            setPage={setPage}\r\n            page={page}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n\r\n    const response = await axios\r\n      .post(`https://mfam.site/knowledgePlus`, formData)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          toast.success(\"질문을 등록했습니다!\");\r\n          setPage(1);\r\n          getData();\r\n          setVisible(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    //pagenum은 1,2,3,4 식으로 전송 됨.\r\n    setPage(pagenum);\r\n    getData();\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/question`);\r\n    response.data.map((i, it) => {\r\n      if (i.department === (\"공통 질문\" || department)) {\r\n        count += 1;\r\n      }\r\n    });\r\n    setData(response.data.reverse());\r\n    //setData(response.data.values.reverse());\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>유저들의 질문</p>\r\n      </div>\r\n      소융봇에서 제공하고 있지 않은 질문들에 대해서 유저들이 남긴 질문입니다.\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"5px 0\" }}>\r\n        <Link to=\"/question\">\r\n          <u>질문 수정페이지</u>\r\n        </Link>{\" \"}\r\n        에서 질문에 대한 답변을 올려주세요 😊\r\n      </div>\r\n      {/* {data.map((it,i)=>{\r\n        it.count=data.length-i;\r\n        it.props=props;\r\n        return(\r\n            <QuestionList key = {i} data={it} getData={getData}/>\r\n        )\r\n      })} */}\r\n      {PageRefresh(page)}\r\n      <div style={{ marginBottom: \"2rem\" }} />\r\n      <Pagination\r\n        current={page}\r\n        total={data.length}\r\n        defaultPageSize={pageSize}\r\n        onChange={onPageChange}\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Userquestion;\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Professor = () => {\r\n  const [list, setlist] = React.useState([]);\r\n  const [form] = Form.useForm();\r\n  const [data, getData] = React.useState({});\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [nameCheck, setNameCheck] = React.useState(false);\r\n  const onFinishFunc = async (_data) => {\r\n    _data.modifier = localStorage.getItem(\"username\");\r\n    const response = await axios\r\n      .put(`https://mfam.site/professor/${inputValue}`, _data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    if (nameCheck === false) {\r\n      return toast.error(\"교수님 성함 입력 후 Seacrh 해주세요!\");\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChangeFunc = (name) => {\r\n    setNameCheck(false);\r\n    setInputValue(name);\r\n  };\r\n\r\n  const showModifier = () => {\r\n    return (\r\n      <p style={{ width: \"100%\", color: \"gray\" }}>\r\n        {data.modifier}\r\n        <br />\r\n        {data.time}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const onSearchFunc = async () => {\r\n    let name = inputValue;\r\n    if (name.length < 2) {\r\n      return toast.error(\"존재하지 않는 이름입니다.\");\r\n    }\r\n    const response = await axios\r\n      .get(`https://mfam.site/professor/${name}`)\r\n      .catch((error) => {\r\n        toast.error(\"에러가 났어요!\");\r\n      });\r\n    console.log(response);\r\n\r\n    if (response.data.length === 0) {\r\n      return toast.error(\"존재하지 않는 이름입니다.\");\r\n    }\r\n    toast.success(\"교수님 정보를 성공적으로 불러왔습니다.\");\r\n    setNameCheck(true);\r\n    getData({\r\n      modifier: response.data[0].modifier + \" 조교님\",\r\n      time:\r\n        \"(\" + moment(response.data[0].time).add(9, \"hours\").format(\"LLL\") + \")\",\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      class_position: response.data[0].class_position,\r\n      phone_number: response.data[0].phone_number,\r\n      email: response.data[0].email,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let p_list = [];\r\n    axios.get(`https://mfam.site/professor/`).then((res) => {\r\n      res.data.map((v, i) => {\r\n        p_list.push({ value: v.name });\r\n      });\r\n    });\r\n\r\n    setlist(p_list);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>교수님 연구실 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045727-22f9f380-25d5-11eb-8a36-a2135d9fb51d.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045910-5fc5ea80-25d5-11eb-8f68-7b071a52350e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045316-7cadee00-25d4-11eb-9b20-8c5bb4fbb247.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          margin: \"0 0 2rem 0\",\r\n          width: \"30rem\",\r\n        }}\r\n      >\r\n        <p style={{ width: \"5rem\" }}>성함:</p>\r\n        <AutoComplete\r\n          style={{ width: \"100%\", marginRight: \"1rem\" }}\r\n          options={list}\r\n          placeholder=\"교수님 성함을 입력해주세요\"\r\n          filterOption={(input, option) => option.value.indexOf(input) === 0}\r\n          onChange={onChangeFunc}\r\n        />\r\n        {/* <Input style={{ margin: \"0 4% 0 0\" }} onChange={onChangeFunc} /> */}\r\n        <Button icon={<SearchOutlined />} onClick={onSearchFunc}>\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"30rem\" }}\r\n      >\r\n        <Form.Item label=\"연구실\" name=\"class_position\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"전화번호\" name=\"phone_number\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"이메일\" name=\"email\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        {showModifier()}\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Professor;\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { getDefaultNormalizer } from \"@testing-library/react\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Timetable = () => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const [list, setlist] = React.useState([]);\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = React.useState({});\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [nameCheck, setNameCheck] = React.useState(false);\r\n\r\n  const confirmFunc = (formData) => {\r\n    if (nameCheck === false) {\r\n      return toast.error(\"강의실 이름을 Seacrh 해주세요!\");\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (data) => {\r\n    data.modifier = name;\r\n    console.log(data);\r\n    const response = await axios\r\n      .put(`https://mfam.site/timetable/${inputValue}`, data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n        onSearchFunc();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const onChangeFunc = (name) => {\r\n    setNameCheck(false);\r\n    setInputValue(name);\r\n  };\r\n\r\n  const onSearchFunc = async () => {\r\n    let value = inputValue.replace(/(\\s*)/g, \"\"); // 띄어쓰기 제거\r\n    if (value.length < 3) {\r\n      return toast.error(\"존재하지 않는 강의실입니다.\");\r\n    }\r\n    const response = await axios\r\n      .get(`https://mfam.site/timetable/${value}`)\r\n      .catch((error) => {\r\n        toast.error(\"에러가 났어요!\");\r\n      });\r\n\r\n    console.log(response);\r\n    if (response.data.length === 0) {\r\n      return toast.error(\"존재하지 않는 강의실입니다.\");\r\n    } else {\r\n      toast.success(\"강의실 정보를 성공적으로 불러왔습니다.\");\r\n      setNameCheck(true);\r\n      setData({\r\n        modifier: response.data[0].modifier + \" 조교님\",\r\n        time:\r\n          \"(\" +\r\n          moment(response.data[0].time).add(9, \"hours\").format(\"LLL\") +\r\n          \")\",\r\n      });\r\n      form.setFieldsValue({\r\n        link: response.data[0].link,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let p_list = [];\r\n    axios.get(`https://mfam.site/timetable/`).then((res) => {\r\n      res.data.map((v, i) => {\r\n        p_list.push({ value: v.classname });\r\n      });\r\n    });\r\n\r\n    setlist(p_list);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>강의실 시간표 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046546-3eb1c980-25d6-11eb-91d1-9e65182a72cb.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046550-3fe2f680-25d6-11eb-8f35-49df97a88419.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046554-41142380-25d6-11eb-8be4-b10796d051f3.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          margin: \"0 0 2rem 0\",\r\n          width: \"30rem\",\r\n        }}\r\n      >\r\n        <p style={{ width: \"5rem\" }}>강의실:</p>\r\n        <AutoComplete\r\n          style={{ width: \"100%\", marginRight: \"1rem\" }}\r\n          options={list}\r\n          placeholder=\"강의실을 입력해주세요\"\r\n          filterOption={(input, option) => option.value.indexOf(input) !== -1}\r\n          onChange={onChangeFunc}\r\n        />\r\n        <Button icon={<SearchOutlined />} onClick={onSearchFunc}>\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"30rem\" }}\r\n      >\r\n        <Form.Item label=\"링크\" name=\"link\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier}\r\n          <br />\r\n          {data.time}\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timetable;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n} from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst BestqaData = ({ data, key }) => {\r\n  const [form] = Form.useForm();\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    formData.modifier = localStorage.getItem(\"username\");\r\n\r\n    const response = await axios\r\n      .put(`https://mfam.site/bestqa/${data.id}`, formData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        } else {\r\n          toast.error(\"서버와의 에러가 발생했습니다!\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <Form\r\n        initialValues={{ id: data.id, question: data.question }}\r\n        onFinish={confirmFunc}\r\n        autoComplete=\"off\"\r\n        form={form}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Form.Item label={`TOP ${data.id} `} name=\"question\">\r\n          <Input style={{ width: \"30vw\" }} />\r\n        </Form.Item>\r\n        <Form.Item colon={false} wrapperCol={{ span: 11, offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Bestqa = () => {\r\n  const [data, setData] = React.useState([]);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\"https://mfam.site/bestqa\");\r\n    console.log(response);\r\n    setData(response.data);\r\n  }, []);\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          margin: \"0 0 2rem 0\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        자주 묻는 질문 수정 페이지\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047553-b502fb80-25d7-11eb-898a-7b1c46473b0f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047557-b6342880-25d7-11eb-8fcf-7256e6887d65.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047561-b7fdec00-25d7-11eb-87a3-9b443cd8be5a.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047565-b9c7af80-25d7-11eb-852d-b6d83dd1012f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      {data.map((it, i) => {\r\n        return <BestqaData key={it.classname} data={it} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bestqa;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authUser } from \"../actions/userAction\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nexport default function (Component, option , adminRoute = null){\r\n    //option\r\n    //null => 아무나 출입 가능\r\n    //true => 로그인한 유저만 출입 가능\r\n    //false => 로그인한 유저는 출입 불가능\r\n\r\n    function AuthCheck(props){\r\n        const dispatch = useDispatch();\r\n        let _data={};\r\n        useEffect(() =>{\r\n        dispatch(authUser()).then((res) =>{\r\n            if(!res){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title:'로그인이 필요합니다',\r\n                    showConfirmButton: true,\r\n                    width:'25rem',\r\n                    timer: 2000,\r\n                }).then(props.history.push(\"/\"));\r\n            }\r\n            else{\r\n                _data = Object.assign(_data,res);\r\n            }\r\n        });\r\n    },[]);\r\n            return <Component data={_data}/>\r\n    }\r\n\r\n    return AuthCheck;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Menu from \"../components/Menu\";\r\nimport Welcome from \"./Welcome\";\r\nimport Curriculum from \"./Curriculum\";\r\nimport Status from \"./Status\";\r\nimport Notice from \"./Notice\";\r\nimport Question from \"./Question\";\r\nimport Userquestion from \"./Userquestion\";\r\nimport Professor from \"./Professor\";\r\nimport Timetable from \"./Timetable\";\r\nimport Bestqa from \"./Bestqa\";\r\nimport oc from \"open-color\";\r\nimport Auth from \"../hoc/auth\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 800px;\r\n  min-height: 800px;\r\n  margin-bottom: 3rem;\r\n  margin-top: 4rem;\r\n  padding-left: 1rem;\r\n  -ms-user-select: none;\r\n  -moz-user-select: -moz-none;\r\n  -khtml-user-select: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n`;\r\n\r\nconst MenuBar = styled.div`\r\n  width: 12rem;\r\n  height: 85%;\r\n  background-color: ${oc.gray[1]};\r\n  border-radius: 1rem;\r\n  position: fixed;\r\n  z-index: 2;\r\n  border: 4px groove ${oc.gray[4]};\r\n  \"&:hover\": {\r\n    background: \"#efefef\";\r\n  }\r\n  // @media (max-width: 767px) {\r\n  //     display:none;\r\n  // }\r\n`;\r\n\r\nconst Contents = styled.div`\r\n  width: 90%;\r\n  height: 85%;\r\n  min-height: 600px;\r\n  min-width: 800px;\r\n  margin: 2rem 2rem 0 13rem;\r\n  border-radius: 0.5rem;\r\n  background-color: ${oc.gray[1]};\r\n  border: 2px groove ${oc.gray[4]};\r\n`;\r\n\r\nconst MainPage = (props) => {\r\n  const userdata = props.data;\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <Container>\r\n        <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n          <MenuBar style={{ marginTop: \"2rem\" }}>\r\n            <Menu />\r\n          </MenuBar>\r\n          <Contents>\r\n            <Switch>\r\n              <Route path=\"/status\" component={Auth(Status)} exact />\r\n              <Route path=\"/question\" component={Question} exact />\r\n              <Route path=\"/userquestion\" component={Userquestion} exact />\r\n              <Route path=\"/curriculum\" component={Auth(Curriculum)} exact />\r\n              <Route path=\"/notice\" component={Auth(Notice)} exact />\r\n              <Route path=\"/professor\" component={Auth(Professor)} exact />\r\n              <Route path=\"/timetable\" component={Auth(Timetable)} exact />\r\n              <Route path=\"/bestqa\" component={Auth(Bestqa)} exact />\r\n              <Route path=\"/main\" component={Auth(Welcome)} exact />\r\n            </Switch>\r\n          </Contents>\r\n        </Router>\r\n      </Container>\r\n      {/* <Footer/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { Component, useState } from \"react\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { registerUser } from \"../actions/userAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  AutoComplete,\r\n  Modal,\r\n} from \"antd\";\r\nimport { QuestionCircleOutlined, LeftOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  min-width: 800px;\r\n  min-height: 600px;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #a31432;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Whitespace = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 6rem;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-radius: 2rem;\r\n`;\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst Title = styled.div`\r\n  font-size: 3rem;\r\n  color: #a31432;\r\n  font-family: \"Rajdhani\";\r\n  margin-top: 5rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst Backwards = styled.div`\r\n  font-size: 2.8rem;\r\n  left: 7rem;\r\n  top: 3.5rem;\r\n  color: #a31432;\r\n  position: absolute;\r\n  &:hover {\r\n    color: ${oc.red[8]};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Signup = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [emailAuthform] = Form.useForm();\r\n  const [_id, setId] = useState(\"\");\r\n  const [_password, setPassword] = useState(\"\");\r\n  const [_department, setDepartment] = useState(\"\");\r\n  const [_email, setEmail] = useState(\"\");\r\n  const [_name, setName] = useState(\"\");\r\n  const [_phonenum, setPhonenum] = useState(\"\");\r\n  const [id_duplication, checkDup] = useState(false);\r\n  const [email_check, checkEmail] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [email_auth, setEmailAuth] = useState(0);\r\n  const sejongemail = \"@sejong.ac.kr\";\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    setEmailAuth(\"\");\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n    setEmailAuth(\"\");\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n    checkDup(false);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n  const onEmailHandler = (e) => {\r\n    setEmail(e.currentTarget.value);\r\n    checkEmail(false);\r\n  };\r\n  const onNameHandler = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const onPhoneHandler = (e) => {\r\n    setPhonenum(e.currentTarget.value);\r\n  };\r\n\r\n  const onEmailCheckSubmit = (e) => {\r\n    console.log({\r\n      email: _email,\r\n      authNumber: email_auth,\r\n    });\r\n    axios\r\n      .post(\"https://mfam.site/mail/verify\", {\r\n        email: _email,\r\n        authNumber: email_auth,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 201) {\r\n          handleCancel();\r\n          setEmail(true);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            text: \"인증되었습니다.\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 2000,\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            text: \"인증번호가 옳지 않습니다.\",\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"인증번호가 옳지 않습니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n\r\n        // Swal.fire({\r\n        //   icon: \"warning\",\r\n        //   text: \"서버와의 연결이 옳지 않습니다.\",\r\n        //   showConfirmButton: true,\r\n        //   width: \"25rem\",\r\n        //   timer: 1500,\r\n        // });\r\n      });\r\n  };\r\n\r\n  const onEmailCheckHandler = (e) => {\r\n    setEmailAuth(e.currentTarget.value);\r\n    console.log(email_auth);\r\n  };\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    setDepartment(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onEmailHadnler = (e) => {\r\n    if (_email.indexOf(sejongemail) === _email.length - sejongemail.length) {\r\n      return setVisible(true);\r\n    }\r\n\r\n    //세종대이메일 검사\r\n\r\n    axios\r\n      .post(\"https://mfam.site/mail/send\", { to: _email })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log({ to: _email });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"이메일이 발송되지 않았습니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n\r\n  const onDuplicationHadnler = (e) => {\r\n    if (_id.length === 0) {\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        text: \"아이디를 입력해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 1500,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"https://mfam.site/auth/idCheck\", { userid: _id })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n\r\n          checkDup(true);\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n\r\n          checkDup(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"중복된 아이디 입니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n\r\n        checkDup(false);\r\n      });\r\n  };\r\n  const linktoMain = (e) => {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n    let body = {\r\n      email: _email,\r\n      username: _name,\r\n      password: _password,\r\n      userid: _id,\r\n      phoneNumber: _phonenum,\r\n      department: _department,\r\n    };\r\n\r\n    if (id_duplication === false) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"가입 실패\",\r\n        text: \"아이디 중복검사를 완료해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 2000,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (email_check === false) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"가입 실패\",\r\n        text: \"이메일 인증을 완료해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 2000,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    dispatch(registerUser(body))\r\n      .then((res) => {\r\n        if (res.status === 409) {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"가입 실패\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 2000,\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"가입 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 2000,\r\n          });\r\n          props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onSubmitHandler}\r\n        autoComplete=\"off\"\r\n        scrollToFirstError\r\n      >\r\n        <Container>\r\n          <Whitespace>\r\n            <Backwards>\r\n              <LeftOutlined onClick={linktoMain} />\r\n            </Backwards>\r\n            <Title>\r\n              <p>Sign up</p>\r\n            </Title>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"6rem\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n                name=\"id\"\r\n                label=\"아이디\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"아이디를 입력해주세요.\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input onChange={onIdHandler} />\r\n              </Form.Item>\r\n              <Button\r\n                style={{\r\n                  position: \"relatvive\",\r\n                  width: \"5rem\",\r\n                  fontSize: \"0.7rem\",\r\n                  marginLeft: \"1rem\",\r\n                }}\r\n                onClick={onDuplicationHadnler}\r\n              >\r\n                중복검사\r\n              </Button>\r\n            </div>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"password\"\r\n              label=\"비밀번호\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"패스워드를 입력해주세요.\",\r\n                },\r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input.Password onChange={onPasswordHanlder} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"confirm\"\r\n              label=\"비밀번호 확인\"\r\n              dependencies={[\"password\"]}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"패스워드를 확인해주세요\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\"비밀번호가 일치하지 않습니다!\");\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"name\"\r\n              label=\"이름\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"이름을 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input onChange={onNameHandler} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"department\"\r\n              label=\"학과\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"학과를 선택해주세요\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select onChange={onChangeSelectFunc}>\r\n                <Option value=\"0\">컴퓨터공학과</Option>\r\n                <Option value=\"1\">소프트웨어학과</Option>\r\n                <Option value=\"2\">정보보호학과</Option>\r\n                <Option value=\"3\">데이터사이언스학과</Option>\r\n                <Option value=\"4\">지능기전공학부</Option>\r\n                <Option value=\"5\">디자인이노베이션</Option>\r\n                <Option value=\"6\">만화애니메이션텍</Option>\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"6rem\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n                name=\"email\"\r\n                label=\"이메일\"\r\n                initialValue=\"\"\r\n                hasFeedback\r\n                rules={[\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"올바른 이메일이 아닙니다\",\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: \"이메일을 입력해주세요.\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                      if (\r\n                        value.indexOf(sejongemail) ===\r\n                          value.length - sejongemail.length ||\r\n                        !value\r\n                      ) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\"\");\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input\r\n                  onChange={onEmailHandler}\r\n                  placeholder=\"abc@sejong.ac.kr\"\r\n                />\r\n              </Form.Item>\r\n              <Button\r\n                style={{\r\n                  position: \"relatvive\",\r\n                  width: \"5rem\",\r\n                  fontSize: \"0.7rem\",\r\n                  marginLeft: \"1rem\",\r\n                }}\r\n                onClick={onEmailHadnler}\r\n              >\r\n                메일인증\r\n              </Button>\r\n            </div>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"phonenumber\"\r\n              label=\"휴대폰 번호\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"휴대폰 번호를 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input onChange={onPhoneHandler} />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{\r\n                  backgroundColor: \"#a31432\",\r\n                  border: \"none\",\r\n                  margin: \"0.5rem 1rem 0\",\r\n                }}\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </Form.Item>\r\n          </Whitespace>\r\n        </Container>\r\n      </Form>\r\n\r\n      <Modal\r\n        title=\"이메일 인증\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n        width=\"40rem\"\r\n      >\r\n        <Form\r\n          form={emailAuthform}\r\n          name=\"emailCheck\"\r\n          onFinish={onEmailCheckSubmit}\r\n          autoComplete=\"off\"\r\n          style={{ width: \"auto\" }}\r\n        >\r\n          <Form.Item\r\n            style={{ width: \"auto\" }}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"인증번호를 입력해주세요.\",\r\n              },\r\n            ]}\r\n          >\r\n            <p>{_email}로 인증번호를 보냈습니다.</p>\r\n\r\n            <Input\r\n              onChange={onEmailCheckHandler}\r\n              placeholder=\"인증번호를 입력해주세요\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n            <Button htmlType=\"submit\">인증하기</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { Component, useState } from \"react\";\nimport {\n  Link,\n  Route,\n  Switch,\n  withRouter,\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Login from \"./pages/Login\";\nimport MainPage from \"./pages/MainPage\";\nimport Signup from \"./pages/Signup\";\nimport \"./App.css\";\nimport Auth from \"./hoc/auth\";\n\nconst Container = styled.div`\n  -ms-user-select: none;\n  -moz-user-select: -moz-none;\n  -khtml-user-select: none;\n  -webkit-user-select: none;\n  user-select: none;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <Router basename={`${process.env.PUBLIC_URL}/`}>\n          <Switch>\n            <Route path=\"/\" component={Login} exact />\n            <Route path=\"/signup\" component={Signup} exact />\n            <Route path=\"/main\" component={Auth(MainPage, true)} exact />\n          </Switch>\n        </Router>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { REGISTER_USER, LOGIN_USER,LOGOUT_USER,REGISTER_ERROR,AUTH_USER,LOGIN_SUCCESS,AUTH_SUCCESS,AUTH_FAILED } from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n  loggedIn : false,\r\n  user : {},\r\n}\r\n\r\nexport default function (state = defaultState, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return { ...state, loggedIn:false, user:{}};\r\n    case REGISTER_ERROR:\r\n        return { ...state, loggedIn:false, user:{}};\r\n    case LOGIN_USER:\r\n      return { ...state, loggedIn:true, user:{...action.payload} };\r\n    case LOGOUT_USER:\r\n      return { ...state, loggedIn:false, user:{} };\r\n    case AUTH_USER:\r\n      return {...state,loggedIn:true,user:{...action.payload}};\r\n    case AUTH_FAILED:\r\n      return {...state,loggedIn:false,user:{}};\r\n    case AUTH_SUCCESS:\r\n      return {...state,loggedIn:true};\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport user from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"antd/dist/antd.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport promiseMiddlerware from \"redux-promise\";\nimport reduxThunk from \"redux-thunk\";\nimport reducer from \"./reducer\";\n\nconst createStoreWidthMiddleware = applyMiddleware(\n  promiseMiddlerware,\n  reduxThunk\n)(createStore);\n\nReactDOM.render(\n    <Provider\n    store={createStoreWidthMiddleware(\n      reducer,\n      //개발자 도구를 사용하기 위한 설정\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}