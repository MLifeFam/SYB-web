[{"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\index.js":"1","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\App.js":"2","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\serviceWorker.js":"3","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\reducer\\index.js":"4","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\MainPage.js":"5","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Login.js":"6","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Signup.js":"7","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\hoc\\auth.js":"8","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\reducer\\userReducer.js":"9","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Status.js":"10","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Curriculum.js":"11","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Notice.js":"12","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Welcome.js":"13","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Professor.js":"14","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Timetable.js":"15","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Userquestion.js":"16","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Question.js":"17","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Bestqa.js":"18","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\DataModify.js":"19","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\components\\Menu.js":"20","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\components\\Footer.js":"21","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\components\\Header.js":"22","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\actions\\userAction.js":"23","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\actions\\types.js":"24","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Userquestionlist.js":"25","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\QuestionList.js":"26","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\DataModifyList.js":"27","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\utils\\axios.js":"28","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Adminpage.js":"29","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\utils\\dep.js":"30","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\ProfessorModify.js":"31","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\ProfessorAdd.js":"32","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\TimetableAdd.js":"33","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\TimetableModify.js":"34"},{"size":1076,"mtime":1607858755749,"results":"35","hashOfConfig":"36"},{"size":995,"mtime":1611558061154,"results":"37","hashOfConfig":"36"},{"size":5227,"mtime":1607858755756,"results":"38","hashOfConfig":"36"},{"size":161,"mtime":1607858755755,"results":"39","hashOfConfig":"36"},{"size":3139,"mtime":1611230952485,"results":"40","hashOfConfig":"36"},{"size":5167,"mtime":1611145341643,"results":"41","hashOfConfig":"36"},{"size":16260,"mtime":1611143033924,"results":"42","hashOfConfig":"36"},{"size":1188,"mtime":1607858755749,"results":"43","hashOfConfig":"36"},{"size":876,"mtime":1607858755756,"results":"44","hashOfConfig":"36"},{"size":7566,"mtime":1611825169611,"results":"45","hashOfConfig":"36"},{"size":5297,"mtime":1611825196210,"results":"46","hashOfConfig":"36"},{"size":5160,"mtime":1611825186258,"results":"47","hashOfConfig":"36"},{"size":6994,"mtime":1611825147130,"results":"48","hashOfConfig":"36"},{"size":1574,"mtime":1611820944414,"results":"49","hashOfConfig":"36"},{"size":1573,"mtime":1611639635728,"results":"50","hashOfConfig":"36"},{"size":4044,"mtime":1611926244566,"results":"51","hashOfConfig":"36"},{"size":7146,"mtime":1611926219949,"results":"52","hashOfConfig":"36"},{"size":4824,"mtime":1611926446589,"results":"53","hashOfConfig":"36"},{"size":4193,"mtime":1611926247811,"results":"54","hashOfConfig":"36"},{"size":4999,"mtime":1610618300769,"results":"55","hashOfConfig":"36"},{"size":1185,"mtime":1607858755747,"results":"56","hashOfConfig":"36"},{"size":3030,"mtime":1611388783498,"results":"57","hashOfConfig":"36"},{"size":2784,"mtime":1611388770938,"results":"58","hashOfConfig":"36"},{"size":351,"mtime":1607858755746,"results":"59","hashOfConfig":"36"},{"size":3074,"mtime":1611926308926,"results":"60","hashOfConfig":"36"},{"size":8165,"mtime":1611926331230,"results":"61","hashOfConfig":"36"},{"size":2986,"mtime":1611926348245,"results":"62","hashOfConfig":"36"},{"size":381,"mtime":1611237096699,"results":"63","hashOfConfig":"36"},{"size":2471,"mtime":1611414403806,"results":"64","hashOfConfig":"36"},{"size":284,"mtime":1611233041255,"results":"65","hashOfConfig":"36"},{"size":8602,"mtime":1611825994625,"results":"66","hashOfConfig":"36"},{"size":4072,"mtime":1611825096411,"results":"67","hashOfConfig":"36"},{"size":4613,"mtime":1611822817640,"results":"68","hashOfConfig":"36"},{"size":9324,"mtime":1611825970522,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"r246ep",{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"72"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"72"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"72"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"72"},"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\index.js",[],["160","161"],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\App.js",["162","163","164"],"import React, { Component, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Login from \"./pages/Login\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport Signup from \"./pages/Signup\";\r\nimport \"./App.css\";\r\nimport Auth from \"./hoc/auth\";\r\n\r\nconst Container = styled.div`\r\n  -ms-user-select: none;\r\n  -moz-user-select: -moz-none;\r\n  -khtml-user-select: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n`;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n          <Switch>\r\n            <Route path=\"/\" component={Login} exact />\r\n            <Route path=\"/signup\" component={Signup} exact />\r\n            <Route path=\"/main\" component={Auth(MainPage)} exact />\r\n          </Switch>\r\n        </Router>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\serviceWorker.js",[],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\reducer\\index.js",[],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\MainPage.js",["165","166","167","168","169","170","171","172","173","174","175"],"import React, { Component } from \"react\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Menu from \"../components/Menu\";\r\nimport Welcome from \"./Welcome\";\r\nimport Curriculum from \"./Curriculum\";\r\nimport Status from \"./Status\";\r\nimport Notice from \"./Notice\";\r\nimport Question from \"./Question\";\r\nimport Userquestion from \"./Userquestion\";\r\nimport Professor from \"./Professor\";\r\nimport Timetable from \"./Timetable\";\r\nimport Bestqa from \"./Bestqa\";\r\nimport Datamodify from \"./DataModify\";\r\nimport Adminpage from \"./Adminpage\";\r\nimport oc from \"open-color\";\r\nimport Auth from \"../hoc/auth\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 800px;\r\n  min-height: 800px;\r\n  margin-bottom: 3rem;\r\n  margin-top: 4rem;\r\n  padding-left: 1rem;\r\n  -ms-user-select: none;\r\n  -moz-user-select: -moz-none;\r\n  -khtml-user-select: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n`;\r\n\r\nconst MenuBar = styled.div`\r\n  width: 12rem;\r\n  height: 85%;\r\n  background-color: ${oc.gray[1]};\r\n  border-radius: 1rem;\r\n  position: fixed;\r\n  z-index: 2;\r\n  border: 4px groove ${oc.gray[4]};\r\n  \"&:hover\": {\r\n    background: \"#efefef\";\r\n  }\r\n  // @media (max-width: 767px) {\r\n  //     display:none;\r\n  // }\r\n`;\r\n\r\nconst Contents = styled.div`\r\n  width: 90%;\r\n  height: 85%;\r\n  min-height: 600px;\r\n  min-width: 800px;\r\n  margin: 2rem 2rem 1rem 13rem;\r\n  border-radius: 0.5rem;\r\n  background-color: ${oc.gray[1]};\r\n  border: 2px groove ${oc.gray[4]};\r\n`;\r\n\r\nconst MainPage = (props) => {\r\n  const userdata = props.data;\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <Container>\r\n        <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n          <MenuBar style={{ marginTop: \"2rem\" }}>\r\n            <Menu />\r\n          </MenuBar>\r\n          <Contents>\r\n            <Switch>\r\n              <Route path=\"/status\" component={Auth(Status)} exact />\r\n              <Route path=\"/question\" component={Question} exact />\r\n              <Route path=\"/userquestion\" component={Userquestion} exact />\r\n              <Route path=\"/curriculum\" component={Auth(Curriculum)} exact />\r\n              <Route path=\"/notice\" component={Auth(Notice)} exact />\r\n              <Route path=\"/professor\" component={Auth(Professor)} exact />\r\n              <Route path=\"/timetable\" component={Auth(Timetable)} exact />\r\n              <Route path=\"/bestqa\" component={Auth(Bestqa)} exact />\r\n              <Route path=\"/datamodify\" component={Auth(Datamodify)} exact />\r\n              <Route path=\"/main\" component={Auth(Welcome)} exact />\r\n              <Route path=\"/adminpage\" component={Adminpage} exact />\r\n            </Switch>\r\n          </Contents>\r\n        </Router>\r\n      </Container>\r\n      {/* <Footer/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Login.js",["176","177","178","179","180","181","182","183","184","185","186"],"import React, { Component, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { loginUser, authUser, loginSuccess } from \"../actions/userAction\";\r\nimport axios from \"axios\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst LoginForm = styled.div`\r\n  display: flex;\r\n  min-width: 800px;\r\n  min-height: 600px;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #a31432;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  font-size: 6rem;\r\n  letter-spacing: 1rem;\r\n  color: #a31432;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Whitespace = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 6rem;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-radius: 2rem;\r\n`;\r\n\r\nconst Login = (props) => {\r\n  const [_id, setId] = useState(\"\");\r\n  const [_password, setPassword] = useState(\"\");\r\n  const [_studentid, setStudentId] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const onLogin = (e) => {\r\n    localStorage.clear();\r\n    const body = {\r\n      userid: _id,\r\n      password: _password,\r\n    };\r\n\r\n    dispatch(loginUser(body))\r\n      .then((res) => {\r\n        console.log(res)\r\n        \r\n        if (res.status === 200) {\r\n          const accessToken = res.data.result[0].token;\r\n          dispatch(loginSuccess(accessToken));\r\n          dispatch(authUser()).then((res) => {\r\n            if (res) {\r\n              // res 추가해서 비동기적으로 실행되게 하기위함 (로그인 됬을 때 username 못불러오는 현상 해결)\r\n              props.history.push(\"/main\");\r\n            }\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"로그인 실패\",\r\n            text: res.data.message,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 2000,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          text: \"로그인이 실패 하였습니다.\",\r\n          title: \"로그인실패\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 2000,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <LoginForm>\r\n      <Whitespace>\r\n        <Logo style={{ marginBottom: \"3%\" }}>SYB ADMIN</Logo>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          onFinish={onLogin}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"id\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"ID를 입력해주세요\",\r\n              },\r\n            ]}\r\n            style={{ paddingBottom: \"0.5rem\" }}\r\n          >\r\n            <Input\r\n              prefix={\r\n                <UserOutlined\r\n                  className=\"site-form-item-icon\"\r\n                  style={{ paddingRight: \"0.5rem\" }}\r\n                />\r\n              }\r\n              onChange={onIdHandler}\r\n              placeholder=\"아이디\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 입력해주세요\",\r\n              },\r\n            ]}\r\n            style={{ paddingBottom: \"1rem\" }}\r\n          >\r\n            <Input\r\n              prefix={\r\n                <LockOutlined\r\n                  className=\"site-form-item-icon\"\r\n                  style={{ paddingRight: \"0.5rem\" }}\r\n                />\r\n              }\r\n              type=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              onChange={onPasswordHanlder}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                backgroundColor: \"#a31432\",\r\n                border: \"none\",\r\n                margin: \"0 1rem\",\r\n              }}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <Link to=\"/signup\" style={{ margin: \"0 1rem\" }}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                style={{ backgroundColor: \"#a31432\", border: \"none\" }}\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </Whitespace>\r\n    </LoginForm>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Signup.js",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202"],"import React, { Component, useState,useEffect } from \"react\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { registerUser } from \"../actions/userAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  AutoComplete,\r\n  Modal,\r\n} from \"antd\";\r\nimport { QuestionCircleOutlined, LeftOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  min-width: 800px;\r\n  min-height: 600px;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #a31432;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Whitespace = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 6rem;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-radius: 2rem;\r\n`;\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst Title = styled.div`\r\n  font-size: 3rem;\r\n  color: #a31432;\r\n  font-family: \"Rajdhani\";\r\n  margin-top: 5rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst Backwards = styled.div`\r\n  font-size: 2.8rem;\r\n  left: 7rem;\r\n  top: 3.5rem;\r\n  color: #a31432;\r\n  position: absolute;\r\n  &:hover {\r\n    color: ${oc.red[8]};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Signup = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [emailAuthform] = Form.useForm();\r\n  const [_id, setId] = useState(\"\");\r\n  const [_password, setPassword] = useState(\"\");\r\n  const [_department, setDepartment] = useState(\"\");\r\n  const [_email, setEmail] = useState(\"\");\r\n  const [_name, setName] = useState(\"\");\r\n  const [_phonenum, setPhonenum] = useState(\"\");\r\n  const [id_duplication, checkDup] = useState(false);\r\n  const [email_check, checkEmail] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [email_auth, setEmailAuth] = useState(0);\r\n  const [dep,setDep] = useState([]);\r\n  const sejongemail = \"@sejong.ac.kr\";\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    setEmailAuth(\"\");\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n    setEmailAuth(\"\");\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n    checkDup(false);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n  const onEmailHandler = (e) => {\r\n    setEmail(e.currentTarget.value);\r\n    checkEmail(false);\r\n  };\r\n  const onNameHandler = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const onPhoneHandler = (e) => {\r\n    setPhonenum(e.currentTarget.value);\r\n  };\r\n\r\n  const loadDep = () => {\r\n    axios\r\n      .get(\"https://sjswbot.site/dep\")\r\n      .then((res) => {\r\n        setDep(res.data.result);\r\n        console.log(dep);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"에러발생\")\r\n      });\r\n  }\r\n\r\n  const onEmailCheckSubmit = (e) => {\r\n    console.log({\r\n      email: _email,\r\n      authNumber: email_auth,\r\n    });\r\n    axios\r\n      .post(\"https://sjswbot.site/mail/verify\", {\r\n        email: _email,\r\n        authNumber: email_auth,\r\n      })\r\n      .then((res) => {\r\n        console.log(res)\r\n        if (res.status === 200) {\r\n          handleCancel();\r\n          setEmail(true);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            text: res.data.message,\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 2000,\r\n          });\r\n        } \r\n        else {\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            text: res.data.message,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"인증을 실패 하였습니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n\r\n  const onEmailCheckHandler = (e) => {\r\n    setEmailAuth(e.currentTarget.value);\r\n    console.log(email_auth);\r\n  };\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    setDepartment(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onEmailHadnler = (e) => {\r\n    if (_email.indexOf(sejongemail) !== _email.length - sejongemail.length) {\r\n      return Swal.fire({\r\n        icon: \"warning\",\r\n        text: \"세종대학교 조교 이메일(@sejong.ac.kr) 형식이 아닙니다\",\r\n        showConfirmButton: true,\r\n        width: \"auto\",\r\n      });\r\n    }\r\n    // 세종대 이메일 검사\r\n\r\n    setVisible(true);\r\n\r\n    axios\r\n      .post(\"https://sjswbot.site/mail/send\", { to: _email })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log({ to: _email });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"이메일이 발송되지 않았습니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n\r\n  const onDuplicationHadnler = (e) => {\r\n    if (_id.length === 0) {\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        text: \"아이디를 입력해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 1500,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"https://sjswbot.site/auth/idCheck\", {userid:_id})\r\n      .then((res) => {\r\n        console.log(res)\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            text: res.data.message,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n\r\n          checkDup(true);\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            text: res.data.message,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n\r\n          checkDup(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: error.response.data.message,\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n\r\n        checkDup(false);\r\n      });\r\n\r\n      checkDup(true);\r\n  };\r\n  const linktoMain = (e) => {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n\r\n    let body = {\r\n      email: _email,\r\n      username: _name,\r\n      password: _password,\r\n      userid: _id,\r\n      phoneNumber: _phonenum,\r\n      department: _department,\r\n    };\r\n\r\n    if (id_duplication === false) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"가입 실패\",\r\n        text: \"아이디 중복검사를 완료해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 2000,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (email_check === false) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"가입 실패\",\r\n        text: \"이메일 인증을 완료해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 2000,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    dispatch(registerUser(body))\r\n      .then((res) => {\r\n        if (res.status === 409) {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"가입 실패\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 2000,\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"가입 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 2000,\r\n          });\r\n          props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    loadDep()\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onSubmitHandler}\r\n        autoComplete=\"off\"\r\n        scrollToFirstError\r\n      >\r\n        <Container>\r\n          <Whitespace>\r\n            <Backwards>\r\n              <LeftOutlined onClick={linktoMain} />\r\n            </Backwards>\r\n            <Title>\r\n              <p>Sign up</p>\r\n            </Title>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"6rem\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n                name=\"id\"\r\n                label=\"아이디\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"아이디를 입력해주세요.\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input onChange={onIdHandler} />\r\n              </Form.Item>\r\n              <Button\r\n                style={{\r\n                  position: \"relatvive\",\r\n                  width: \"5rem\",\r\n                  fontSize: \"0.7rem\",\r\n                  marginLeft: \"1rem\",\r\n                }}\r\n                onClick={onDuplicationHadnler}\r\n              >\r\n                중복검사\r\n              </Button>\r\n            </div>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"password\"\r\n              label=\"비밀번호\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"패스워드를 입력해주세요.\",\r\n                },\r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input.Password onChange={onPasswordHanlder} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"confirm\"\r\n              label=\"비밀번호 확인\"\r\n              dependencies={[\"password\"]}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"패스워드를 확인해주세요\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\"비밀번호가 일치하지 않습니다!\");\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"name\"\r\n              label=\"이름\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"이름을 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input onChange={onNameHandler} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"department\"\r\n              label=\"학과\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"학과를 선택해주세요\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select onChange={onChangeSelectFunc}>\r\n                {dep.map(i => (i.department != \"관리자\") ? <Option value={i.idx}>{i.department}</Option>:null)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"6rem\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n                name=\"email\"\r\n                label=\"이메일\"\r\n                initialValue=\"\"\r\n                hasFeedback\r\n                rules={[\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"올바른 이메일이 아닙니다\",\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: \"이메일을 입력해주세요.\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                      if (\r\n                        value.indexOf(sejongemail) ===\r\n                          value.length - sejongemail.length ||\r\n                        !value\r\n                      ) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\"\");\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input\r\n                  onChange={onEmailHandler}\r\n                  placeholder=\"abc@sejong.ac.kr\"\r\n                />\r\n              </Form.Item>\r\n              <Button\r\n                style={{\r\n                  position: \"relatvive\",\r\n                  width: \"5rem\",\r\n                  fontSize: \"0.7rem\",\r\n                  marginLeft: \"1rem\",\r\n                }}\r\n                onClick={onEmailHadnler}\r\n              >\r\n                메일인증\r\n              </Button>\r\n            </div>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"phonenumber\"\r\n              label=\"휴대폰 번호\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"휴대폰 번호를 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input onChange={onPhoneHandler} />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{\r\n                  backgroundColor: \"#a31432\",\r\n                  border: \"none\",\r\n                  margin: \"0.5rem 1rem 0\",\r\n                }}\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </Form.Item>\r\n          </Whitespace>\r\n        </Container>\r\n      </Form>\r\n\r\n      <Modal\r\n        title=\"이메일 인증\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        maskClosable={false}\r\n        footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n        width=\"40rem\"\r\n      >\r\n        <Form\r\n          form={emailAuthform}\r\n          name=\"emailCheck\"\r\n          onFinish={onEmailCheckSubmit}\r\n          autoComplete=\"off\"\r\n          style={{ width: \"auto\" }}\r\n        >\r\n          <Form.Item\r\n            style={{ width: \"auto\" }}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"인증번호를 입력해주세요.\",\r\n              },\r\n            ]}\r\n          >\r\n            <p>{_email}로 인증번호를 보냈습니다.</p>\r\n\r\n            <Input\r\n              onChange={onEmailCheckHandler}\r\n              placeholder=\"인증번호를 입력해주세요\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n            <Button htmlType=\"submit\">인증하기</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\hoc\\auth.js",["203","204","205"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authUser } from \"../actions/userAction\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nexport default function (Component, option , adminRoute = null){\r\n    //option\r\n    //null => 아무나 출입 가능\r\n    //true => 로그인한 유저만 출입 가능\r\n    //false => 로그인한 유저는 출입 불가능\r\n\r\n    function AuthCheck(props){\r\n        const dispatch = useDispatch();\r\n        let _data={};\r\n        useEffect(() =>{\r\n        dispatch(authUser()).then((res) =>{\r\n            if(!res){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title:'로그인이 필요합니다',\r\n                    showConfirmButton: true,\r\n                    width:'25rem',\r\n                    timer: 2000,\r\n                }).then(props.history.push(\"/\"));\r\n            }\r\n            else{\r\n                _data = Object.assign(_data,res);\r\n            }\r\n        });\r\n    },[]);\r\n            return <Component data={_data}/>\r\n    }\r\n\r\n    return AuthCheck;\r\n}\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\reducer\\userReducer.js",["206","207"],"import { REGISTER_USER, LOGIN_USER,LOGOUT_USER,REGISTER_ERROR,AUTH_USER,LOGIN_SUCCESS,AUTH_SUCCESS,AUTH_FAILED } from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n  loggedIn : false,\r\n  user : {},\r\n}\r\n\r\nexport default function (state = defaultState, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return { ...state, loggedIn:false, user:{}};\r\n    case REGISTER_ERROR:\r\n        return { ...state, loggedIn:false, user:{}};\r\n    case LOGIN_USER:\r\n      return { ...state, loggedIn:true, user:{...action.payload} };\r\n    case LOGOUT_USER:\r\n      return { ...state, loggedIn:false, user:{} };\r\n    case AUTH_USER:\r\n      return {...state,loggedIn:true,user:{...action.payload}};\r\n    case AUTH_FAILED:\r\n      return {...state,loggedIn:false,user:{}};\r\n    case AUTH_SUCCESS:\r\n      return {...state,loggedIn:true};\r\n    default:\r\n      return state;\r\n  }\r\n}","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Status.js",["208","209","210","211","212","213","214"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Form, Select, Input, Button, Carousel, Image, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Status = () => {\r\n  const id = localStorage.getItem(\"username\");\r\n  //const [time,setTime] = React.useState(new Date().toLocaleString());\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const [data, setData] = React.useState({});\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://sjswbot.site/status/${department}`);\r\n    console.log(response);\r\n    let data = \"\";\r\n    if (response.data.result.status === 1) {\r\n      data = \"근무중\";\r\n    } else if (response.data.result.status === 2) {\r\n      data = \"휴가중\";\r\n    }\r\n    setData({\r\n      modifier: response.data.result.User.username,\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n      // 시간 안더해줘도 됨 (21-01-21)\r\n    });\r\n    form.setFieldsValue({\r\n      // department: response.data.result.department,\r\n      status: data,\r\n      comment: response.data.result.comment,\r\n      position: response.data.result.position,\r\n      phoneNumber: response.data.result.phoneNumber,\r\n      // time: time,\r\n    });\r\n  });\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        // setTime(new Date().toLocaleString());\r\n        console.log(formData);\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (data) => {\r\n    // data.modifier = localStorage.getItem(\"username\");\r\n    // 기존 modifier 넣어준 것 뺌\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n\r\n    if(data.status === \"근무중\"){\r\n      data.status = 1;\r\n    }\r\n    else if (data.status === \"휴가중\"){\r\n      data.status = 2;\r\n    }\r\n    \r\n    const response = await axios\r\n      .put(`https://sjswbot.site/status/${department}`, data, header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          }).then(()=>getData());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setDisable(false);\r\n  }, [form.data]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(department);\r\n    if (department === \"\") return;\r\n    getData();\r\n  }, [department]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{deptname} 사무실 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468848-ae633580-221f-11eb-9afd-762834755b54.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468849-af946280-221f-11eb-975b-d12318fc58ad.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468851-b0c58f80-221f-11eb-9868-c9392a9bf029.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468853-b1f6bc80-221f-11eb-9928-35e67889354c.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        {/* <Form.Item\r\n          label=\"학과\"\r\n          name=\"department\"\r\n          value={department}\r\n          style={{\r\n            width: \"0rem\",\r\n            height: \"0rem\",\r\n            visibility: \"hidden\",\r\n            margin: \"0\",\r\n          }}\r\n        >\r\n          <Input readOnly={true} />\r\n        </Form.Item> */}\r\n        {/* <Form.Item label=\"시간\" name=\"time\" value={time} style={{width:\"0rem\", height:\"0rem\" , visibility:\"hidden\", margin:\"0\"}}>\r\n          <Input readOnly=\"true\"/>\r\n        </Form.Item> */}\r\n        {/* <Form.Item\r\n          label=\"이름\"\r\n          name=\"modifier\"\r\n          value={id}\r\n          style={{\r\n            width: \"0rem\",\r\n            height: \"0rem\",\r\n            visibility: \"hidden\",\r\n            margin: \"0\",\r\n          }}\r\n        >\r\n          <Input readOnly={true} />\r\n        </Form.Item> */}\r\n        <Form.Item label=\"위치\" name=\"position\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"전화번호\" name=\"phoneNumber\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"조교 부재여부\" name=\"status\" required>\r\n          <Select>\r\n            <Option value=\"1\">근무중</Option>\r\n            <Option value=\"2\">휴가중</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"기타내용\"\r\n          name=\"comment\"\r\n          // rules={[\r\n          //   { required: true, messsage: \"코멘트르 입력해주세요\" },\r\n          // ]}\\\r\n          required\r\n        >\r\n          <TextArea disabled={isDisable} style={{ resize: \"none\" }} />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Curriculum.js",["215","216","217","218","219","220","221","222","223","224"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Curriculum = () => {\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const [data, setData] = React.useState([]);\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\r\n      `https://sjswbot.site/curriculum/${department}`\r\n    );\r\n    console.log(response);\r\n    setData({\r\n      modifier: response.data.result.User.username,\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      department: deptname,\r\n      link: response.data.result.link,\r\n    });\r\n  }, [department]);\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    console.log(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (formData) => {\r\n    // formData.modifier = localStorage.getItem(\"username\");\r\n    // formdata에 userid 추가\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n    \r\n    const response = await axios\r\n      .put(`https://sjswbot.site/curriculum/${department}`, formData , header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          }).then(()=>getData());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n    // eslint-disable-next-line\r\n  }, [department, getData]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{deptname} 교과과정 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468769-55939d00-221f-11eb-9ead-db3cce00f58c.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468774-575d6080-221f-11eb-97ad-fe254308449e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468778-59272400-221f-11eb-95f0-4df3d930c7bb.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"링크\" name=\"link\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Curriculum;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Notice.js",["225","226","227","228","229","230","231","232","233","234","235","236"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Notice = () => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const [data, setData] = React.useState([]);\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://sjswbot.site/notice/${department}`);\r\n    console.log(response);\r\n    setData({\r\n      modifier: response.data.result.User.username,\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      department: deptname,\r\n      link: response.data.result.link,\r\n    });\r\n  }, [department]);\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    console.log(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (formData) => {\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios\r\n      .put(`https://sjswbot.site/notice/${department}`, formData  , header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          }).then(()=>getData());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{deptname} 공지 링크 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468604-8f17d880-221e-11eb-90fc-43a1acad45c6.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468606-90e19c00-221e-11eb-9dde-738e963f0458.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468607-9212c900-221e-11eb-8763-c018eebf650f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"링크\" name=\"link\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Welcome.js",["237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Welcome = (props) => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const department = localStorage.getItem(\"department\");\r\n  const deptname = localStorage.getItem(\"dept_name\");\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const CancleModify = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n    \r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n    formData.modifier = name;\r\n    const response = await axios\r\n      .put(`https://sjswbot.site/assistantNotice/${department}`, formData,header,{ widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          }).then(()=>{\r\n            getData()\r\n            setVisible(false);\r\n          });\r\n        } else {\r\n          toast.error(\"서버와의 에러가 발생했습니다!\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const loadContent = () => {\r\n    if (visible === true) {\r\n      return (\r\n        <Form\r\n          form={form}\r\n          onFinish={confirmFunc}\r\n          onFieldsChange={onValuesChange}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"content\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            {/* <TextArea\r\n              style={{\r\n                fontSize: \"1rem\",\r\n                width: \"50rem\",\r\n                resize: \"none\",\r\n                padding: \"1rem\",\r\n                textAlign: \"center\",\r\n              }}\r\n              autoSize={true}\r\n              resize=\"none\"\r\n            /> */}\r\n            <ReactQuill theme=\"snow\" value={data.content} style={{width:\"50rem\",height:\"auto\"}}/>\r\n          </Form.Item>\r\n          <div style={{ marginBottom: \"1rem\" }} />\r\n          <Divider />\r\n          <p style={{ width: \"100%\", color: \"gray\", marginBottom: \"2rem\" }}>\r\n            수정 하시려면 수정하기 버튼을, 취소하려면 취소 버튼을 눌러주세요{\" \"}\r\n          </p>\r\n          <Form.Item >\r\n            <div style={{ display: \"inline-block\" ,float:\"right\"}}>\r\n              <Button htmlType=\"submit\" style={{ margin: \"0 1rem\" }}>\r\n                수정하기\r\n              </Button>\r\n              <Button onClick={CancleModify} style={{ margin: \"0 1rem\" }}>\r\n                취소\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          {/* <TextArea\r\n            value={data.content}\r\n            style={{\r\n              fontSize: \"1rem\",\r\n              width: \"50rem\",\r\n              resize: \"none\",\r\n              padding: \"1rem\",\r\n              textAlign: \"center\",\r\n            }}\r\n            bordered={false}\r\n            autoSize={true}\r\n            readOnly={true}\r\n          /> */}\r\n          <div dangerouslySetInnerHTML={{ __html: data.content }} style={{width:\"50rem\"}}></div>\r\n          <div style={{ marginBottom: \"1rem\" }} />\r\n          <Divider />\r\n          <p style={{ width: \"100%\", color: \"gray\" }}>\r\n            {data.modifier} 조교님\r\n            <br />({data.time})\r\n          </p>\r\n          <Button onClick={FormHandler} style={{float:\"right\"}}>수정하기</Button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.get(\r\n      `https://sjswbot.site/assistantNotice/${department}`, header, { widthCredentials: true }\r\n    );\r\n    console.log(response);\r\n    setData({\r\n      content: response.data.result.content,\r\n      modifier: response.data.result.User.username,\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      content: response.data.result.content,\r\n    });\r\n  }, [department]);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{deptname} 공지사항 </p>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          padding: \"2rem 2rem\",\r\n        }}\r\n      >\r\n        {loadContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Professor.js",["257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273"],"import React, { useEffect,useState} from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n  Tabs,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport ProfessorAdd from './ProfessorAdd';\r\nimport ProfessorModify from './ProfessorModify';\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst { TabPane } = Tabs;\r\n\r\nconst Professor = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>교수님 연구실 페이지</p>\r\n      </div>\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"교수님 데이터 추가\" key=\"1\">\r\n          <ProfessorAdd/>\r\n        </TabPane>\r\n        <TabPane tab=\"교수님 데이터 수정/삭제\" key=\"2\">\r\n          <ProfessorModify/>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Professor;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Timetable.js",["274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289"],"import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n  Tabs,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport TimetableAdd from './TimetableAdd';\r\nimport TimetableModify from './TimetableModify';\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst { TabPane } = Tabs;\r\n\r\nconst Timetable = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>강의실 시간표 수정 페이지</p>\r\n      </div>\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"강의실 시간표 추가\" key=\"1\">\r\n          <TimetableAdd/>\r\n        </TabPane>\r\n        <TabPane tab=\"강의실 시간표 수정/삭제\" key=\"2\">\r\n          <TimetableModify/>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timetable;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Userquestion.js",["290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314"],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Question.js",["315","316","317","318","319","320","321","322","323","324","325","326","327","328"],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Bestqa.js",["329","330","331","332","333","334"],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\DataModify.js",["335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360"],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\components\\Menu.js",["361","362","363","364","365","366"],"import React, { Component } from \"react\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  useHistory,\r\n  Switch,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport {\r\n  NotificationOutlined,\r\n  LoadingOutlined,\r\n  CalendarOutlined,\r\n  BarsOutlined,\r\n  AuditOutlined,\r\n  LayoutOutlined,\r\n  MessageOutlined,\r\n  BulbOutlined,\r\n  ClockCircleOutlined,\r\n  QuestionCircleOutlined,\r\n  WarningOutlined,\r\n  LockOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Divider } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport oc from \"open-color\";\r\n\r\nconst MenuContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 2rem;\r\n`;\r\n\r\nconst MenuContent = styled.div`\r\n  color: ${oc.gray[7]};\r\n  width: 11rem; // 클릭 박스 조정\r\n  height: 100%;\r\n  padding: 1rem 0;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst MenuItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 3rem;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  transition: all 0.2s;\r\n  &:hover {\r\n    background: ${oc.gray[3]};\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst Menu = () => {\r\n  let history = useHistory();\r\n  const name = localStorage.getItem(\"username\");\r\n  const ScrollTop = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <MenuContainer>\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/main\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <NotificationOutlined style={{ padding: \"0 1rem\" }} />\r\n            공지사항\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/question\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <BulbOutlined style={{ padding: \"0 1rem\" }} />\r\n            질문 추가 및 수정\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/userquestion\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <QuestionCircleOutlined style={{ padding: \"0 1rem\" }} />\r\n            유저들의 질문\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/datamodify\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <WarningOutlined style={{ padding: \"0 1rem\" }} />\r\n            데이터 수정 요청\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/status\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <ClockCircleOutlined style={{ padding: \"0 1rem\" }} />\r\n            학과 사무실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/curriculum\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <BarsOutlined style={{ padding: \"0 1rem\" }} />\r\n            교과과정\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/notice\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <CalendarOutlined style={{ padding: \"0 1rem\" }} />\r\n            학과공지\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/professor\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <AuditOutlined style={{ padding: \"0 1rem\" }} />\r\n            교수님 연구실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/timetable\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <LayoutOutlined style={{ padding: \"0 1rem\" }} />\r\n            강의실\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider style={{ margin: \"0\" }} />\r\n      <MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/bestqa\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <MessageOutlined style={{ padding: \"0 1rem\" }} />\r\n            자주 묻는 질문\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>\r\n      { name === (\"이종민\" || \"허균\" || \"홍은호\") ?(<MenuItem onClick={ScrollTop}>\r\n        <Link to=\"/adminpage\" style={{ textDecoration: \"none\" }}>\r\n          <MenuContent>\r\n            <LockOutlined style={{ padding: \"0 1rem\" }} />\r\n            관리자페이지\r\n          </MenuContent>\r\n        </Link>\r\n      </MenuItem>):null}\r\n    </MenuContainer>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\components\\Footer.js",["367","368","369","370","371","372"],"import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport oc from \"open-color\";\r\n\r\nconst Logo = styled.div`\r\n  font-size: 2rem;\r\n  letter-spacing: 3px;\r\n  color: white;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Positioner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${oc.gray[8]};\r\n  position: fixed;\r\n  height: 6.5%;\r\n  bottom: 0%;\r\n  width: 100%;\r\n  min-width: 800px;\r\n  z-index: 0;\r\n`;\r\n\r\nconst GradientBorder = styled.div`\r\n  height: 2px;\r\n  margin: 0rem 1rem 0 2rem;\r\n  border-radius: 5rem;\r\n  background: linear-gradient(to right, #a31432, #ffcccb);\r\n`;\r\n\r\nconst HeaderContents = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding-right: 3rem;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nconst Footer = ({ children }) => {\r\n  return (\r\n    <Positioner>\r\n      <HeaderContents>\r\n        <Logo>Footer TEST</Logo>\r\n        <Spacer />\r\n        <Logo>SYB</Logo>\r\n      </HeaderContents>\r\n    </Positioner>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\components\\Header.js",["373","374","375","376","377","378","379","380","381","382","383"],"import React, { Component, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutUser, authUser } from \"../actions/userAction\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst Logo = styled.div`\r\n  font-size: 2.5rem;\r\n  letter-spacing: 15px;\r\n  color: white;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Positioner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #a31432;\r\n  position: fixed;\r\n  top: 0px;\r\n  width: 100%;\r\n  min-width: 800px;\r\n  z-index: 3;\r\n`;\r\n\r\nconst Logout = styled.div`\r\n  font-size: 1.2rem;\r\n  letter-spacing: 3px;\r\n  color: black;\r\n  font-family: \"Rajdhani\";\r\n  &:hover {\r\n    color: ${oc.gray[6]};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst GradientBorder = styled.div`\r\n  height: 10 px;\r\n  background: linear-gradient(to right, black, white);\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n  background-color: white;\r\n  padding: 0 2rem;\r\n  height: 70%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  border-radius: 55px;\r\n  border: 3px solid ${oc.red[8]};\r\n`;\r\n\r\nconst HeaderContents = styled.div`\r\n  width: 100%;\r\n  height: 75px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0 2rem;\r\n  padding-right: 3rem;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nfunction Header(props) {\r\n  const dispatch = useDispatch();\r\n  const username = localStorage.getItem(\"username\");\r\n  const dept = localStorage.getItem(\"dept_name\");\r\n  const onClickHandler = () => {\r\n    dispatch(logoutUser());\r\n    localStorage.clear();\r\n    props.history.push(\"/\");\r\n  };\r\n  return (\r\n    <Positioner>\r\n      <HeaderContents>\r\n        <Logo>SYB ADMIN</Logo>\r\n        <Spacer />\r\n        <UserContainer>\r\n          <Logo\r\n            style={{\r\n              fontSize: \"1.2rem\",\r\n              letterSpacing: \"1px\",\r\n              paddingRight: \"3rem\",\r\n              fontFamily: \"Gothic A1\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            <UserOutlined\r\n              style={{\r\n                color: \"white\",\r\n                padding: \"5px\",\r\n                fontSize: \"1.5rem\",\r\n                marginRight: \"1rem\",\r\n                borderRadius: \"100%\",\r\n                backgroundColor: \"gray\",\r\n              }}\r\n            />\r\n            {dept}&emsp;\r\n            {username} 조교님\r\n          </Logo>\r\n          <Logout onClick={onClickHandler}>Logout</Logout>\r\n        </UserContainer>\r\n      </HeaderContents>\r\n      <GradientBorder />\r\n    </Positioner>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header); // withRouter 해야 'push'를 못찾는 에러 메세지 뜨지 않음\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\actions\\userAction.js",["384","385","386","387","388","389","390","391"],"import {\r\n  REGISTER_USER,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  AUTH_USER,\r\n  REGISTER_ERROR,\r\n  LOGIN_SUCCESS,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAILED,\r\n} from \"./types\";\r\nimport React, { Component, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { request } from \"../utils/axios\";\r\n\r\nexport function registerUser(dataToSubmit) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: REGISTER_USER,\r\n    });\r\n\r\n    return axios\r\n      .post(\"https://sjswbot.site/auth/signup\", dataToSubmit)\r\n      .then((response) => {\r\n        console.log(response);\r\n        return response;\r\n      }\r\n      )\r\n      .catch((error) => {\r\n        console.log(error);\r\n        return error.response;\r\n      })\r\n  };\r\n}\r\n\r\n// export function loginUser(dataToSubmit) {\r\n//   const data = request(\"post\", \"/auth/login\", dataToSubmit);\r\n//   return {\r\n//       type: LOGIN_USER,\r\n//       payload: data,\r\n//   };\r\n// }\r\n\r\nexport function loginUser(dataToSubmit) {\r\n  const uid = dataToSubmit.userid;\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_USER,\r\n      payload: uid,\r\n    });\r\n\r\n    return axios\r\n      .post(\"https://sjswbot.site/auth/login\", dataToSubmit)\r\n      .then((response) => response)\r\n      .catch((error) => error.response);\r\n  };\r\n}\r\n\r\nexport function loginSuccess(accessToken) {\r\n  localStorage.setItem(\"user_token\", accessToken);\r\n  //axios.defaults.headers.common['Authorization'] = accessToken;\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n    });\r\n  };\r\n}\r\n\r\nexport function logoutUser() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGOUT_USER,\r\n    });\r\n  };\r\n}\r\n\r\nexport function authUser(props) {\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(\"https://sjswbot.site/auth/check\", header, { widthCredentials: true })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: AUTH_SUCCESS,\r\n        });\r\n        let dept = \"\";\r\n        \r\n        axios\r\n        .get(\"https://sjswbot.site/dep\")\r\n        .then((res2) => {\r\n          localStorage.setItem(\"dept_name\",res2.data.result[res.data.result[0].department-1].department);\r\n        }) \r\n        localStorage.setItem(\"username\", res.data.result[0].user);\r\n        localStorage.setItem(\"department\", res.data.result[0].department);\r\n        localStorage.setItem(\"role\",res.data.result[0].role);\r\n        return res.data.result[0];\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch({\r\n          type: AUTH_FAILED,\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nfunction dep(num) {\r\n  return axios\r\n  .get(\"https://sjswbot.site/dep\")\r\n  .then((res) => res.data.result[num-1].department\r\n  )\r\n}","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\actions\\types.js",[],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Userquestionlist.js",["392","393","394","395","396","397","398","399","400","401","402","403"],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\QuestionList.js",["404","405","406","407","408","409","410","411","412"],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\DataModifyList.js",["413","414","415","416","417","418","419","420","421","422","423"],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\utils\\axios.js",[],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Adminpage.js",["424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst AdminPage = (props) => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const pageSize = parseInt(window.innerHeight / 50);\r\n  let count = 0;\r\n  const [size, setSize] = React.useState(0);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(1);\r\n  const num = data[0];\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n      <>\r\n      {name === (\"이종민\" || \"허균\" || \"홍은호\") ? (\r\n        <div\r\n        style={{\r\n            margin: \"3% 10%\",\r\n            padding: \"1% 0%\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            background: \"white\",\r\n            borderRadius: \"0.5rem\",\r\n            border: \"2px solid lightgray\",\r\n        }}\r\n        >\r\n        <div\r\n            style={{\r\n            textAlign: \"center\",\r\n            fontSize: \"30px\",\r\n            fontFamily: \"Gothic A1\",\r\n            }}\r\n        >\r\n            <p> 관리자 페이지 </p>\r\n        </div>\r\n        <div\r\n            style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            padding: \"2rem 2rem\",\r\n            }}\r\n        >\r\n            관리자페이지 입니다.\r\n        </div>\r\n        </div>\r\n      ):\r\n      <p>관리자만 접근 가능한 페이지 입니다.</p>\r\n      }\r\n      </>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\utils\\dep.js",["456"],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\ProfessorModify.js",["457","458","459","460","461","462"],"import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  notification,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n    notification[type]({\r\n      description: comment,\r\n      placement: \"bottomRight\",\r\n      duration: 2,\r\n      width: \"auto\",\r\n    });\r\n};\r\n\r\nconst ProfessorModify = () => {\r\n  const [list, setlist] = React.useState([]);\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = React.useState({});\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [nameCheck, setNameCheck] = React.useState(false);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  const onDeleteFunc = async () => {\r\n    if (nameCheck === false) {\r\n        return openNotification('error', '성함을 입력 후 search 버튼을 눌러주세요');\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios.delete(`https://sjswbot.site/professor/${inputValue}`, header, { widthCredentials: true })\r\n        .then(()=>\r\n        Swal.fire({\r\n            icon: \"success\",\r\n            title: \"삭제되었습니다.\",\r\n            showConfirmButton: false,\r\n            width: \"auto\",\r\n            timer: 1500,\r\n          }).then(()=>{\r\n            form.setFieldsValue({\r\n              classPosition: \"\",\r\n              phoneNumber: \"\",\r\n              email: \"\",\r\n            });\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (_data) => {\r\n    console.log(inputValue);\r\n    const response = await axios\r\n      .put(`https://sjswbot.site/professor/${inputValue}`, _data , header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정되었습니다.\",\r\n            showConfirmButton: false,\r\n            width: \"auto\",\r\n            timer: 1500,\r\n          }).then(()=>\r\n            onSearchFunc()\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        \r\n      });\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    if (nameCheck === false) {\r\n        return openNotification('error', '성함을 입력 후 search 버튼을 눌러주세요');\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChangeFunc = (name) => {\r\n    setNameCheck(false);\r\n    setInputValue(name);\r\n  };\r\n\r\n  const showModifier = () => {\r\n    return (\r\n      <p style={{ width: \"100%\", color: \"gray\" }}>\r\n        {data.modifier}\r\n        <br />\r\n        {data.time}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n\r\n    const response = await axios\r\n      .get(`https://sjswbot.site/professor/${inputValue}`)\r\n      .catch((error) => {\r\n      });\r\n    console.log(response);\r\n\r\n    if (!response.data.result) {\r\n      return openNotification('error', '존재하지 않는 이름입니다.');\r\n    }\r\n    openNotification('success','데이터를 성공적으로 불러왔습니다.');\r\n    setNameCheck(true);\r\n    setData({\r\n      modifier: response.data.result.User.username + \" 조교님\",\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      classPosition: response.data.result.classPosition,\r\n      phoneNumber: response.data.result.phoneNumber,\r\n      email: response.data.result.email,\r\n    });\r\n  }, []);\r\n\r\n  const onSearchFunc = async () => {\r\n    let name = inputValue;\r\n    if (name.length < 2) {\r\n        return openNotification('error', '존재하지 않는 이름입니다.');\r\n    }\r\n    const response = await axios\r\n      .get(`https://sjswbot.site/professor/${name}`)\r\n      .catch((error) => {\r\n      });\r\n\r\n    if (!response.data.result) {\r\n      return openNotification('error', '존재하지 않는 이름입니다.');\r\n    }\r\n    openNotification('success','데이터를 성공적으로 불러왔습니다.');\r\n    setNameCheck(true);\r\n    setData({\r\n      modifier: response.data.result.User.username + \" 조교님\",\r\n      time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      classPosition: response.data.result.classPosition,\r\n      phoneNumber: response.data.result.phoneNumber,\r\n      email: response.data.result.email,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let p_list = [];\r\n    axios.get(`https://sjswbot.site/professor/list`).then((res) => {\r\n    console.log(res.data.result);\r\n    res.data.result.map((v, i) => {\r\n        p_list.push({ value: v.name });\r\n    });\r\n    })\r\n    setlist(p_list);\r\n    console.log(p_list);\r\n  },[]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045727-22f9f380-25d5-11eb-8a36-a2135d9fb51d.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045910-5fc5ea80-25d5-11eb-8f68-7b071a52350e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045316-7cadee00-25d4-11eb-9b20-8c5bb4fbb247.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          margin: \"0 0 2rem 0\",\r\n          width: \"40rem\",\r\n          height:\"auto\",\r\n        }}\r\n      >\r\n        <p style={{ width: \"5rem\" }}>성함:</p>\r\n        <AutoComplete\r\n          style={{ width: \"100%\", marginRight: \"1rem\"}}\r\n          options={list}\r\n          placeholder=\"교수님 성함을 입력해주세요\"\r\n          filterOption={(input, option) => option.value.indexOf(input) === 0}\r\n          onChange={onChangeFunc}\r\n        />\r\n        {/* <Input style={{ margin: \"0 4% 0 0\" }} onChange={onChangeFunc} /> */}\r\n        <Button icon={<SearchOutlined />} onClick={onSearchFunc}>\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Form\r\n          form={form}\r\n          onFinish={confirmFunc}\r\n          autoComplete=\"off\"\r\n          style={{ width: \"40rem\" }}\r\n        >\r\n          {\r\n            nameCheck === true\r\n            ? <>\r\n              <Form.Item label=\"연구실\" name=\"classPosition\" required>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item label=\"전화번호\" name=\"phoneNumber\" required>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item label=\"이메일\" name=\"email\" required>\r\n                <Input />\r\n              </Form.Item>\r\n              \r\n            </>\r\n            :null\r\n          }\r\n          <Divider />\r\n          {\r\n            nameCheck === true\r\n            ?showModifier()\r\n            :null\r\n          }\r\n          <Form.Item>\r\n              <center>\r\n                  <Button icon={<CloudUploadOutlined />} htmlType=\"submit\" style={{float:'left', marginLeft:'12rem'}}>\r\n                      수정하기\r\n                  </Button>\r\n                  <Button icon={<CloudUploadOutlined />} onClick={onDeleteFunc} style={{float:'right',marginRight:'12rem'}}>\r\n                      삭제하기\r\n                  </Button>\r\n              </center>\r\n          </Form.Item>\r\n        </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfessorModify;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\ProfessorAdd.js",["463","464","465","466","467","468","469","470","471","472","473"],"import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  notification,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 2,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst ProfessorAdd = () => {\r\n  const [form] = Form.useForm();\r\n  const [data, getData] = React.useState({});\r\n  const onFinishFunc = async (_data) => {\r\n    const token = localStorage.getItem(\"user_token\");\r\n    const header = {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    };\r\n\r\n    console.log(_data);\r\n\r\n    const response = await axios\r\n      .post(`https://sjswbot.site/professor`, _data , header, { widthCredentials: true })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: `등록되었습니다.`,\r\n            showConfirmButton: false,\r\n            width: \"auto\",\r\n            timer: 1500,\r\n          }).then(()=>{\r\n            form.setFieldsValue({\r\n              name:\"\",\r\n              classPosition:\"\",\r\n              phoneNumber:\"\",\r\n              email:\"\",\r\n            });\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n        name:\"\",\r\n        classPosition:\"\",\r\n        phoneNumber:\"\",\r\n        email:\"\",\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045727-22f9f380-25d5-11eb-8a36-a2135d9fb51d.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045910-5fc5ea80-25d5-11eb-8f68-7b071a52350e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045316-7cadee00-25d4-11eb-9b20-8c5bb4fbb247.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={onFinishFunc}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"성함\" name=\"name\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"연구실\" name=\"classPosition\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"전화번호\" name=\"phoneNumber\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"이메일\" name=\"email\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item colon={false}>\r\n            <center>\r\n                <Button htmlType=\"submit\">\r\n                    등록하기\r\n                </Button>\r\n            </center>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfessorAdd;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\TimetableAdd.js",["474","475","476","477","478","479","480","481","482","483","484"],"import React, { useEffect , useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  notification,\r\n  Input,\r\n  message,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Upload,\r\n  Divider,\r\n} from \"antd\";\r\nimport ImageUploader from 'react-images-upload';\r\nimport { SearchOutlined,UploadOutlined } from \"@ant-design/icons\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 2,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst TimetableAdd = () => {\r\n  const [form] = Form.useForm();\r\n  const [data, getData] = useState({});\r\n  const [fileList, setFileList] = useState([]);\r\n  const [classname,setClassname] = useState(\"\");\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n  const meta = {\r\n    title:'title 1',\r\n    contents: 'contents 1',\r\n  }\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('img',fileList[0]);\r\n    // fileList.forEach(file => formData.append('img',file));\r\n    formData.classname=classname;\r\n\r\n    for(let key in meta) {\r\n      formData.append(key,meta[key]);\r\n    }\r\n    console.log(formData);\r\n    await axios\r\n      .post(`https://sjswbot.site/timetable/${classname}`, formData , header , { widthCredentials: true })\r\n      .then((res)=>{\r\n        if(res.status === 200){\r\n            return Swal.fire({\r\n              icon: \"success\",\r\n              title: `등록되었습니다.`,\r\n              showConfirmButton: false,\r\n              width: \"auto\",\r\n              timer: 1500,\r\n            }).then(()=>{\r\n              form.setFieldsValue({\r\n                classname:\"\",\r\n              });\r\n            });\r\n          }\r\n\r\n      })\r\n      .catch((err) => {\r\n        openNotification('error','서버와의 에러가 발생했습니다.');\r\n      });\r\n  }\r\n\r\n  const nameHandler = (e) => {\r\n    setClassname(e.target.value);\r\n  }\r\n\r\n  const showModifier = () => {\r\n    return (\r\n      <div style={{ width: \"100%\", color: \"gray\" }}>\r\n        {data.modifier}\r\n        <br />\r\n        {data.time}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n        classname:\"\",\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045727-22f9f380-25d5-11eb-8a36-a2135d9fb51d.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045910-5fc5ea80-25d5-11eb-8f68-7b071a52350e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045316-7cadee00-25d4-11eb-9b20-8c5bb4fbb247.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={handleUpload}\r\n        autoComplete=\"off\"\r\n        initialValues = {{img:fileList}}\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"강의실\" name=\"classname\" required>\r\n          <Input onChange={nameHandler} />\r\n        </Form.Item>\r\n        <Form.Item \r\n          label=\"시간표\" \r\n          name=\"img\" \r\n          required\r\n        >\r\n          <ImageUploader\r\n                withIcon={true}\r\n                withPreview={true}\r\n                buttonText='이미지를 업로드해주세요'\r\n                onChange = {(pictureFiles,pictureDataURLs)=>setFileList(pictureFiles)}\r\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                maxFileSize={5242880}\r\n                singleImage\r\n          />\r\n        </Form.Item>\r\n        <Divider />\r\n        {showModifier()}\r\n        <Form.Item colon={false}>\r\n            <center>\r\n                <Button htmlType=\"submit\">\r\n                    등록하기\r\n                </Button>\r\n            </center>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimetableAdd;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\TimetableModify.js",["485","486","487","488","489","490","491","492"],"import React, { useEffect ,useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  notification,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport ImageUploader from 'react-images-upload';\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { getDefaultNormalizer } from \"@testing-library/react\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst openNotification = (type,comment) => {\r\n  notification[type]({\r\n    description: comment,\r\n    placement: \"bottomRight\",\r\n    duration: 2,\r\n    width: \"auto\",\r\n  });\r\n};\r\n\r\nconst TimetableModify = () => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const [list, setlist] = useState([]);\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState({});\r\n  const [fileList, setFileList] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [nameCheck, setNameCheck] = useState(false);\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `${token}`,\r\n    },\r\n  };\r\n\r\n  const meta = {\r\n    title:'title 1',\r\n    contents: 'contents 1',\r\n  }\r\n\r\n  const onDeleteFunc = async () => {\r\n    if (nameCheck === false) {\r\n        return openNotification('error', '강의실을 입력 후 Search 버튼을 눌러주세요');\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios.delete(`https://sjswbot.site/timetable/${inputValue}`, header, { widthCredentials: true })\r\n        .then(()=>\r\n        Swal.fire({\r\n            icon: \"success\",\r\n            title: \"삭제되었습니다.\",\r\n            showConfirmButton: false,\r\n            width: \"auto\",\r\n            timer: 1500,\r\n          }).then(()=>{\r\n            setInputValue(\"\");\r\n            setData([]);\r\n            setNameCheck(false);\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('img',fileList[0]);\r\n    // fileList.forEach(file => formData.append('img',file));\r\n\r\n    for(let key in meta) {\r\n      formData.append(key,meta[key]);\r\n    }\r\n    console.log(formData);\r\n    await axios\r\n      .put(`https://sjswbot.site/timetable/${inputValue}`, formData , header , { widthCredentials: true })\r\n      .then((res)=>{\r\n        if(res.status === 200){\r\n            return Swal.fire({\r\n              icon: \"success\",\r\n              title: `등록되었습니다.`,\r\n              showConfirmButton: false,\r\n              width: \"auto\",\r\n              timer: 1500,\r\n            }).then(()=>{\r\n              onSearchFunc();\r\n            });\r\n          }\r\n      })\r\n      .catch((err) => {\r\n        openNotification('error','서버와의 에러가 발생했습니다.');\r\n      });\r\n  }\r\n\r\n  const confirmFunc = (formData) => {\r\n    if (nameCheck === false) {\r\n      return openNotification('error', '강의실을 입력 후 Search 버튼을 눌러주세요');\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        handleUpload();\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChangeFunc = (name) => {\r\n    setNameCheck(false);\r\n    setInputValue(name);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios\r\n    .get(`https://sjswbot.site/timetable/${inputValue}`)\r\n    .catch((error) => {\r\n      openNotification('error', '서버와의 에러가 발생했습니다.');\r\n    });\r\n\r\n    if (!response.data.result) {\r\n      return openNotification('error', '존재하지 않는 강의실 입니다.');\r\n    } else {\r\n      openNotification('success', '강의실 정보를 성공적으로 불러왔습니다.');\r\n      setNameCheck(true);\r\n      setData({\r\n        modifier: response.data.result.User.username + \" 조교님\",\r\n        time: moment(response.data.result.updatedAt).format(\"LLL\"),\r\n        link: response.data.result.link,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onSearchFunc = async () => {\r\n    let value = inputValue.replace(/(\\s*)/g, \"\"); // 띄어쓰기 제거\r\n    if (value.length < 1) {\r\n      return openNotification('error', '강의실을 입력 후 Search 버튼을 눌러주세요');\r\n    }\r\n    const response = await axios\r\n      .get(`https://sjswbot.site/timetable/${value}`)\r\n      .catch((error) => {\r\n        openNotification('error', '서버와의 에러가 발생했습니다.');\r\n      });\r\n\r\n    console.log(response);\r\n    if (!response.data.result) {\r\n      return openNotification('error', '존재하지 않는 강의실 입니다.');\r\n    } else {\r\n      openNotification('success', '강의실 정보를 성공적으로 불러왔습니다.');\r\n      setNameCheck(true);\r\n      setData({\r\n        modifier: response.data.result.User.username + \" 조교님\",\r\n        time:\r\n        \"(\" + moment(response.data.result.time).format(\"LLL\") + \")\",\r\n        link: response.data.result.link,\r\n      });\r\n    }\r\n    // getData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let p_list = [];\r\n    axios.get(`https://sjswbot.site/timetable/list`).then((res) => {\r\n    console.log(res.data.result);\r\n    res.data.result.map((v, i) => {\r\n        p_list.push({ value: v.classname });\r\n    });\r\n    })\r\n    setlist(p_list);\r\n    console.log(p_list);\r\n  },[]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046546-3eb1c980-25d6-11eb-91d1-9e65182a72cb.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046550-3fe2f680-25d6-11eb-8f35-49df97a88419.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046554-41142380-25d6-11eb-8be4-b10796d051f3.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          margin: \"0 0 2rem 0\",\r\n          width: \"40rem\",\r\n        }}\r\n      >\r\n        <p style={{ width: \"6rem\" }}>강의실:</p>\r\n        <AutoComplete\r\n          name=\"classname\"\r\n          style={{ width: \"100%\", marginRight: \"1rem\" }}\r\n          options={list}\r\n          placeholder=\"강의실을 입력해주세요\"\r\n          filterOption={(input, option) => option.value.indexOf(input) !== -1}\r\n          onChange={onChangeFunc}\r\n        />\r\n        <Button icon={<SearchOutlined />} onClick={onSearchFunc}>\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        {\r\n          data.link?\r\n          <Form.Item\r\n            label = \"현재 시간표\"\r\n          >\r\n            <Image src={\"https://sjswbot.site\"+data.link} style={{maxWidth:\"40rem\"}}></Image>\r\n          </Form.Item>\r\n          :null\r\n        }\r\n        {\r\n          data.link?\r\n          <Form.Item \r\n            label=\"수정 시간표\" \r\n            name=\"img\" \r\n          >\r\n            <ImageUploader\r\n                  withIcon={true}\r\n                  withPreview={true}\r\n                  buttonText='이미지를 업로드해주세요'\r\n                  onChange = {(pictureFiles,pictureDataURLs)=>setFileList(pictureFiles)}\r\n                  imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                  maxFileSize={5242880}\r\n                  singleImage\r\n            />\r\n          </Form.Item>\r\n          :null\r\n        }   \r\n\r\n        <Divider />\r\n        {\r\n          data.modifier\r\n          ?<p style={{ width: \"100%\", color: \"gray\",cursor:\"pointer\" }}>\r\n            {data.modifier}\r\n            <br />\r\n            {data.time}\r\n          </p>\r\n          :null\r\n        }\r\n        <Form.Item style={{margin:'3rem 0 0'}}>\r\n            <center>\r\n                <Button icon={<CloudUploadOutlined />} htmlType=\"submit\" style={{float:'left', marginLeft:'12rem'}}>\r\n                    수정하기\r\n                </Button>\r\n                <Button icon={<CloudUploadOutlined />} onClick={onDeleteFunc} style={{float:'right',marginRight:'12rem'}}>\r\n                    삭제하기\r\n                </Button>\r\n            </center>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimetableModify;\r\n",{"ruleId":"493","replacedBy":"494"},{"ruleId":"495","replacedBy":"496"},{"ruleId":"497","severity":1,"message":"498","line":1,"column":28,"nodeType":"499","messageId":"500","endLine":1,"endColumn":36},{"ruleId":"497","severity":1,"message":"501","line":3,"column":3,"nodeType":"499","messageId":"500","endLine":3,"endColumn":7},{"ruleId":"497","severity":1,"message":"502","line":6,"column":3,"nodeType":"499","messageId":"500","endLine":6,"endColumn":13},{"ruleId":"497","severity":1,"message":"503","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":26},{"ruleId":"497","severity":1,"message":"501","line":2,"column":10,"nodeType":"499","messageId":"500","endLine":2,"endColumn":14},{"ruleId":"497","severity":1,"message":"504","line":4,"column":3,"nodeType":"499","messageId":"500","endLine":4,"endColumn":15},{"ruleId":"497","severity":1,"message":"505","line":5,"column":3,"nodeType":"499","messageId":"500","endLine":5,"endColumn":7},{"ruleId":"497","severity":1,"message":"506","line":6,"column":3,"nodeType":"499","messageId":"500","endLine":6,"endColumn":9},{"ruleId":"497","severity":1,"message":"507","line":7,"column":3,"nodeType":"499","messageId":"500","endLine":7,"endColumn":8},{"ruleId":"497","severity":1,"message":"508","line":8,"column":3,"nodeType":"499","messageId":"500","endLine":8,"endColumn":9},{"ruleId":"497","severity":1,"message":"509","line":9,"column":3,"nodeType":"499","messageId":"500","endLine":9,"endColumn":11},{"ruleId":"497","severity":1,"message":"510","line":10,"column":3,"nodeType":"499","messageId":"500","endLine":10,"endColumn":8},{"ruleId":"497","severity":1,"message":"511","line":14,"column":8,"nodeType":"499","messageId":"500","endLine":14,"endColumn":14},{"ruleId":"497","severity":1,"message":"512","line":76,"column":9,"nodeType":"499","messageId":"500","endLine":76,"endColumn":17},{"ruleId":"497","severity":1,"message":"503","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":26},{"ruleId":"497","severity":1,"message":"513","line":4,"column":3,"nodeType":"499","messageId":"500","endLine":4,"endColumn":11},{"ruleId":"497","severity":1,"message":"514","line":5,"column":3,"nodeType":"499","messageId":"500","endLine":5,"endColumn":8},{"ruleId":"497","severity":1,"message":"515","line":6,"column":3,"nodeType":"499","messageId":"500","endLine":6,"endColumn":9},{"ruleId":"497","severity":1,"message":"516","line":7,"column":20,"nodeType":"499","messageId":"500","endLine":7,"endColumn":26},{"ruleId":"497","severity":1,"message":"517","line":11,"column":31,"nodeType":"499","messageId":"500","endLine":11,"endColumn":39},{"ruleId":"497","severity":1,"message":"518","line":14,"column":8,"nodeType":"499","messageId":"500","endLine":14,"endColumn":13},{"ruleId":"497","severity":1,"message":"519","line":15,"column":8,"nodeType":"499","messageId":"500","endLine":15,"endColumn":10},{"ruleId":"497","severity":1,"message":"520","line":19,"column":7,"nodeType":"499","messageId":"500","endLine":19,"endColumn":13},{"ruleId":"497","severity":1,"message":"521","line":55,"column":10,"nodeType":"499","messageId":"500","endLine":55,"endColumn":20},{"ruleId":"497","severity":1,"message":"522","line":55,"column":22,"nodeType":"499","messageId":"500","endLine":55,"endColumn":34},{"ruleId":"497","severity":1,"message":"503","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":26},{"ruleId":"497","severity":1,"message":"501","line":2,"column":10,"nodeType":"499","messageId":"500","endLine":2,"endColumn":14},{"ruleId":"497","severity":1,"message":"514","line":2,"column":16,"nodeType":"499","messageId":"500","endLine":2,"endColumn":21},{"ruleId":"497","severity":1,"message":"515","line":2,"column":23,"nodeType":"499","messageId":"500","endLine":2,"endColumn":29},{"ruleId":"497","severity":1,"message":"516","line":2,"column":48,"nodeType":"499","messageId":"500","endLine":2,"endColumn":54},{"ruleId":"497","severity":1,"message":"523","line":8,"column":3,"nodeType":"499","messageId":"500","endLine":8,"endColumn":10},{"ruleId":"497","severity":1,"message":"524","line":9,"column":3,"nodeType":"499","messageId":"500","endLine":9,"endColumn":11},{"ruleId":"497","severity":1,"message":"525","line":11,"column":3,"nodeType":"499","messageId":"500","endLine":11,"endColumn":6},{"ruleId":"497","severity":1,"message":"526","line":12,"column":3,"nodeType":"499","messageId":"500","endLine":12,"endColumn":6},{"ruleId":"497","severity":1,"message":"517","line":13,"column":3,"nodeType":"499","messageId":"500","endLine":13,"endColumn":11},{"ruleId":"497","severity":1,"message":"527","line":18,"column":10,"nodeType":"499","messageId":"500","endLine":18,"endColumn":32},{"ruleId":"497","severity":1,"message":"520","line":25,"column":7,"nodeType":"499","messageId":"500","endLine":25,"endColumn":13},{"ruleId":"497","severity":1,"message":"528","line":51,"column":7,"nodeType":"499","messageId":"500","endLine":51,"endColumn":25},{"ruleId":"529","severity":1,"message":"530","line":207,"column":6,"nodeType":"531","endLine":207,"endColumn":8,"suggestions":"532"},{"ruleId":"529","severity":1,"message":"533","line":363,"column":5,"nodeType":"531","endLine":363,"endColumn":7,"suggestions":"534"},{"ruleId":"535","severity":1,"message":"536","line":483,"column":45,"nodeType":"537","messageId":"538","endLine":483,"endColumn":47},{"ruleId":"497","severity":1,"message":"520","line":7,"column":7,"nodeType":"499","messageId":"500","endLine":7,"endColumn":13},{"ruleId":"539","severity":1,"message":"540","line":9,"column":1,"nodeType":"541","endLine":38,"endColumn":2},{"ruleId":"529","severity":1,"message":"542","line":30,"column":25,"nodeType":"543","endLine":30,"endColumn":49},{"ruleId":"497","severity":1,"message":"544","line":1,"column":73,"nodeType":"499","messageId":"500","endLine":1,"endColumn":86},{"ruleId":"539","severity":1,"message":"540","line":8,"column":1,"nodeType":"541","endLine":27,"endColumn":2},{"ruleId":"497","severity":1,"message":"545","line":5,"column":8,"nodeType":"499","messageId":"500","endLine":5,"endColumn":14},{"ruleId":"497","severity":1,"message":"546","line":7,"column":10,"nodeType":"499","messageId":"500","endLine":7,"endColumn":22},{"ruleId":"497","severity":1,"message":"520","line":13,"column":7,"nodeType":"499","messageId":"500","endLine":13,"endColumn":13},{"ruleId":"497","severity":1,"message":"547","line":19,"column":9,"nodeType":"499","messageId":"500","endLine":19,"endColumn":11},{"ruleId":"529","severity":1,"message":"548","line":26,"column":19,"nodeType":"549","endLine":26,"endColumn":36},{"ruleId":"497","severity":1,"message":"550","line":89,"column":11,"nodeType":"499","messageId":"500","endLine":89,"endColumn":19},{"ruleId":"529","severity":1,"message":"551","line":115,"column":6,"nodeType":"531","endLine":115,"endColumn":18,"suggestions":"552"},{"ruleId":"497","severity":1,"message":"504","line":5,"column":3,"nodeType":"499","messageId":"500","endLine":5,"endColumn":15},{"ruleId":"497","severity":1,"message":"520","line":20,"column":7,"nodeType":"499","messageId":"500","endLine":20,"endColumn":13},{"ruleId":"497","severity":1,"message":"553","line":22,"column":7,"nodeType":"499","messageId":"500","endLine":22,"endColumn":13},{"ruleId":"497","severity":1,"message":"554","line":23,"column":9,"nodeType":"499","messageId":"500","endLine":23,"endColumn":17},{"ruleId":"497","severity":1,"message":"555","line":30,"column":10,"nodeType":"499","messageId":"500","endLine":30,"endColumn":19},{"ruleId":"497","severity":1,"message":"556","line":30,"column":21,"nodeType":"499","messageId":"500","endLine":30,"endColumn":31},{"ruleId":"529","severity":1,"message":"557","line":45,"column":6,"nodeType":"531","endLine":45,"endColumn":18,"suggestions":"558"},{"ruleId":"497","severity":1,"message":"559","line":47,"column":9,"nodeType":"499","messageId":"500","endLine":47,"endColumn":27},{"ruleId":"529","severity":1,"message":"530","line":49,"column":6,"nodeType":"531","endLine":49,"endColumn":8,"suggestions":"560"},{"ruleId":"497","severity":1,"message":"550","line":81,"column":11,"nodeType":"499","messageId":"500","endLine":81,"endColumn":19},{"ruleId":"497","severity":1,"message":"504","line":5,"column":3,"nodeType":"499","messageId":"500","endLine":5,"endColumn":15},{"ruleId":"497","severity":1,"message":"520","line":20,"column":7,"nodeType":"499","messageId":"500","endLine":20,"endColumn":13},{"ruleId":"497","severity":1,"message":"553","line":22,"column":7,"nodeType":"499","messageId":"500","endLine":22,"endColumn":13},{"ruleId":"497","severity":1,"message":"554","line":23,"column":9,"nodeType":"499","messageId":"500","endLine":23,"endColumn":17},{"ruleId":"497","severity":1,"message":"561","line":26,"column":9,"nodeType":"499","messageId":"500","endLine":26,"endColumn":13},{"ruleId":"497","severity":1,"message":"555","line":31,"column":10,"nodeType":"499","messageId":"500","endLine":31,"endColumn":19},{"ruleId":"497","severity":1,"message":"556","line":31,"column":21,"nodeType":"499","messageId":"500","endLine":31,"endColumn":31},{"ruleId":"529","severity":1,"message":"557","line":44,"column":6,"nodeType":"531","endLine":44,"endColumn":18,"suggestions":"562"},{"ruleId":"497","severity":1,"message":"559","line":46,"column":9,"nodeType":"499","messageId":"500","endLine":46,"endColumn":27},{"ruleId":"529","severity":1,"message":"530","line":48,"column":6,"nodeType":"531","endLine":48,"endColumn":8,"suggestions":"563"},{"ruleId":"497","severity":1,"message":"550","line":78,"column":11,"nodeType":"499","messageId":"500","endLine":78,"endColumn":19},{"ruleId":"529","severity":1,"message":"551","line":98,"column":6,"nodeType":"531","endLine":98,"endColumn":8,"suggestions":"564"},{"ruleId":"497","severity":1,"message":"525","line":8,"column":3,"nodeType":"499","messageId":"500","endLine":8,"endColumn":6},{"ruleId":"497","severity":1,"message":"526","line":9,"column":3,"nodeType":"499","messageId":"500","endLine":9,"endColumn":6},{"ruleId":"497","severity":1,"message":"565","line":11,"column":3,"nodeType":"499","messageId":"500","endLine":11,"endColumn":8},{"ruleId":"497","severity":1,"message":"566","line":12,"column":3,"nodeType":"499","messageId":"500","endLine":12,"endColumn":13},{"ruleId":"497","severity":1,"message":"510","line":13,"column":3,"nodeType":"499","messageId":"500","endLine":13,"endColumn":8},{"ruleId":"497","severity":1,"message":"509","line":14,"column":3,"nodeType":"499","messageId":"500","endLine":14,"endColumn":11},{"ruleId":"497","severity":1,"message":"545","line":19,"column":8,"nodeType":"499","messageId":"500","endLine":19,"endColumn":14},{"ruleId":"497","severity":1,"message":"567","line":20,"column":10,"nodeType":"499","messageId":"500","endLine":20,"endColumn":24},{"ruleId":"497","severity":1,"message":"546","line":21,"column":10,"nodeType":"499","messageId":"500","endLine":21,"endColumn":22},{"ruleId":"497","severity":1,"message":"568","line":23,"column":10,"nodeType":"499","messageId":"500","endLine":23,"endColumn":29},{"ruleId":"497","severity":1,"message":"569","line":23,"column":31,"nodeType":"499","messageId":"500","endLine":23,"endColumn":46},{"ruleId":"497","severity":1,"message":"520","line":27,"column":7,"nodeType":"499","messageId":"500","endLine":27,"endColumn":13},{"ruleId":"497","severity":1,"message":"553","line":29,"column":7,"nodeType":"499","messageId":"500","endLine":29,"endColumn":13},{"ruleId":"497","severity":1,"message":"554","line":30,"column":9,"nodeType":"499","messageId":"500","endLine":30,"endColumn":17},{"ruleId":"497","severity":1,"message":"570","line":60,"column":9,"nodeType":"499","messageId":"500","endLine":60,"endColumn":17},{"ruleId":"497","severity":1,"message":"571","line":64,"column":9,"nodeType":"499","messageId":"500","endLine":64,"endColumn":21},{"ruleId":"572","severity":1,"message":"573","line":82,"column":52,"nodeType":"537","messageId":"574","endLine":82,"endColumn":65},{"ruleId":"497","severity":1,"message":"550","line":87,"column":11,"nodeType":"499","messageId":"500","endLine":87,"endColumn":19},{"ruleId":"529","severity":1,"message":"530","line":213,"column":6,"nodeType":"531","endLine":213,"endColumn":18,"suggestions":"575"},{"ruleId":"529","severity":1,"message":"551","line":217,"column":6,"nodeType":"531","endLine":217,"endColumn":8,"suggestions":"576"},{"ruleId":"497","severity":1,"message":"577","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":26},{"ruleId":"497","severity":1,"message":"498","line":1,"column":27,"nodeType":"499","messageId":"500","endLine":1,"endColumn":35},{"ruleId":"497","severity":1,"message":"578","line":2,"column":8,"nodeType":"499","messageId":"500","endLine":2,"endColumn":14},{"ruleId":"497","severity":1,"message":"518","line":3,"column":8,"nodeType":"499","messageId":"500","endLine":3,"endColumn":13},{"ruleId":"497","severity":1,"message":"504","line":5,"column":3,"nodeType":"499","messageId":"500","endLine":5,"endColumn":15},{"ruleId":"497","severity":1,"message":"505","line":6,"column":3,"nodeType":"499","messageId":"500","endLine":6,"endColumn":7},{"ruleId":"497","severity":1,"message":"506","line":7,"column":3,"nodeType":"499","messageId":"500","endLine":7,"endColumn":9},{"ruleId":"497","severity":1,"message":"507","line":8,"column":3,"nodeType":"499","messageId":"500","endLine":8,"endColumn":8},{"ruleId":"497","severity":1,"message":"508","line":9,"column":3,"nodeType":"499","messageId":"500","endLine":9,"endColumn":9},{"ruleId":"497","severity":1,"message":"509","line":10,"column":3,"nodeType":"499","messageId":"500","endLine":10,"endColumn":11},{"ruleId":"497","severity":1,"message":"510","line":11,"column":3,"nodeType":"499","messageId":"500","endLine":11,"endColumn":8},{"ruleId":"497","severity":1,"message":"579","line":12,"column":3,"nodeType":"499","messageId":"500","endLine":12,"endColumn":10},{"ruleId":"497","severity":1,"message":"580","line":15,"column":10,"nodeType":"499","messageId":"500","endLine":15,"endColumn":24},{"ruleId":"497","severity":1,"message":"567","line":16,"column":10,"nodeType":"499","messageId":"500","endLine":16,"endColumn":24},{"ruleId":"497","severity":1,"message":"581","line":16,"column":26,"nodeType":"499","messageId":"500","endLine":16,"endColumn":31},{"ruleId":"497","severity":1,"message":"568","line":18,"column":10,"nodeType":"499","messageId":"500","endLine":18,"endColumn":29},{"ruleId":"497","severity":1,"message":"520","line":24,"column":7,"nodeType":"499","messageId":"500","endLine":24,"endColumn":13},{"ruleId":"497","severity":1,"message":"577","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":26},{"ruleId":"497","severity":1,"message":"578","line":2,"column":8,"nodeType":"499","messageId":"500","endLine":2,"endColumn":14},{"ruleId":"497","severity":1,"message":"518","line":3,"column":8,"nodeType":"499","messageId":"500","endLine":3,"endColumn":13},{"ruleId":"497","severity":1,"message":"504","line":5,"column":3,"nodeType":"499","messageId":"500","endLine":5,"endColumn":15},{"ruleId":"497","severity":1,"message":"505","line":6,"column":3,"nodeType":"499","messageId":"500","endLine":6,"endColumn":7},{"ruleId":"497","severity":1,"message":"506","line":7,"column":3,"nodeType":"499","messageId":"500","endLine":7,"endColumn":9},{"ruleId":"497","severity":1,"message":"507","line":8,"column":3,"nodeType":"499","messageId":"500","endLine":8,"endColumn":8},{"ruleId":"497","severity":1,"message":"508","line":9,"column":3,"nodeType":"499","messageId":"500","endLine":9,"endColumn":9},{"ruleId":"497","severity":1,"message":"509","line":10,"column":3,"nodeType":"499","messageId":"500","endLine":10,"endColumn":11},{"ruleId":"497","severity":1,"message":"510","line":11,"column":3,"nodeType":"499","messageId":"500","endLine":11,"endColumn":8},{"ruleId":"497","severity":1,"message":"579","line":12,"column":3,"nodeType":"499","messageId":"500","endLine":12,"endColumn":10},{"ruleId":"497","severity":1,"message":"580","line":15,"column":10,"nodeType":"499","messageId":"500","endLine":15,"endColumn":24},{"ruleId":"497","severity":1,"message":"567","line":16,"column":10,"nodeType":"499","messageId":"500","endLine":16,"endColumn":24},{"ruleId":"497","severity":1,"message":"581","line":16,"column":26,"nodeType":"499","messageId":"500","endLine":16,"endColumn":31},{"ruleId":"497","severity":1,"message":"568","line":18,"column":10,"nodeType":"499","messageId":"500","endLine":18,"endColumn":29},{"ruleId":"497","severity":1,"message":"520","line":24,"column":7,"nodeType":"499","messageId":"500","endLine":24,"endColumn":13},{"ruleId":"497","severity":1,"message":"508","line":6,"column":3,"nodeType":"499","messageId":"500","endLine":6,"endColumn":9},{"ruleId":"497","severity":1,"message":"525","line":7,"column":3,"nodeType":"499","messageId":"500","endLine":7,"endColumn":6},{"ruleId":"497","severity":1,"message":"526","line":8,"column":3,"nodeType":"499","messageId":"500","endLine":8,"endColumn":6},{"ruleId":"497","severity":1,"message":"579","line":9,"column":3,"nodeType":"499","messageId":"500","endLine":9,"endColumn":10},{"ruleId":"497","severity":1,"message":"565","line":10,"column":3,"nodeType":"499","messageId":"500","endLine":10,"endColumn":8},{"ruleId":"497","severity":1,"message":"510","line":12,"column":3,"nodeType":"499","messageId":"500","endLine":12,"endColumn":8},{"ruleId":"497","severity":1,"message":"509","line":13,"column":3,"nodeType":"499","messageId":"500","endLine":13,"endColumn":11},{"ruleId":"497","severity":1,"message":"545","line":17,"column":8,"nodeType":"499","messageId":"500","endLine":17,"endColumn":14},{"ruleId":"497","severity":1,"message":"567","line":18,"column":10,"nodeType":"499","messageId":"500","endLine":18,"endColumn":24},{"ruleId":"497","severity":1,"message":"581","line":18,"column":26,"nodeType":"499","messageId":"500","endLine":18,"endColumn":31},{"ruleId":"497","severity":1,"message":"546","line":19,"column":10,"nodeType":"499","messageId":"500","endLine":19,"endColumn":22},{"ruleId":"497","severity":1,"message":"568","line":21,"column":10,"nodeType":"499","messageId":"500","endLine":21,"endColumn":29},{"ruleId":"497","severity":1,"message":"553","line":24,"column":7,"nodeType":"499","messageId":"500","endLine":24,"endColumn":13},{"ruleId":"497","severity":1,"message":"554","line":25,"column":9,"nodeType":"499","messageId":"500","endLine":25,"endColumn":17},{"ruleId":"497","severity":1,"message":"582","line":30,"column":7,"nodeType":"499","messageId":"500","endLine":30,"endColumn":12},{"ruleId":"497","severity":1,"message":"583","line":32,"column":10,"nodeType":"499","messageId":"500","endLine":32,"endColumn":14},{"ruleId":"497","severity":1,"message":"584","line":32,"column":16,"nodeType":"499","messageId":"500","endLine":32,"endColumn":23},{"ruleId":"497","severity":1,"message":"585","line":34,"column":10,"nodeType":"499","messageId":"500","endLine":34,"endColumn":14},{"ruleId":"497","severity":1,"message":"586","line":35,"column":10,"nodeType":"499","messageId":"500","endLine":35,"endColumn":17},{"ruleId":"497","severity":1,"message":"587","line":45,"column":9,"nodeType":"499","messageId":"500","endLine":45,"endColumn":20},{"ruleId":"497","severity":1,"message":"570","line":49,"column":9,"nodeType":"499","messageId":"500","endLine":49,"endColumn":17},{"ruleId":"497","severity":1,"message":"571","line":53,"column":9,"nodeType":"499","messageId":"500","endLine":53,"endColumn":21},{"ruleId":"497","severity":1,"message":"588","line":79,"column":9,"nodeType":"499","messageId":"500","endLine":79,"endColumn":23},{"ruleId":"529","severity":1,"message":"589","line":93,"column":6,"nodeType":"531","endLine":93,"endColumn":20,"suggestions":"590"},{"ruleId":"529","severity":1,"message":"551","line":97,"column":6,"nodeType":"531","endLine":97,"endColumn":20,"suggestions":"591"},{"ruleId":"497","severity":1,"message":"525","line":7,"column":3,"nodeType":"499","messageId":"500","endLine":7,"endColumn":6},{"ruleId":"497","severity":1,"message":"526","line":8,"column":3,"nodeType":"499","messageId":"500","endLine":8,"endColumn":6},{"ruleId":"497","severity":1,"message":"579","line":9,"column":3,"nodeType":"499","messageId":"500","endLine":9,"endColumn":10},{"ruleId":"497","severity":1,"message":"510","line":12,"column":3,"nodeType":"499","messageId":"500","endLine":12,"endColumn":8},{"ruleId":"497","severity":1,"message":"509","line":13,"column":3,"nodeType":"499","messageId":"500","endLine":13,"endColumn":11},{"ruleId":"497","severity":1,"message":"545","line":17,"column":8,"nodeType":"499","messageId":"500","endLine":17,"endColumn":14},{"ruleId":"497","severity":1,"message":"567","line":18,"column":10,"nodeType":"499","messageId":"500","endLine":18,"endColumn":24},{"ruleId":"497","severity":1,"message":"546","line":19,"column":10,"nodeType":"499","messageId":"500","endLine":19,"endColumn":22},{"ruleId":"497","severity":1,"message":"553","line":24,"column":7,"nodeType":"499","messageId":"500","endLine":24,"endColumn":13},{"ruleId":"497","severity":1,"message":"554","line":25,"column":9,"nodeType":"499","messageId":"500","endLine":25,"endColumn":17},{"ruleId":"572","severity":1,"message":"573","line":77,"column":52,"nodeType":"537","messageId":"574","endLine":77,"endColumn":65},{"ruleId":"497","severity":1,"message":"550","line":82,"column":11,"nodeType":"499","messageId":"500","endLine":82,"endColumn":19},{"ruleId":"529","severity":1,"message":"592","line":123,"column":6,"nodeType":"531","endLine":123,"endColumn":20,"suggestions":"593"},{"ruleId":"529","severity":1,"message":"551","line":127,"column":6,"nodeType":"531","endLine":127,"endColumn":20,"suggestions":"594"},{"ruleId":"497","severity":1,"message":"498","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":25},{"ruleId":"497","severity":1,"message":"504","line":4,"column":3,"nodeType":"499","messageId":"500","endLine":4,"endColumn":15},{"ruleId":"497","severity":1,"message":"506","line":6,"column":3,"nodeType":"499","messageId":"500","endLine":6,"endColumn":9},{"ruleId":"497","severity":1,"message":"520","line":19,"column":7,"nodeType":"499","messageId":"500","endLine":19,"endColumn":13},{"ruleId":"497","severity":1,"message":"550","line":47,"column":11,"nodeType":"499","messageId":"500","endLine":47,"endColumn":19},{"ruleId":"529","severity":1,"message":"551","line":118,"column":6,"nodeType":"531","endLine":118,"endColumn":8,"suggestions":"595"},{"ruleId":"497","severity":1,"message":"508","line":6,"column":3,"nodeType":"499","messageId":"500","endLine":6,"endColumn":9},{"ruleId":"497","severity":1,"message":"525","line":7,"column":3,"nodeType":"499","messageId":"500","endLine":7,"endColumn":6},{"ruleId":"497","severity":1,"message":"526","line":8,"column":3,"nodeType":"499","messageId":"500","endLine":8,"endColumn":6},{"ruleId":"497","severity":1,"message":"579","line":9,"column":3,"nodeType":"499","messageId":"500","endLine":9,"endColumn":10},{"ruleId":"497","severity":1,"message":"565","line":10,"column":3,"nodeType":"499","messageId":"500","endLine":10,"endColumn":8},{"ruleId":"497","severity":1,"message":"510","line":12,"column":3,"nodeType":"499","messageId":"500","endLine":12,"endColumn":8},{"ruleId":"497","severity":1,"message":"509","line":13,"column":3,"nodeType":"499","messageId":"500","endLine":13,"endColumn":11},{"ruleId":"497","severity":1,"message":"545","line":17,"column":8,"nodeType":"499","messageId":"500","endLine":17,"endColumn":14},{"ruleId":"497","severity":1,"message":"567","line":18,"column":10,"nodeType":"499","messageId":"500","endLine":18,"endColumn":24},{"ruleId":"497","severity":1,"message":"581","line":18,"column":26,"nodeType":"499","messageId":"500","endLine":18,"endColumn":31},{"ruleId":"497","severity":1,"message":"546","line":19,"column":10,"nodeType":"499","messageId":"500","endLine":19,"endColumn":22},{"ruleId":"497","severity":1,"message":"568","line":21,"column":10,"nodeType":"499","messageId":"500","endLine":21,"endColumn":29},{"ruleId":"497","severity":1,"message":"553","line":24,"column":7,"nodeType":"499","messageId":"500","endLine":24,"endColumn":13},{"ruleId":"497","severity":1,"message":"554","line":25,"column":9,"nodeType":"499","messageId":"500","endLine":25,"endColumn":17},{"ruleId":"497","severity":1,"message":"596","line":28,"column":9,"nodeType":"499","messageId":"500","endLine":28,"endColumn":19},{"ruleId":"497","severity":1,"message":"582","line":31,"column":7,"nodeType":"499","messageId":"500","endLine":31,"endColumn":12},{"ruleId":"497","severity":1,"message":"583","line":32,"column":10,"nodeType":"499","messageId":"500","endLine":32,"endColumn":14},{"ruleId":"497","severity":1,"message":"584","line":32,"column":16,"nodeType":"499","messageId":"500","endLine":32,"endColumn":23},{"ruleId":"497","severity":1,"message":"585","line":34,"column":10,"nodeType":"499","messageId":"500","endLine":34,"endColumn":14},{"ruleId":"497","severity":1,"message":"586","line":35,"column":10,"nodeType":"499","messageId":"500","endLine":35,"endColumn":17},{"ruleId":"497","severity":1,"message":"587","line":45,"column":9,"nodeType":"499","messageId":"500","endLine":45,"endColumn":20},{"ruleId":"497","severity":1,"message":"570","line":49,"column":9,"nodeType":"499","messageId":"500","endLine":49,"endColumn":17},{"ruleId":"497","severity":1,"message":"571","line":53,"column":9,"nodeType":"499","messageId":"500","endLine":53,"endColumn":21},{"ruleId":"497","severity":1,"message":"588","line":84,"column":9,"nodeType":"499","messageId":"500","endLine":84,"endColumn":23},{"ruleId":"529","severity":1,"message":"597","line":100,"column":5,"nodeType":"531","endLine":100,"endColumn":19,"suggestions":"598"},{"ruleId":"529","severity":1,"message":"551","line":104,"column":6,"nodeType":"531","endLine":104,"endColumn":20,"suggestions":"599"},{"ruleId":"497","severity":1,"message":"503","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":26},{"ruleId":"497","severity":1,"message":"514","line":4,"column":3,"nodeType":"499","messageId":"500","endLine":4,"endColumn":8},{"ruleId":"497","severity":1,"message":"515","line":6,"column":3,"nodeType":"499","messageId":"500","endLine":6,"endColumn":9},{"ruleId":"497","severity":1,"message":"516","line":7,"column":20,"nodeType":"499","messageId":"500","endLine":7,"endColumn":26},{"ruleId":"497","severity":1,"message":"569","line":11,"column":3,"nodeType":"499","messageId":"500","endLine":11,"endColumn":18},{"ruleId":"497","severity":1,"message":"600","line":58,"column":7,"nodeType":"499","messageId":"500","endLine":58,"endColumn":14},{"ruleId":"497","severity":1,"message":"503","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":26},{"ruleId":"497","severity":1,"message":"501","line":3,"column":10,"nodeType":"499","messageId":"500","endLine":3,"endColumn":14},{"ruleId":"497","severity":1,"message":"514","line":3,"column":16,"nodeType":"499","messageId":"500","endLine":3,"endColumn":21},{"ruleId":"497","severity":1,"message":"515","line":3,"column":23,"nodeType":"499","messageId":"500","endLine":3,"endColumn":29},{"ruleId":"497","severity":1,"message":"516","line":3,"column":48,"nodeType":"499","messageId":"500","endLine":3,"endColumn":54},{"ruleId":"497","severity":1,"message":"601","line":29,"column":7,"nodeType":"499","messageId":"500","endLine":29,"endColumn":21},{"ruleId":"497","severity":1,"message":"503","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":26},{"ruleId":"497","severity":1,"message":"498","line":1,"column":28,"nodeType":"499","messageId":"500","endLine":1,"endColumn":36},{"ruleId":"497","severity":1,"message":"501","line":4,"column":3,"nodeType":"499","messageId":"500","endLine":4,"endColumn":7},{"ruleId":"497","severity":1,"message":"513","line":5,"column":3,"nodeType":"499","messageId":"500","endLine":5,"endColumn":11},{"ruleId":"497","severity":1,"message":"514","line":6,"column":3,"nodeType":"499","messageId":"500","endLine":6,"endColumn":8},{"ruleId":"497","severity":1,"message":"515","line":7,"column":3,"nodeType":"499","messageId":"500","endLine":7,"endColumn":9},{"ruleId":"497","severity":1,"message":"516","line":9,"column":20,"nodeType":"499","messageId":"500","endLine":9,"endColumn":26},{"ruleId":"497","severity":1,"message":"602","line":12,"column":22,"nodeType":"499","messageId":"500","endLine":12,"endColumn":30},{"ruleId":"497","severity":1,"message":"603","line":13,"column":24,"nodeType":"499","messageId":"500","endLine":13,"endColumn":36},{"ruleId":"497","severity":1,"message":"508","line":14,"column":10,"nodeType":"499","messageId":"500","endLine":14,"endColumn":16},{"ruleId":"497","severity":1,"message":"520","line":19,"column":7,"nodeType":"499","messageId":"500","endLine":19,"endColumn":13},{"ruleId":"497","severity":1,"message":"604","line":5,"column":3,"nodeType":"499","messageId":"500","endLine":5,"endColumn":12},{"ruleId":"497","severity":1,"message":"605","line":6,"column":3,"nodeType":"499","messageId":"500","endLine":6,"endColumn":17},{"ruleId":"497","severity":1,"message":"606","line":11,"column":8,"nodeType":"499","messageId":"500","endLine":11,"endColumn":13},{"ruleId":"497","severity":1,"message":"503","line":11,"column":17,"nodeType":"499","messageId":"500","endLine":11,"endColumn":26},{"ruleId":"497","severity":1,"message":"498","line":11,"column":28,"nodeType":"499","messageId":"500","endLine":11,"endColumn":36},{"ruleId":"497","severity":1,"message":"607","line":13,"column":10,"nodeType":"499","messageId":"500","endLine":13,"endColumn":17},{"ruleId":"497","severity":1,"message":"608","line":93,"column":13,"nodeType":"499","messageId":"500","endLine":93,"endColumn":17},{"ruleId":"497","severity":1,"message":"609","line":114,"column":10,"nodeType":"499","messageId":"500","endLine":114,"endColumn":13},{"ruleId":"497","severity":1,"message":"577","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":26},{"ruleId":"497","severity":1,"message":"505","line":2,"column":10,"nodeType":"499","messageId":"500","endLine":2,"endColumn":14},{"ruleId":"497","severity":1,"message":"506","line":2,"column":16,"nodeType":"499","messageId":"500","endLine":2,"endColumn":22},{"ruleId":"497","severity":1,"message":"507","line":2,"column":24,"nodeType":"499","messageId":"500","endLine":2,"endColumn":29},{"ruleId":"497","severity":1,"message":"565","line":2,"column":58,"nodeType":"499","messageId":"500","endLine":2,"endColumn":63},{"ruleId":"497","severity":1,"message":"545","line":4,"column":8,"nodeType":"499","messageId":"500","endLine":4,"endColumn":14},{"ruleId":"497","severity":1,"message":"546","line":6,"column":10,"nodeType":"499","messageId":"500","endLine":6,"endColumn":22},{"ruleId":"497","severity":1,"message":"568","line":10,"column":3,"nodeType":"499","messageId":"500","endLine":10,"endColumn":22},{"ruleId":"497","severity":1,"message":"610","line":11,"column":3,"nodeType":"499","messageId":"500","endLine":11,"endColumn":28},{"ruleId":"497","severity":1,"message":"520","line":16,"column":7,"nodeType":"499","messageId":"500","endLine":16,"endColumn":13},{"ruleId":"497","severity":1,"message":"550","line":43,"column":11,"nodeType":"499","messageId":"500","endLine":43,"endColumn":19},{"ruleId":"611","severity":1,"message":"612","line":47,"column":9,"nodeType":"613","messageId":"614","endLine":47,"endColumn":28},{"ruleId":"497","severity":1,"message":"506","line":2,"column":16,"nodeType":"499","messageId":"500","endLine":2,"endColumn":22},{"ruleId":"497","severity":1,"message":"545","line":4,"column":8,"nodeType":"499","messageId":"500","endLine":4,"endColumn":14},{"ruleId":"497","severity":1,"message":"546","line":7,"column":10,"nodeType":"499","messageId":"500","endLine":7,"endColumn":22},{"ruleId":"497","severity":1,"message":"520","line":16,"column":7,"nodeType":"499","messageId":"500","endLine":16,"endColumn":13},{"ruleId":"497","severity":1,"message":"550","line":58,"column":11,"nodeType":"499","messageId":"500","endLine":58,"endColumn":19},{"ruleId":"611","severity":1,"message":"612","line":62,"column":9,"nodeType":"613","messageId":"614","endLine":62,"endColumn":28},{"ruleId":"572","severity":1,"message":"573","line":73,"column":52,"nodeType":"537","messageId":"574","endLine":73,"endColumn":65},{"ruleId":"497","severity":1,"message":"550","line":78,"column":11,"nodeType":"499","messageId":"500","endLine":78,"endColumn":19},{"ruleId":"529","severity":1,"message":"615","line":113,"column":5,"nodeType":"531","endLine":113,"endColumn":11,"suggestions":"616"},{"ruleId":"497","severity":1,"message":"577","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":26},{"ruleId":"497","severity":1,"message":"505","line":2,"column":10,"nodeType":"499","messageId":"500","endLine":2,"endColumn":14},{"ruleId":"497","severity":1,"message":"506","line":2,"column":16,"nodeType":"499","messageId":"500","endLine":2,"endColumn":22},{"ruleId":"497","severity":1,"message":"507","line":2,"column":24,"nodeType":"499","messageId":"500","endLine":2,"endColumn":29},{"ruleId":"497","severity":1,"message":"565","line":2,"column":58,"nodeType":"499","messageId":"500","endLine":2,"endColumn":63},{"ruleId":"497","severity":1,"message":"545","line":4,"column":8,"nodeType":"499","messageId":"500","endLine":4,"endColumn":14},{"ruleId":"497","severity":1,"message":"546","line":7,"column":10,"nodeType":"499","messageId":"500","endLine":7,"endColumn":22},{"ruleId":"497","severity":1,"message":"568","line":10,"column":3,"nodeType":"499","messageId":"500","endLine":10,"endColumn":22},{"ruleId":"497","severity":1,"message":"610","line":11,"column":3,"nodeType":"499","messageId":"500","endLine":11,"endColumn":28},{"ruleId":"497","severity":1,"message":"520","line":16,"column":7,"nodeType":"499","messageId":"500","endLine":16,"endColumn":13},{"ruleId":"497","severity":1,"message":"550","line":43,"column":11,"nodeType":"499","messageId":"500","endLine":43,"endColumn":19},{"ruleId":"497","severity":1,"message":"578","line":2,"column":8,"nodeType":"499","messageId":"500","endLine":2,"endColumn":14},{"ruleId":"497","severity":1,"message":"508","line":7,"column":3,"nodeType":"499","messageId":"500","endLine":7,"endColumn":9},{"ruleId":"497","severity":1,"message":"525","line":8,"column":3,"nodeType":"499","messageId":"500","endLine":8,"endColumn":6},{"ruleId":"497","severity":1,"message":"526","line":9,"column":3,"nodeType":"499","messageId":"500","endLine":9,"endColumn":6},{"ruleId":"497","severity":1,"message":"579","line":10,"column":3,"nodeType":"499","messageId":"500","endLine":10,"endColumn":10},{"ruleId":"497","severity":1,"message":"565","line":11,"column":3,"nodeType":"499","messageId":"500","endLine":11,"endColumn":8},{"ruleId":"497","severity":1,"message":"566","line":12,"column":3,"nodeType":"499","messageId":"500","endLine":12,"endColumn":13},{"ruleId":"497","severity":1,"message":"510","line":13,"column":3,"nodeType":"499","messageId":"500","endLine":13,"endColumn":8},{"ruleId":"497","severity":1,"message":"509","line":14,"column":3,"nodeType":"499","messageId":"500","endLine":14,"endColumn":11},{"ruleId":"497","severity":1,"message":"518","line":16,"column":8,"nodeType":"499","messageId":"500","endLine":16,"endColumn":13},{"ruleId":"497","severity":1,"message":"545","line":17,"column":8,"nodeType":"499","messageId":"500","endLine":17,"endColumn":14},{"ruleId":"497","severity":1,"message":"567","line":18,"column":10,"nodeType":"499","messageId":"500","endLine":18,"endColumn":24},{"ruleId":"497","severity":1,"message":"581","line":18,"column":26,"nodeType":"499","messageId":"500","endLine":18,"endColumn":31},{"ruleId":"497","severity":1,"message":"546","line":19,"column":10,"nodeType":"499","messageId":"500","endLine":19,"endColumn":22},{"ruleId":"497","severity":1,"message":"568","line":21,"column":10,"nodeType":"499","messageId":"500","endLine":21,"endColumn":29},{"ruleId":"497","severity":1,"message":"569","line":21,"column":31,"nodeType":"499","messageId":"500","endLine":21,"endColumn":46},{"ruleId":"497","severity":1,"message":"520","line":25,"column":7,"nodeType":"499","messageId":"500","endLine":25,"endColumn":13},{"ruleId":"497","severity":1,"message":"553","line":27,"column":7,"nodeType":"499","messageId":"500","endLine":27,"endColumn":13},{"ruleId":"497","severity":1,"message":"554","line":28,"column":9,"nodeType":"499","messageId":"500","endLine":28,"endColumn":17},{"ruleId":"497","severity":1,"message":"617","line":32,"column":9,"nodeType":"499","messageId":"500","endLine":32,"endColumn":17},{"ruleId":"497","severity":1,"message":"582","line":33,"column":7,"nodeType":"499","messageId":"500","endLine":33,"endColumn":12},{"ruleId":"497","severity":1,"message":"583","line":34,"column":10,"nodeType":"499","messageId":"500","endLine":34,"endColumn":14},{"ruleId":"497","severity":1,"message":"584","line":34,"column":16,"nodeType":"499","messageId":"500","endLine":34,"endColumn":23},{"ruleId":"497","severity":1,"message":"585","line":36,"column":10,"nodeType":"499","messageId":"500","endLine":36,"endColumn":14},{"ruleId":"497","severity":1,"message":"586","line":37,"column":10,"nodeType":"499","messageId":"500","endLine":37,"endColumn":17},{"ruleId":"497","severity":1,"message":"618","line":38,"column":16,"nodeType":"499","messageId":"500","endLine":38,"endColumn":23},{"ruleId":"497","severity":1,"message":"619","line":39,"column":10,"nodeType":"499","messageId":"500","endLine":39,"endColumn":14},{"ruleId":"497","severity":1,"message":"620","line":39,"column":16,"nodeType":"499","messageId":"500","endLine":39,"endColumn":23},{"ruleId":"497","severity":1,"message":"621","line":40,"column":9,"nodeType":"499","messageId":"500","endLine":40,"endColumn":12},{"ruleId":"497","severity":1,"message":"587","line":41,"column":9,"nodeType":"499","messageId":"500","endLine":41,"endColumn":20},{"ruleId":"497","severity":1,"message":"570","line":45,"column":9,"nodeType":"499","messageId":"500","endLine":45,"endColumn":17},{"ruleId":"497","severity":1,"message":"571","line":49,"column":9,"nodeType":"499","messageId":"500","endLine":49,"endColumn":21},{"ruleId":"497","severity":1,"message":"607","line":2,"column":10,"nodeType":"499","messageId":"500","endLine":2,"endColumn":17},{"ruleId":"497","severity":1,"message":"506","line":7,"column":3,"nodeType":"499","messageId":"500","endLine":7,"endColumn":9},{"ruleId":"497","severity":1,"message":"520","line":20,"column":7,"nodeType":"499","messageId":"500","endLine":20,"endColumn":13},{"ruleId":"497","severity":1,"message":"550","line":80,"column":11,"nodeType":"499","messageId":"500","endLine":80,"endColumn":19},{"ruleId":"497","severity":1,"message":"622","line":135,"column":9,"nodeType":"499","messageId":"500","endLine":135,"endColumn":16},{"ruleId":"529","severity":1,"message":"623","line":158,"column":6,"nodeType":"531","endLine":158,"endColumn":8,"suggestions":"624"},{"ruleId":"625","severity":1,"message":"626","line":191,"column":32,"nodeType":"627","messageId":"628","endLine":191,"endColumn":34},{"ruleId":"497","severity":1,"message":"578","line":2,"column":8,"nodeType":"499","messageId":"500","endLine":2,"endColumn":14},{"ruleId":"497","severity":1,"message":"504","line":5,"column":3,"nodeType":"499","messageId":"500","endLine":5,"endColumn":15},{"ruleId":"497","severity":1,"message":"506","line":7,"column":3,"nodeType":"499","messageId":"500","endLine":7,"endColumn":9},{"ruleId":"497","severity":1,"message":"580","line":15,"column":10,"nodeType":"499","messageId":"500","endLine":15,"endColumn":24},{"ruleId":"497","severity":1,"message":"581","line":16,"column":26,"nodeType":"499","messageId":"500","endLine":16,"endColumn":31},{"ruleId":"497","severity":1,"message":"568","line":18,"column":10,"nodeType":"499","messageId":"500","endLine":18,"endColumn":29},{"ruleId":"497","severity":1,"message":"520","line":22,"column":7,"nodeType":"499","messageId":"500","endLine":22,"endColumn":13},{"ruleId":"497","severity":1,"message":"629","line":34,"column":10,"nodeType":"499","messageId":"500","endLine":34,"endColumn":14},{"ruleId":"497","severity":1,"message":"622","line":34,"column":16,"nodeType":"499","messageId":"500","endLine":34,"endColumn":23},{"ruleId":"497","severity":1,"message":"550","line":45,"column":11,"nodeType":"499","messageId":"500","endLine":45,"endColumn":19},{"ruleId":"529","severity":1,"message":"630","line":77,"column":6,"nodeType":"531","endLine":77,"endColumn":8,"suggestions":"631"},{"ruleId":"497","severity":1,"message":"578","line":2,"column":8,"nodeType":"499","messageId":"500","endLine":2,"endColumn":14},{"ruleId":"497","severity":1,"message":"504","line":5,"column":3,"nodeType":"499","messageId":"500","endLine":5,"endColumn":15},{"ruleId":"497","severity":1,"message":"506","line":7,"column":3,"nodeType":"499","messageId":"500","endLine":7,"endColumn":9},{"ruleId":"497","severity":1,"message":"632","line":10,"column":3,"nodeType":"499","messageId":"500","endLine":10,"endColumn":10},{"ruleId":"497","severity":1,"message":"633","line":14,"column":3,"nodeType":"499","messageId":"500","endLine":14,"endColumn":9},{"ruleId":"497","severity":1,"message":"580","line":18,"column":10,"nodeType":"499","messageId":"500","endLine":18,"endColumn":24},{"ruleId":"497","severity":1,"message":"634","line":18,"column":25,"nodeType":"499","messageId":"500","endLine":18,"endColumn":39},{"ruleId":"497","severity":1,"message":"568","line":19,"column":10,"nodeType":"499","messageId":"500","endLine":19,"endColumn":29},{"ruleId":"497","severity":1,"message":"520","line":23,"column":7,"nodeType":"499","messageId":"500","endLine":23,"endColumn":13},{"ruleId":"497","severity":1,"message":"622","line":35,"column":16,"nodeType":"499","messageId":"500","endLine":35,"endColumn":23},{"ruleId":"529","severity":1,"message":"630","line":101,"column":6,"nodeType":"531","endLine":101,"endColumn":8,"suggestions":"635"},{"ruleId":"497","severity":1,"message":"506","line":7,"column":3,"nodeType":"499","messageId":"500","endLine":7,"endColumn":9},{"ruleId":"497","severity":1,"message":"507","line":8,"column":3,"nodeType":"499","messageId":"500","endLine":8,"endColumn":8},{"ruleId":"497","severity":1,"message":"636","line":20,"column":10,"nodeType":"499","messageId":"500","endLine":20,"endColumn":30},{"ruleId":"497","severity":1,"message":"520","line":22,"column":7,"nodeType":"499","messageId":"500","endLine":22,"endColumn":13},{"ruleId":"497","severity":1,"message":"561","line":33,"column":9,"nodeType":"499","messageId":"500","endLine":33,"endColumn":13},{"ruleId":"497","severity":1,"message":"622","line":140,"column":9,"nodeType":"499","messageId":"500","endLine":140,"endColumn":16},{"ruleId":"529","severity":1,"message":"637","line":158,"column":6,"nodeType":"531","endLine":158,"endColumn":8,"suggestions":"638"},{"ruleId":"625","severity":1,"message":"626","line":191,"column":32,"nodeType":"627","messageId":"628","endLine":191,"endColumn":34},"no-native-reassign",["639"],"no-negated-in-lhs",["640"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'withRouter' is defined but never used.","'Component' is defined but never used.","'AutoComplete' is defined but never used.","'Form' is defined but never used.","'Select' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Carousel' is defined but never used.","'Image' is defined but never used.","'Footer' is defined but never used.","'userdata' is assigned a value but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Router' is defined but never used.","'Checkbox' is defined but never used.","'axios' is defined but never used.","'oc' is defined but never used.","'MySwal' is assigned a value but never used.","'_studentid' is assigned a value but never used.","'setStudentId' is assigned a value but never used.","'Tooltip' is defined but never used.","'Cascader' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'QuestionCircleOutlined' is defined but never used.","'AutoCompleteOption' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'form'. Either include it or remove the dependency array.","ArrayExpression",["641"],"React Hook useEffect has a missing dependency: 'loadDep'. Either include it or remove the dependency array.",["642"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assignments to the '_data' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'LOGIN_SUCCESS' is defined but never used.","'styled' is defined but never used.","'FormInstance' is defined but never used.","'id' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'response' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["643"],"'Option' is assigned a value but never used.","'TextArea' is assigned a value but never used.","'isDisable' is assigned a value but never used.","'setDisable' is assigned a value but never used.","React Hook React.useCallback has missing dependencies: 'deptname' and 'form'. Either include them or remove the dependency array.",["644"],"'onChangeSelectFunc' is assigned a value but never used.",["645"],"'name' is assigned a value but never used.",["646"],["647"],["648"],"'Modal' is defined but never used.","'Pagination' is defined but never used.","'ToastContainer' is defined but never used.","'CloudUploadOutlined' is defined but never used.","'LoadingOutlined' is defined but never used.","'handleOk' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN",["649"],["650"],"'useEffect' is defined but never used.","'moment' is defined but never used.","'Divider' is defined but never used.","'SearchOutlined' is defined but never used.","'toast' is defined but never used.","'count' is assigned a value but never used.","'size' is assigned a value but never used.","'setSize' is assigned a value but never used.","'form' is assigned a value but never used.","'visible' is assigned a value but never used.","'FormHandler' is assigned a value but never used.","'onValuesChange' is assigned a value but never used.","React Hook React.useCallback has missing dependencies: 'department', 'header', and 'pageSize'. Either include them or remove the dependency array.",["651"],["652"],"React Hook React.useCallback has missing dependencies: 'header' and 'pageSize'. Either include them or remove the dependency array.",["653"],["654"],["655"],"'department' is assigned a value but never used.","React Hook React.useCallback has missing dependencies: 'PageRefresh', 'header', and 'pageSize'. Either include them or remove the dependency array.",["656"],["657"],"'history' is assigned a value but never used.","'GradientBorder' is assigned a value but never used.","'authUser' is defined but never used.","'LockOutlined' is defined but never used.","'AUTH_USER' is defined but never used.","'REGISTER_ERROR' is defined but never used.","'React' is defined but never used.","'request' is defined but never used.","'dept' is assigned a value but never used.","'dep' is defined but never used.","'ExclamationCircleOutlined' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","React Hook useEffect has missing dependencies: 'data.category1', 'data.category2', 'data.category3', 'data.category4', 'data.category5', 'data.faqno', 'data.imageinfo', 'data.landingUrl', 'data.question', and 'data.questionAnswer'. Either include them or remove the dependency array.",["658"],"'pageSize' is assigned a value but never used.","'setData' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'num' is assigned a value but never used.","'getData' is assigned a value but never used.","React Hook React.useCallback has missing dependencies: 'form' and 'inputValue'. Either include them or remove the dependency array.",["659"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["660"],"'message' is defined but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.",["661"],"'getDefaultNormalizer' is defined but never used.","React Hook React.useCallback has a missing dependency: 'inputValue'. Either include it or remove the dependency array.",["662"],"no-global-assign","no-unsafe-negation",{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},{"desc":"667","fix":"668"},{"desc":"669","fix":"670"},{"desc":"663","fix":"671"},{"desc":"669","fix":"672"},{"desc":"663","fix":"673"},{"desc":"674","fix":"675"},{"desc":"676","fix":"677"},{"desc":"674","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"681","fix":"685"},{"desc":"674","fix":"686"},{"desc":"687","fix":"688"},{"desc":"681","fix":"689"},{"desc":"690","fix":"691"},{"desc":"692","fix":"693"},{"desc":"663","fix":"694"},{"desc":"663","fix":"695"},{"desc":"696","fix":"697"},"Update the dependencies array to be: [form]",{"range":"698","text":"699"},"Update the dependencies array to be: [loadDep]",{"range":"700","text":"701"},"Update the dependencies array to be: [department, getData]",{"range":"702","text":"703"},"Update the dependencies array to be: [department, deptname, form]",{"range":"704","text":"705"},{"range":"706","text":"699"},{"range":"707","text":"705"},{"range":"708","text":"699"},"Update the dependencies array to be: [getData]",{"range":"709","text":"710"},"Update the dependencies array to be: [department, form]",{"range":"711","text":"712"},{"range":"713","text":"710"},"Update the dependencies array to be: [department, header, page, pageSize]",{"range":"714","text":"715"},"Update the dependencies array to be: [getData, page, setPage]",{"range":"716","text":"717"},"Update the dependencies array to be: [header, page, pageSize]",{"range":"718","text":"719"},{"range":"720","text":"717"},{"range":"721","text":"710"},"Update the dependencies array to be: [PageRefresh, header, page, pageSize]",{"range":"722","text":"723"},{"range":"724","text":"717"},"Update the dependencies array to be: [data.category1, data.category2, data.category3, data.category4, data.category5, data.faqno, data.imageinfo, data.landingUrl, data.question, data.questionAnswer, form]",{"range":"725","text":"726"},"Update the dependencies array to be: [form, inputValue]",{"range":"727","text":"728"},{"range":"729","text":"699"},{"range":"730","text":"699"},"Update the dependencies array to be: [inputValue]",{"range":"731","text":"732"},[4875,4877],"[form]",[8356,8358],"[loadDep]",[3462,3474],"[department, getData]",[1283,1295],"[department, deptname, form]",[1415,1417],[1311,1323],[1443,1445],[2699,2701],"[getData]",[5944,5956],"[department, form]",[6010,6012],[2467,2481],"[department, header, page, pageSize]",[2535,2549],"[getData, page, setPage]",[3224,3238],"[header, page, pageSize]",[3292,3306],[3108,3110],[2640,2654],"[PageRefresh, header, page, pageSize]",[2708,2722],[3180,3186],"[data.category1, data.category2, data.category3, data.category4, data.category5, data.faqno, data.imageinfo, data.landingUrl, data.question, data.questionAnswer, form]",[4190,4192],"[form, inputValue]",[1945,1947],[2480,2482],[4367,4369],"[inputValue]"]