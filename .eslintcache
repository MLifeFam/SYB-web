[{"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\index.js":"1","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\App.js":"2","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\serviceWorker.js":"3","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\reducer\\index.js":"4","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\MainPage.js":"5","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Login.js":"6","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Signup.js":"7","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\hoc\\auth.js":"8","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\reducer\\userReducer.js":"9","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Status.js":"10","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Curriculum.js":"11","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Notice.js":"12","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Welcome.js":"13","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Professor.js":"14","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Timetable.js":"15","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Userquestion.js":"16","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Question.js":"17","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Bestqa.js":"18","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\DataModify.js":"19","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\components\\Menu.js":"20","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\components\\Footer.js":"21","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\components\\Header.js":"22","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\actions\\userAction.js":"23","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\actions\\types.js":"24","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Userquestionlist.js":"25","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\QuestionList.js":"26","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\DataModifyList.js":"27","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\utils\\axios.js":"28","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Adminpage.js":"29"},{"size":1076,"mtime":1607858755749,"results":"30","hashOfConfig":"31"},{"size":1001,"mtime":1607858755745,"results":"32","hashOfConfig":"31"},{"size":5227,"mtime":1607858755756,"results":"33","hashOfConfig":"31"},{"size":161,"mtime":1607858755755,"results":"34","hashOfConfig":"31"},{"size":3136,"mtime":1610618225744,"results":"35","hashOfConfig":"31"},{"size":4886,"mtime":1607858755752,"results":"36","hashOfConfig":"31"},{"size":16238,"mtime":1607858755754,"results":"37","hashOfConfig":"31"},{"size":1188,"mtime":1607858755749,"results":"38","hashOfConfig":"31"},{"size":876,"mtime":1607858755756,"results":"39","hashOfConfig":"31"},{"size":7756,"mtime":1608206132113,"results":"40","hashOfConfig":"31"},{"size":5045,"mtime":1608206196577,"results":"41","hashOfConfig":"31"},{"size":4964,"mtime":1608206215633,"results":"42","hashOfConfig":"31"},{"size":6288,"mtime":1607858755755,"results":"43","hashOfConfig":"31"},{"size":6510,"mtime":1607858755753,"results":"44","hashOfConfig":"31"},{"size":6236,"mtime":1607858755754,"results":"45","hashOfConfig":"31"},{"size":4715,"mtime":1607858755754,"results":"46","hashOfConfig":"31"},{"size":7085,"mtime":1607858755753,"results":"47","hashOfConfig":"31"},{"size":4611,"mtime":1608206241835,"results":"48","hashOfConfig":"31"},{"size":3874,"mtime":1607858755751,"results":"49","hashOfConfig":"31"},{"size":4999,"mtime":1610618300769,"results":"50","hashOfConfig":"31"},{"size":1185,"mtime":1607858755747,"results":"51","hashOfConfig":"31"},{"size":3031,"mtime":1607858755747,"results":"52","hashOfConfig":"31"},{"size":2733,"mtime":1607858755746,"results":"53","hashOfConfig":"31"},{"size":351,"mtime":1607858755746,"results":"54","hashOfConfig":"31"},{"size":2728,"mtime":1607858755755,"results":"55","hashOfConfig":"31"},{"size":7649,"mtime":1607858755753,"results":"56","hashOfConfig":"31"},{"size":2724,"mtime":1607858755751,"results":"57","hashOfConfig":"31"},{"size":338,"mtime":1607858755757,"results":"58","hashOfConfig":"31"},{"size":1930,"mtime":1610618313369,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"r246ep",{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"62"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"62"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"62"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\index.js",[],["140","141"],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\App.js",["142","143","144"],"import React, { Component, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Login from \"./pages/Login\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport Signup from \"./pages/Signup\";\r\nimport \"./App.css\";\r\nimport Auth from \"./hoc/auth\";\r\n\r\nconst Container = styled.div`\r\n  -ms-user-select: none;\r\n  -moz-user-select: -moz-none;\r\n  -khtml-user-select: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n`;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n          <Switch>\r\n            <Route path=\"/\" component={Login} exact />\r\n            <Route path=\"/signup\" component={Signup} exact />\r\n            <Route path=\"/main\" component={Auth(MainPage, true)} exact />\r\n          </Switch>\r\n        </Router>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\serviceWorker.js",[],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\reducer\\index.js",[],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\MainPage.js",["145","146","147","148","149","150","151","152","153","154","155"],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Login.js",["156","157","158","159","160","161","162","163","164","165","166"],"import React, { Component, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { loginUser, authUser, loginSuccess } from \"../actions/userAction\";\r\nimport axios from \"axios\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst LoginForm = styled.div`\r\n  display: flex;\r\n  min-width: 800px;\r\n  min-height: 600px;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #a31432;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  font-size: 6rem;\r\n  letter-spacing: 1rem;\r\n  color: #a31432;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Whitespace = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 6rem;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-radius: 2rem;\r\n`;\r\n\r\nconst Login = (props) => {\r\n  const [_id, setId] = useState(\"\");\r\n  const [_password, setPassword] = useState(\"\");\r\n  const [_studentid, setStudentId] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const onLogin = (e) => {\r\n    localStorage.clear();\r\n    const body = {\r\n      userid: _id,\r\n      password: _password,\r\n    };\r\n\r\n    dispatch(loginUser(body))\r\n      .then((res) => {\r\n        const accessToken = res.data.result.token;\r\n\r\n        if (res.status === 200) {\r\n          dispatch(loginSuccess(accessToken));\r\n          dispatch(authUser()).then((res) => {\r\n            if (res) {\r\n              // res 추가해서 비동기적으로 실행되게 하기위함 (로그인 됬을 때 username 못불러오는 현상 해결)\r\n              props.history.push(\"/main\");\r\n            }\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"로그인 실패\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 2000,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <LoginForm>\r\n      <Whitespace>\r\n        <Logo style={{ marginBottom: \"3%\" }}>SYB ADMIN</Logo>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          onFinish={onLogin}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"id\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"ID를 입력해주세요\",\r\n              },\r\n            ]}\r\n            style={{ paddingBottom: \"0.5rem\" }}\r\n          >\r\n            <Input\r\n              prefix={\r\n                <UserOutlined\r\n                  className=\"site-form-item-icon\"\r\n                  style={{ paddingRight: \"0.5rem\" }}\r\n                />\r\n              }\r\n              onChange={onIdHandler}\r\n              placeholder=\"아이디\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 입력해주세요\",\r\n              },\r\n            ]}\r\n            style={{ paddingBottom: \"1rem\" }}\r\n          >\r\n            <Input\r\n              prefix={\r\n                <LockOutlined\r\n                  className=\"site-form-item-icon\"\r\n                  style={{ paddingRight: \"0.5rem\" }}\r\n                />\r\n              }\r\n              type=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              onChange={onPasswordHanlder}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                backgroundColor: \"#a31432\",\r\n                border: \"none\",\r\n                margin: \"0 1rem\",\r\n              }}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <Link to=\"/signup\" style={{ margin: \"0 1rem\" }}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                style={{ backgroundColor: \"#a31432\", border: \"none\" }}\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </Whitespace>\r\n    </LoginForm>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Signup.js",["167","168","169","170","171","172","173","174","175","176","177","178","179","180"],"import React, { Component, useState } from \"react\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { registerUser } from \"../actions/userAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  AutoComplete,\r\n  Modal,\r\n} from \"antd\";\r\nimport { QuestionCircleOutlined, LeftOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  min-width: 800px;\r\n  min-height: 600px;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #a31432;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Whitespace = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 6rem;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-radius: 2rem;\r\n`;\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst Title = styled.div`\r\n  font-size: 3rem;\r\n  color: #a31432;\r\n  font-family: \"Rajdhani\";\r\n  margin-top: 5rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst Backwards = styled.div`\r\n  font-size: 2.8rem;\r\n  left: 7rem;\r\n  top: 3.5rem;\r\n  color: #a31432;\r\n  position: absolute;\r\n  &:hover {\r\n    color: ${oc.red[8]};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Signup = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [emailAuthform] = Form.useForm();\r\n  const [_id, setId] = useState(\"\");\r\n  const [_password, setPassword] = useState(\"\");\r\n  const [_department, setDepartment] = useState(\"\");\r\n  const [_email, setEmail] = useState(\"\");\r\n  const [_name, setName] = useState(\"\");\r\n  const [_phonenum, setPhonenum] = useState(\"\");\r\n  const [id_duplication, checkDup] = useState(false);\r\n  const [email_check, checkEmail] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [email_auth, setEmailAuth] = useState(0);\r\n  const sejongemail = \"@sejong.ac.kr\";\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    setEmailAuth(\"\");\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n    setEmailAuth(\"\");\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n    checkDup(false);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n  const onEmailHandler = (e) => {\r\n    setEmail(e.currentTarget.value);\r\n    checkEmail(false);\r\n  };\r\n  const onNameHandler = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const onPhoneHandler = (e) => {\r\n    setPhonenum(e.currentTarget.value);\r\n  };\r\n\r\n  const onEmailCheckSubmit = (e) => {\r\n    console.log({\r\n      email: _email,\r\n      authNumber: email_auth,\r\n    });\r\n    axios\r\n      .post(\"https://mfam.site/mail/verify\", {\r\n        email: _email,\r\n        authNumber: email_auth,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 201) {\r\n          handleCancel();\r\n          setEmail(true);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            text: \"인증되었습니다.\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 2000,\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            text: \"인증번호가 옳지 않습니다.\",\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"인증번호가 옳지 않습니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n\r\n        // Swal.fire({\r\n        //   icon: \"warning\",\r\n        //   text: \"서버와의 연결이 옳지 않습니다.\",\r\n        //   showConfirmButton: true,\r\n        //   width: \"25rem\",\r\n        //   timer: 1500,\r\n        // });\r\n      });\r\n  };\r\n\r\n  const onEmailCheckHandler = (e) => {\r\n    setEmailAuth(e.currentTarget.value);\r\n    console.log(email_auth);\r\n  };\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    setDepartment(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onEmailHadnler = (e) => {\r\n    if (_email.indexOf(sejongemail) === _email.length - sejongemail.length) {\r\n      return setVisible(true);\r\n    }\r\n\r\n    //세종대이메일 검사\r\n\r\n    axios\r\n      .post(\"https://mfam.site/mail/send\", { to: _email })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log({ to: _email });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"이메일이 발송되지 않았습니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n\r\n  const onDuplicationHadnler = (e) => {\r\n    if (_id.length === 0) {\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        text: \"아이디를 입력해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 1500,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"https://mfam.site/auth/idCheck\", { userid: _id })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n\r\n          checkDup(true);\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 1500,\r\n          });\r\n\r\n          checkDup(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          text: \"중복된 아이디 입니다.\",\r\n          showConfirmButton: true,\r\n          width: \"25rem\",\r\n          timer: 1500,\r\n        });\r\n\r\n        checkDup(false);\r\n      });\r\n  };\r\n  const linktoMain = (e) => {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n    let body = {\r\n      email: _email,\r\n      username: _name,\r\n      password: _password,\r\n      userid: _id,\r\n      phoneNumber: _phonenum,\r\n      department: _department,\r\n    };\r\n\r\n    if (id_duplication === false) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"가입 실패\",\r\n        text: \"아이디 중복검사를 완료해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 2000,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (email_check === false) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"가입 실패\",\r\n        text: \"이메일 인증을 완료해주세요\",\r\n        showConfirmButton: true,\r\n        width: \"25rem\",\r\n        timer: 2000,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    dispatch(registerUser(body))\r\n      .then((res) => {\r\n        if (res.status === 409) {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"가입 실패\",\r\n            text: res.data.result,\r\n            showConfirmButton: true,\r\n            width: \"25rem\",\r\n            timer: 2000,\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"가입 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 2000,\r\n          });\r\n          props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onSubmitHandler}\r\n        autoComplete=\"off\"\r\n        scrollToFirstError\r\n      >\r\n        <Container>\r\n          <Whitespace>\r\n            <Backwards>\r\n              <LeftOutlined onClick={linktoMain} />\r\n            </Backwards>\r\n            <Title>\r\n              <p>Sign up</p>\r\n            </Title>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"6rem\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n                name=\"id\"\r\n                label=\"아이디\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"아이디를 입력해주세요.\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input onChange={onIdHandler} />\r\n              </Form.Item>\r\n              <Button\r\n                style={{\r\n                  position: \"relatvive\",\r\n                  width: \"5rem\",\r\n                  fontSize: \"0.7rem\",\r\n                  marginLeft: \"1rem\",\r\n                }}\r\n                onClick={onDuplicationHadnler}\r\n              >\r\n                중복검사\r\n              </Button>\r\n            </div>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"password\"\r\n              label=\"비밀번호\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"패스워드를 입력해주세요.\",\r\n                },\r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input.Password onChange={onPasswordHanlder} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"confirm\"\r\n              label=\"비밀번호 확인\"\r\n              dependencies={[\"password\"]}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"패스워드를 확인해주세요\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\"비밀번호가 일치하지 않습니다!\");\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"name\"\r\n              label=\"이름\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"이름을 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input onChange={onNameHandler} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"department\"\r\n              label=\"학과\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"학과를 선택해주세요\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select onChange={onChangeSelectFunc}>\r\n                <Option value=\"0\">컴퓨터공학과</Option>\r\n                <Option value=\"1\">소프트웨어학과</Option>\r\n                <Option value=\"2\">정보보호학과</Option>\r\n                <Option value=\"3\">데이터사이언스학과</Option>\r\n                <Option value=\"4\">지능기전공학부</Option>\r\n                <Option value=\"5\">디자인이노베이션</Option>\r\n                <Option value=\"6\">만화애니메이션텍</Option>\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"6rem\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n                name=\"email\"\r\n                label=\"이메일\"\r\n                initialValue=\"\"\r\n                hasFeedback\r\n                rules={[\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"올바른 이메일이 아닙니다\",\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: \"이메일을 입력해주세요.\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                      if (\r\n                        value.indexOf(sejongemail) ===\r\n                          value.length - sejongemail.length ||\r\n                        !value\r\n                      ) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\"\");\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input\r\n                  onChange={onEmailHandler}\r\n                  placeholder=\"abc@sejong.ac.kr\"\r\n                />\r\n              </Form.Item>\r\n              <Button\r\n                style={{\r\n                  position: \"relatvive\",\r\n                  width: \"5rem\",\r\n                  fontSize: \"0.7rem\",\r\n                  marginLeft: \"1rem\",\r\n                }}\r\n                onClick={onEmailHadnler}\r\n              >\r\n                메일인증\r\n              </Button>\r\n            </div>\r\n\r\n            <Form.Item\r\n              style={{ width: \"20rem\", paddingBottom: \"1%\" }}\r\n              name=\"phonenumber\"\r\n              label=\"휴대폰 번호\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"휴대폰 번호를 입력해주세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input onChange={onPhoneHandler} />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{\r\n                  backgroundColor: \"#a31432\",\r\n                  border: \"none\",\r\n                  margin: \"0.5rem 1rem 0\",\r\n                }}\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </Form.Item>\r\n          </Whitespace>\r\n        </Container>\r\n      </Form>\r\n\r\n      <Modal\r\n        title=\"이메일 인증\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n        width=\"40rem\"\r\n      >\r\n        <Form\r\n          form={emailAuthform}\r\n          name=\"emailCheck\"\r\n          onFinish={onEmailCheckSubmit}\r\n          autoComplete=\"off\"\r\n          style={{ width: \"auto\" }}\r\n        >\r\n          <Form.Item\r\n            style={{ width: \"auto\" }}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"인증번호를 입력해주세요.\",\r\n              },\r\n            ]}\r\n          >\r\n            <p>{_email}로 인증번호를 보냈습니다.</p>\r\n\r\n            <Input\r\n              onChange={onEmailCheckHandler}\r\n              placeholder=\"인증번호를 입력해주세요\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n            <Button htmlType=\"submit\">인증하기</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\hoc\\auth.js",["181","182","183"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authUser } from \"../actions/userAction\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nexport default function (Component, option , adminRoute = null){\r\n    //option\r\n    //null => 아무나 출입 가능\r\n    //true => 로그인한 유저만 출입 가능\r\n    //false => 로그인한 유저는 출입 불가능\r\n\r\n    function AuthCheck(props){\r\n        const dispatch = useDispatch();\r\n        let _data={};\r\n        useEffect(() =>{\r\n        dispatch(authUser()).then((res) =>{\r\n            if(!res){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title:'로그인이 필요합니다',\r\n                    showConfirmButton: true,\r\n                    width:'25rem',\r\n                    timer: 2000,\r\n                }).then(props.history.push(\"/\"));\r\n            }\r\n            else{\r\n                _data = Object.assign(_data,res);\r\n            }\r\n        });\r\n    },[]);\r\n            return <Component data={_data}/>\r\n    }\r\n\r\n    return AuthCheck;\r\n}\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\reducer\\userReducer.js",["184","185"],"import { REGISTER_USER, LOGIN_USER,LOGOUT_USER,REGISTER_ERROR,AUTH_USER,LOGIN_SUCCESS,AUTH_SUCCESS,AUTH_FAILED } from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n  loggedIn : false,\r\n  user : {},\r\n}\r\n\r\nexport default function (state = defaultState, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return { ...state, loggedIn:false, user:{}};\r\n    case REGISTER_ERROR:\r\n        return { ...state, loggedIn:false, user:{}};\r\n    case LOGIN_USER:\r\n      return { ...state, loggedIn:true, user:{...action.payload} };\r\n    case LOGOUT_USER:\r\n      return { ...state, loggedIn:false, user:{} };\r\n    case AUTH_USER:\r\n      return {...state,loggedIn:true,user:{...action.payload}};\r\n    case AUTH_FAILED:\r\n      return {...state,loggedIn:false,user:{}};\r\n    case AUTH_SUCCESS:\r\n      return {...state,loggedIn:true};\r\n    default:\r\n      return state;\r\n  }\r\n}","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Status.js",["186","187","188","189","190","191","192"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Form, Select, Input, Button, Carousel, Image, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Status = () => {\r\n  const id = localStorage.getItem(\"username\");\r\n  //const [time,setTime] = React.useState(new Date().toLocaleString());\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const [data, setData] = React.useState({});\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/status/${department}`);\r\n    console.log(response.data);\r\n    let data = \"\";\r\n    if (response.data[0].status === 0) {\r\n      data = \"근무중\";\r\n    } else if (response.data[0].status === 1) {\r\n      data = \"부재중\";\r\n    } else {\r\n      data = \"기타내용 입력\";\r\n    }\r\n    setData({\r\n      modifier: response.data[0].modifier,\r\n      time: moment(response.data[0].time).add(9, \"hours\").format(\"LLL\"),\r\n    });\r\n    form.setFieldsValue({\r\n      department: response.data[0].department,\r\n      status: data,\r\n      comment: response.data[0].comment,\r\n      position: response.data[0].position,\r\n      phoneNumber: response.data[0].phoneNumber,\r\n      // time: time,\r\n    });\r\n  });\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n    console.log(Date().toLocaleDateString);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        // setTime(new Date().toLocaleString());\r\n        console.log(formData);\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (data) => {\r\n    data.modifier = localStorage.getItem(\"username\");\r\n    const response = await axios\r\n      .put(`https://mfam.site/status/${data.department}`, data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (form.getFieldValue(\"status\") === \"2\") {\r\n      setDisable(true);\r\n    } else {\r\n      setDisable(false);\r\n    }\r\n  }, [form.data]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(department);\r\n    if (department === \"\") return;\r\n    getData();\r\n  }, [department]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{department} 사무실 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468848-ae633580-221f-11eb-9afd-762834755b54.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468849-af946280-221f-11eb-975b-d12318fc58ad.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468851-b0c58f80-221f-11eb-9868-c9392a9bf029.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468853-b1f6bc80-221f-11eb-9928-35e67889354c.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item\r\n          label=\"학과\"\r\n          name=\"department\"\r\n          value={department}\r\n          style={{\r\n            width: \"0rem\",\r\n            height: \"0rem\",\r\n            visibility: \"hidden\",\r\n            margin: \"0\",\r\n          }}\r\n        >\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        {/* <Form.Item label=\"시간\" name=\"time\" value={time} style={{width:\"0rem\", height:\"0rem\" , visibility:\"hidden\", margin:\"0\"}}>\r\n          <Input readOnly=\"true\"/>\r\n        </Form.Item> */}\r\n        <Form.Item\r\n          label=\"이름\"\r\n          name=\"modifier\"\r\n          value={id}\r\n          style={{\r\n            width: \"0rem\",\r\n            height: \"0rem\",\r\n            visibility: \"hidden\",\r\n            margin: \"0\",\r\n          }}\r\n        >\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"위치\" name=\"position\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"전화번호\" name=\"phoneNumber\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"조교 부재여부\" name=\"status\" required>\r\n          <Select>\r\n            <Option value=\"0\">근무중</Option>\r\n            <Option value=\"1\">부재중</Option>\r\n            <Option value=\"2\">기타내용 입력</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          noStyle\r\n          shouldUpdate={(preValues, currentValues) =>\r\n            preValues.status !== currentValues.status\r\n          }\r\n        >\r\n          {({ getFieldValue }) => {\r\n            return form.getFieldValue(\"status\") === \"2\" ||\r\n              form.getFieldValue(\"status\") === \"기타내용 입력\" ? (\r\n              <Form.Item\r\n                label=\"기타내용\"\r\n                name=\"comment\"\r\n                rules={[\r\n                  { required: true, messsage: \"기타 내용을 입력해주세요\" },\r\n                ]}\r\n              >\r\n                <TextArea disabled={isDisable} style={{ resize: \"none\" }} />\r\n              </Form.Item>\r\n            ) : null;\r\n          }}\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Curriculum.js",["193","194","195","196","197","198","199","200","201","202"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Curriculum = () => {\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const [data, setData] = React.useState([]);\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\r\n      `https://mfam.site/curriculum/${department}`\r\n    );\r\n    console.log(response);\r\n    setData({\r\n      modifier: response.data[0].modifier,\r\n      time: moment(response.data[0].time).add(9, \"hours\").format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      department: response.data[0].department,\r\n      link: response.data[0].link,\r\n    });\r\n  }, [department]);\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    console.log(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (formData) => {\r\n    formData.modifier = localStorage.getItem(\"username\");\r\n    // formdata에 userid 추가\r\n    const response = await axios\r\n      .put(`https://mfam.site/curriculum/${formData.department}`, formData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n    // eslint-disable-next-line\r\n  }, [department, getData]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{department} 교과과정 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468769-55939d00-221f-11eb-9ead-db3cce00f58c.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468774-575d6080-221f-11eb-97ad-fe254308449e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468778-59272400-221f-11eb-95f0-4df3d930c7bb.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"링크\" name=\"link\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Curriculum;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Notice.js",["203","204","205","206","207","208","209","210","211","212"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Notice = () => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const [form] = Form.useForm();\r\n  const department = localStorage.getItem(\"department\");\r\n  const [data, setData] = React.useState([]);\r\n  const [isDisable, setDisable] = React.useState(true);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/notice/${department}`);\r\n    console.log(response);\r\n    setData({\r\n      modifier: response.data[0].modifier,\r\n      time: moment(response.data[0].time).add(9, \"hours\").format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      department: response.data[0].department,\r\n      link: response.data[0].link,\r\n    });\r\n  }, [department]);\r\n\r\n  const onChangeSelectFunc = React.useCallback((e) => {\r\n    console.log(form.getFieldValue(\"department\"));\r\n  }, []);\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinish(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinish = async (formData) => {\r\n    formData.modifier = name;\r\n    const response = await axios\r\n      .put(`https://mfam.site/notice/${formData.department}`, formData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, [department, getData]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{department} 공지 링크 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468604-8f17d880-221e-11eb-90fc-43a1acad45c6.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468606-90e19c00-221e-11eb-9dde-738e963f0458.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/98468607-9212c900-221e-11eb-8763-c018eebf650f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        onFieldsChange={onValuesChange}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"40rem\" }}\r\n      >\r\n        <Form.Item label=\"학과\" name=\"department\" value={department} required>\r\n          <Input readOnly={true} />\r\n        </Form.Item>\r\n        <Form.Item label=\"링크\" name=\"link\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier} 조교님\r\n          <br />({data.time})\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Welcome.js",["213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Welcome = (props) => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const department = localStorage.getItem(\"department\");\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const CancleModify = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n    formData.modifier = name;\r\n    const response = await axios\r\n      .put(`https://mfam.site/assistantNotice/${department}`, formData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n          setVisible(false);\r\n        } else {\r\n          toast.error(\"서버와의 에러가 발생했습니다!\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const loadContent = () => {\r\n    console.log(visible);\r\n    if (visible === true) {\r\n      return (\r\n        <Form\r\n          form={form}\r\n          onFinish={confirmFunc}\r\n          onFieldsChange={onValuesChange}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"content\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"내용을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <TextArea\r\n              style={{\r\n                fontSize: \"1rem\",\r\n                width: \"50rem\",\r\n                resize: \"none\",\r\n                padding: \"1rem\",\r\n                textAlign: \"center\",\r\n              }}\r\n              autoSize={true}\r\n              resize=\"none\"\r\n            />\r\n          </Form.Item>\r\n          <div style={{ marginBottom: \"1rem\" }} />\r\n          <Divider />\r\n          <p style={{ width: \"100%\", color: \"gray\", marginBottom: \"2rem\" }}>\r\n            수정 하시려면 수정하기 버튼을, 취소하려면 취소 버튼을 눌러주세요{\" \"}\r\n          </p>\r\n          <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n            <div style={{ display: \"inline-block\" }}>\r\n              <Button htmlType=\"submit\" style={{ margin: \"0 1rem\" }}>\r\n                수정하기\r\n              </Button>\r\n              <Button onClick={CancleModify} style={{ margin: \"0 1rem\" }}>\r\n                취소\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <TextArea\r\n            value={data.content}\r\n            style={{\r\n              fontSize: \"1rem\",\r\n              width: \"50rem\",\r\n              resize: \"none\",\r\n              padding: \"1rem\",\r\n              textAlign: \"center\",\r\n            }}\r\n            bordered={false}\r\n            autoSize={true}\r\n            readOnly={true}\r\n          />\r\n          <div style={{ marginBottom: \"1rem\" }} />\r\n          <Divider />\r\n          <p style={{ width: \"100%\", color: \"gray\" }}>\r\n            {data.modifier} 조교님\r\n            <br />({data.time})\r\n          </p>\r\n          <Button onClick={FormHandler}>수정하기</Button>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\r\n      `https://mfam.site/assistantNotice/${department}`\r\n    );\r\n    console.log(response);\r\n    setData({\r\n      content: response.data.result[0].content,\r\n      modifier: response.data.result[0].modifier,\r\n      time: moment(response.data.result[0].time).add(9, \"hours\").format(\"LLL\"),\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      content: response.data.result[0].content,\r\n    });\r\n  }, [department]);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>{department} 공지사항 </p>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          padding: \"2rem 2rem\",\r\n        }}\r\n      >\r\n        {loadContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Professor.js",["232","233","234","235"],"import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Professor = () => {\r\n  const [list, setlist] = React.useState([]);\r\n  const [form] = Form.useForm();\r\n  const [data, getData] = React.useState({});\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [nameCheck, setNameCheck] = React.useState(false);\r\n  const onFinishFunc = async (_data) => {\r\n    _data.modifier = localStorage.getItem(\"username\");\r\n    const response = await axios\r\n      .put(`https://mfam.site/professor/${inputValue}`, _data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    if (nameCheck === false) {\r\n      return toast.error(\"교수님 성함 입력 후 Seacrh 해주세요!\");\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChangeFunc = (name) => {\r\n    setNameCheck(false);\r\n    setInputValue(name);\r\n  };\r\n\r\n  const showModifier = () => {\r\n    return (\r\n      <p style={{ width: \"100%\", color: \"gray\" }}>\r\n        {data.modifier}\r\n        <br />\r\n        {data.time}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const onSearchFunc = async () => {\r\n    let name = inputValue;\r\n    if (name.length < 2) {\r\n      return toast.error(\"존재하지 않는 이름입니다.\");\r\n    }\r\n    const response = await axios\r\n      .get(`https://mfam.site/professor/${name}`)\r\n      .catch((error) => {\r\n        toast.error(\"에러가 났어요!\");\r\n      });\r\n    console.log(response);\r\n\r\n    if (response.data.length === 0) {\r\n      return toast.error(\"존재하지 않는 이름입니다.\");\r\n    }\r\n    toast.success(\"교수님 정보를 성공적으로 불러왔습니다.\");\r\n    setNameCheck(true);\r\n    getData({\r\n      modifier: response.data[0].modifier + \" 조교님\",\r\n      time:\r\n        \"(\" + moment(response.data[0].time).add(9, \"hours\").format(\"LLL\") + \")\",\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      class_position: response.data[0].class_position,\r\n      phone_number: response.data[0].phone_number,\r\n      email: response.data[0].email,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let p_list = [];\r\n    axios.get(`https://mfam.site/professor/`).then((res) => {\r\n      res.data.map((v, i) => {\r\n        p_list.push({ value: v.name });\r\n      });\r\n    });\r\n\r\n    setlist(p_list);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>교수님 연구실 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045727-22f9f380-25d5-11eb-8a36-a2135d9fb51d.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045910-5fc5ea80-25d5-11eb-8f68-7b071a52350e.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99045316-7cadee00-25d4-11eb-9b20-8c5bb4fbb247.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          margin: \"0 0 2rem 0\",\r\n          width: \"30rem\",\r\n        }}\r\n      >\r\n        <p style={{ width: \"5rem\" }}>성함:</p>\r\n        <AutoComplete\r\n          style={{ width: \"100%\", marginRight: \"1rem\" }}\r\n          options={list}\r\n          placeholder=\"교수님 성함을 입력해주세요\"\r\n          filterOption={(input, option) => option.value.indexOf(input) === 0}\r\n          onChange={onChangeFunc}\r\n        />\r\n        {/* <Input style={{ margin: \"0 4% 0 0\" }} onChange={onChangeFunc} /> */}\r\n        <Button icon={<SearchOutlined />} onClick={onSearchFunc}>\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"30rem\" }}\r\n      >\r\n        <Form.Item label=\"연구실\" name=\"class_position\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"전화번호\" name=\"phone_number\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"이메일\" name=\"email\" required>\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        {showModifier()}\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Professor;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Timetable.js",["236","237","238","239","240"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n  Divider,\r\n} from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { getDefaultNormalizer } from \"@testing-library/react\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Timetable = () => {\r\n  const name = localStorage.getItem(\"username\");\r\n  const [list, setlist] = React.useState([]);\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = React.useState({});\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [nameCheck, setNameCheck] = React.useState(false);\r\n\r\n  const confirmFunc = (formData) => {\r\n    if (nameCheck === false) {\r\n      return toast.error(\"강의실 이름을 Seacrh 해주세요!\");\r\n    }\r\n\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (data) => {\r\n    data.modifier = name;\r\n    console.log(data);\r\n    const response = await axios\r\n      .put(`https://mfam.site/timetable/${inputValue}`, data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        }\r\n        onSearchFunc();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const onChangeFunc = (name) => {\r\n    setNameCheck(false);\r\n    setInputValue(name);\r\n  };\r\n\r\n  const onSearchFunc = async () => {\r\n    let value = inputValue.replace(/(\\s*)/g, \"\"); // 띄어쓰기 제거\r\n    if (value.length < 3) {\r\n      return toast.error(\"존재하지 않는 강의실입니다.\");\r\n    }\r\n    const response = await axios\r\n      .get(`https://mfam.site/timetable/${value}`)\r\n      .catch((error) => {\r\n        toast.error(\"에러가 났어요!\");\r\n      });\r\n\r\n    console.log(response);\r\n    if (response.data.length === 0) {\r\n      return toast.error(\"존재하지 않는 강의실입니다.\");\r\n    } else {\r\n      toast.success(\"강의실 정보를 성공적으로 불러왔습니다.\");\r\n      setNameCheck(true);\r\n      setData({\r\n        modifier: response.data[0].modifier + \" 조교님\",\r\n        time:\r\n          \"(\" +\r\n          moment(response.data[0].time).add(9, \"hours\").format(\"LLL\") +\r\n          \")\",\r\n      });\r\n      form.setFieldsValue({\r\n        link: response.data[0].link,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let p_list = [];\r\n    axios.get(`https://mfam.site/timetable/`).then((res) => {\r\n      res.data.map((v, i) => {\r\n        p_list.push({ value: v.classname });\r\n      });\r\n    });\r\n\r\n    setlist(p_list);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>강의실 시간표 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046546-3eb1c980-25d6-11eb-91d1-9e65182a72cb.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046550-3fe2f680-25d6-11eb-8f35-49df97a88419.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99046554-41142380-25d6-11eb-8be4-b10796d051f3.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          margin: \"0 0 2rem 0\",\r\n          width: \"30rem\",\r\n        }}\r\n      >\r\n        <p style={{ width: \"5rem\" }}>강의실:</p>\r\n        <AutoComplete\r\n          style={{ width: \"100%\", marginRight: \"1rem\" }}\r\n          options={list}\r\n          placeholder=\"강의실을 입력해주세요\"\r\n          filterOption={(input, option) => option.value.indexOf(input) !== -1}\r\n          onChange={onChangeFunc}\r\n        />\r\n        <Button icon={<SearchOutlined />} onClick={onSearchFunc}>\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Form\r\n        form={form}\r\n        onFinish={confirmFunc}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"30rem\" }}\r\n      >\r\n        <Form.Item label=\"링크\" name=\"link\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <p style={{ width: \"100%\", color: \"gray\" }}>\r\n          {data.modifier}\r\n          <br />\r\n          {data.time}\r\n        </p>\r\n        <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={2500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timetable;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Userquestion.js",["241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270"],"import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Userquestionlist from \"./Userquestionlist\";\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Userquestion = (props) => {\r\n  const department = localStorage.getItem(\"department\");\r\n  const pageSize = parseInt(window.innerHeight / 50);\r\n  let count = 0;\r\n  const [size, setSize] = React.useState(0);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(1);\r\n  const num = data[0];\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = (count) => {\r\n    const _data = data.slice(\r\n      (count - 1) * pageSize,\r\n      (count - 1) * pageSize + pageSize\r\n    );\r\n    // data page에 따라 자르는 작업\r\n\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    return _data.map((it, i) => {\r\n      // 게시글 번호 계산\r\n\r\n      if (it.department === \"공통 질문\" || it.department === department) {\r\n        return (\r\n          <Userquestionlist\r\n            key={i}\r\n            data={it}\r\n            getData={getData}\r\n            setPage={setPage}\r\n            page={page}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n\r\n    const response = await axios\r\n      .post(`https://mfam.site/knowledgePlus`, formData)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          toast.success(\"질문을 등록했습니다!\");\r\n          setPage(1);\r\n          getData();\r\n          setVisible(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    //pagenum은 1,2,3,4 식으로 전송 됨.\r\n    setPage(pagenum);\r\n    getData();\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/question`);\r\n    response.data.map((i, it) => {\r\n      if (i.department === (\"공통 질문\" || department)) {\r\n        count += 1;\r\n      }\r\n    });\r\n    setData(response.data.reverse());\r\n    //setData(response.data.values.reverse());\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>유저들의 질문</p>\r\n      </div>\r\n      소융봇에서 제공하고 있지 않은 질문들에 대해서 유저들이 남긴 질문입니다.\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"5px 0\" }}>\r\n        <Link to=\"/question\">\r\n          <u>질문 수정페이지</u>\r\n        </Link>{\" \"}\r\n        에서 질문에 대한 답변을 올려주세요 😊\r\n      </div>\r\n      {/* {data.map((it,i)=>{\r\n        it.count=data.length-i;\r\n        it.props=props;\r\n        return(\r\n            <QuestionList key = {i} data={it} getData={getData}/>\r\n        )\r\n      })} */}\r\n      {PageRefresh(page)}\r\n      <div style={{ marginBottom: \"2rem\" }} />\r\n      <Pagination\r\n        current={page}\r\n        total={data.length}\r\n        defaultPageSize={pageSize}\r\n        onChange={onPageChange}\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Userquestion;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Question.js",["271","272","273","274","275","276","277","278","279","280","281","282","283","284"],"import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport QuestionList from \"./QuestionList\";\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst Question = (props) => {\r\n  const pageSize = parseInt(window.innerHeight / 100);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(1);\r\n  const num = data[0];\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = (num) => {\r\n    const _data = data.slice(\r\n      (num - 1) * pageSize,\r\n      (num - 1) * pageSize + pageSize\r\n    );\r\n    // data page에 따라 자르는 작업\r\n\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    return _data.map((it, i) => {\r\n      it.count = data.length - i - pageSize * (page - 1);\r\n      // 게시글 번호 계산\r\n\r\n      it.props = props;\r\n      return (\r\n        <QuestionList\r\n          key={i}\r\n          data={it}\r\n          getData={getData}\r\n          setPage={setPage}\r\n          page={page}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n    formData.modifier = localStorage.getItem(\"username\");\r\n    const response = await axios\r\n      .post(`https://mfam.site/knowledgePlus`, formData)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          toast.success(\"질문을 등록했습니다!\");\r\n          setPage(1);\r\n          getData();\r\n          setVisible(false);\r\n          form.setFieldsValue({\r\n            faqno: \"\",\r\n            category1: \"\",\r\n            category2: \"\",\r\n            category3: \"\",\r\n            category4: \"\",\r\n            question: \"\",\r\n            questionAnswer: \"\",\r\n            landingUrl: \"\",\r\n            imageinfo: \"\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    //pagenum은 1,2,3,4 식으로 전송 됨.\r\n    setPage(pagenum);\r\n    getData();\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/knowledgePlus`);\r\n    setData(response.data.reverse());\r\n    //setData(response.data.values.reverse());\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>질문 수정 페이지</p>\r\n      </div>\r\n      소융봇에서 제공 할 질문과 답변을 관리하는 페이지입니다.\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"5px 0\" }}>\r\n        <Link to=\"/userquestion\">\r\n          <u>유저들의 질문</u>\r\n        </Link>{\" \"}\r\n        에서 질문을 골라보세요 😊\r\n      </div>\r\n      {PageRefresh(page)}\r\n      <div style={{ marginBottom: \"2rem\" }} />\r\n      <Pagination\r\n        current={page}\r\n        total={data.length}\r\n        defaultPageSize={pageSize}\r\n        onChange={onPageChange}\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n      />\r\n      <Button onClick={FormHandler}>질문 추가</Button>\r\n      <Modal\r\n        title=\"질문추가\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        maskClosable={false}\r\n        footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n        width=\"40rem\"\r\n      >\r\n        <Form\r\n          form={form}\r\n          onFinish={onFinishFunc}\r\n          onFieldsChange={onValuesChange}\r\n          autoComplete=\"off\"\r\n          style={{ width: \"95%\", padding: \"0 5%\" }}\r\n        >\r\n          <Form.Item\r\n            label=\"질문\"\r\n            name=\"question\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"질문을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"답변\"\r\n            name=\"questionAnswer\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"답변을 입력해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"카테고리 1\"\r\n            name=\"category1\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"하나 이상의 카테고리를 설정해주세요\",\r\n              },\r\n            ]}\r\n            required\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 2\" name=\"category2\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 3\" name=\"category3\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 4\" name=\"category4\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"카테고리 5\" name=\"category5\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"답변링크\" name=\"landingUrl\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"이미지링크\" name=\"imageinfo\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item colon={false} wrapperCol={{ offset: 11 }}>\r\n            <Button\r\n              icon={<CloudUploadOutlined />}\r\n              htmlType=\"submit\"\r\n              style={{ margin: \"1rem 1rem 0 1rem\" }}\r\n            >\r\n              추가하기\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Bestqa.js",["285","286","287","288","289","290"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AutoComplete,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Carousel,\r\n  Image,\r\n} from \"antd\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst BestqaData = ({ data, key }) => {\r\n  const [form] = Form.useForm();\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"수정하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onFinishFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFunc = async (formData) => {\r\n    formData.modifier = localStorage.getItem(\"username\");\r\n\r\n    const response = await axios\r\n      .put(`https://mfam.site/bestqa/${data.id}`, formData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"수정 완료\",\r\n            showConfirmButton: false,\r\n            width: \"20rem\",\r\n            timer: 1500,\r\n          });\r\n        } else {\r\n          toast.error(\"서버와의 에러가 발생했습니다!\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"서버와의 에러가 발생했습니다!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <Form\r\n        initialValues={{ id: data.id, question: data.question }}\r\n        onFinish={confirmFunc}\r\n        autoComplete=\"off\"\r\n        form={form}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Form.Item label={`TOP ${data.id} `} name=\"question\">\r\n          <Input style={{ width: \"30vw\" }} />\r\n        </Form.Item>\r\n        <Form.Item colon={false} wrapperCol={{ span: 11, offset: 11 }}>\r\n          <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n            수정하기\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Bestqa = () => {\r\n  const [data, setData] = React.useState([]);\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(\"https://mfam.site/bestqa\");\r\n    console.log(response);\r\n    setData(response.data);\r\n  }, []);\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>자주 묻는 질문 수정 페이지</p>\r\n      </div>\r\n      <Carousel\r\n        style={{ width: \"50rem\", height: \"32rem\", margin: \"1rem 1rem 2rem\" }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047553-b502fb80-25d7-11eb-898a-7b1c46473b0f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047557-b6342880-25d7-11eb-8fcf-7256e6887d65.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047561-b7fdec00-25d7-11eb-87a3-9b443cd8be5a.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Image\r\n            src=\"https://user-images.githubusercontent.com/51112542/99047565-b9c7af80-25d7-11eb-852d-b6d83dd1012f.png\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n      {data.map((it, i) => {\r\n        return <BestqaData key={it.classname} data={it} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bestqa;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\DataModify.js",["291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318"],"import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Modal,\r\n  Pagination,\r\n  Image,\r\n  Carousel,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport DataModifylist from \"./DataModifyList\";\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\n\r\nconst DataModify = (props) => {\r\n  const department = localStorage.getItem(\"department\");\r\n  const pageSize = parseInt(window.innerHeight / 50);\r\n  let count = 0;\r\n  const [size, setSize] = React.useState(0);\r\n  // 한 페이지에 담을 데이터 수 (height에 따라 개수 다르게 설정)\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [page, setPage] = React.useState(1);\r\n  const num = data[0];\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const PageRefresh = (count) => {\r\n    const _data = data.slice(\r\n      (count - 1) * pageSize,\r\n      (count - 1) * pageSize + pageSize\r\n    );\r\n    // data page에 따라 자르는 작업\r\n\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // data 새로 불러올시 맨 위로 스크롤\r\n\r\n    return _data.map((it, i) => {\r\n      // 게시글 번호 계산\r\n\r\n      return (\r\n        <DataModifylist\r\n          key={i}\r\n          data={it}\r\n          count={data.length - i - pageSize * (page - 1)}\r\n          getData={getData}\r\n          setPage={setPage}\r\n          page={page}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  const onPageChange = (pagenum) => {\r\n    //pagenum은 1,2,3,4 식으로 전송 됨.\r\n    setPage(pagenum);\r\n    getData();\r\n  };\r\n\r\n  const getData = React.useCallback(async () => {\r\n    const response = await axios.get(`https://mfam.site/fixRequest`);\r\n\r\n    response.data.map((i, it) => {\r\n      count += 1;\r\n    });\r\n    setData(response.data.reverse());\r\n    //setData(response.data.values.reverse());\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"3% 10%\",\r\n        padding: \"1% 0%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        border: \"2px solid lightgray\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: \"30px\",\r\n          fontFamily: \"Gothic A1\",\r\n        }}\r\n      >\r\n        <p>유저들의 데이터 수정 요청</p>\r\n      </div>\r\n      데이터에 오류가 있는 질문들의 수정 요청입니다.\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"5px 0\" }}>\r\n        <Link to=\"/question\">\r\n          <u>질문 수정페이지</u>\r\n        </Link>{\" \"}\r\n        에서 질문에 대한 답변을 수정해주세요 😊\r\n      </div>\r\n      {/* {data.map((it,i)=>{\r\n        it.count=data.length-i;\r\n        it.props=props;\r\n        return(\r\n            <QuestionList key = {i} data={it} getData={getData}/>\r\n        )\r\n      })} */}\r\n      {PageRefresh(page)}\r\n      <div style={{ marginBottom: \"2rem\" }} />\r\n      <Pagination\r\n        current={page}\r\n        total={data.length}\r\n        defaultPageSize={pageSize}\r\n        onChange={onPageChange}\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataModify;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\components\\Menu.js",["319","320","321","322","323","324"],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\components\\Footer.js",["325","326","327","328","329","330"],"import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport oc from \"open-color\";\r\n\r\nconst Logo = styled.div`\r\n  font-size: 2rem;\r\n  letter-spacing: 3px;\r\n  color: white;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Positioner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${oc.gray[8]};\r\n  position: fixed;\r\n  height: 6.5%;\r\n  bottom: 0%;\r\n  width: 100%;\r\n  min-width: 800px;\r\n  z-index: 0;\r\n`;\r\n\r\nconst GradientBorder = styled.div`\r\n  height: 2px;\r\n  margin: 0rem 1rem 0 2rem;\r\n  border-radius: 5rem;\r\n  background: linear-gradient(to right, #a31432, #ffcccb);\r\n`;\r\n\r\nconst HeaderContents = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding-right: 3rem;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nconst Footer = ({ children }) => {\r\n  return (\r\n    <Positioner>\r\n      <HeaderContents>\r\n        <Logo>Footer TEST</Logo>\r\n        <Spacer />\r\n        <Logo>SYB</Logo>\r\n      </HeaderContents>\r\n    </Positioner>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\components\\Header.js",["331","332","333","334","335","336","337","338","339","340","341"],"import React, { Component, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutUser, authUser } from \"../actions/userAction\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport oc from \"open-color\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst Logo = styled.div`\r\n  font-size: 2.5rem;\r\n  letter-spacing: 15px;\r\n  color: white;\r\n  font-family: \"Rajdhani\";\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Positioner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #a31432;\r\n  position: fixed;\r\n  top: 0px;\r\n  width: 100%;\r\n  min-width: 800px;\r\n  z-index: 3;\r\n`;\r\n\r\nconst Logout = styled.div`\r\n  font-size: 1.2rem;\r\n  letter-spacing: 3px;\r\n  color: black;\r\n  font-family: \"Rajdhani\";\r\n  &:hover {\r\n    color: ${oc.gray[6]};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst GradientBorder = styled.div`\r\n  height: 10 px;\r\n  background: linear-gradient(to right, black, white);\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n  background-color: white;\r\n  padding: 0 2rem;\r\n  height: 70%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  border-radius: 55px;\r\n  border: 3px solid ${oc.red[8]};\r\n`;\r\n\r\nconst HeaderContents = styled.div`\r\n  width: 100%;\r\n  height: 75px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0 2rem;\r\n  padding-right: 3rem;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nfunction Header(props) {\r\n  const dispatch = useDispatch();\r\n  const username = localStorage.getItem(\"username\");\r\n  const dept = localStorage.getItem(\"department\");\r\n  const onClickHandler = () => {\r\n    dispatch(logoutUser());\r\n    localStorage.clear();\r\n    props.history.push(\"/\");\r\n  };\r\n  return (\r\n    <Positioner>\r\n      <HeaderContents>\r\n        <Logo>SYB ADMIN</Logo>\r\n        <Spacer />\r\n        <UserContainer>\r\n          <Logo\r\n            style={{\r\n              fontSize: \"1.2rem\",\r\n              letterSpacing: \"1px\",\r\n              paddingRight: \"3rem\",\r\n              fontFamily: \"Gothic A1\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            <UserOutlined\r\n              style={{\r\n                color: \"white\",\r\n                padding: \"5px\",\r\n                fontSize: \"1.5rem\",\r\n                marginRight: \"1rem\",\r\n                borderRadius: \"100%\",\r\n                backgroundColor: \"gray\",\r\n              }}\r\n            />\r\n            {dept}&emsp;\r\n            {username} 조교님\r\n          </Logo>\r\n          <Logout onClick={onClickHandler}>Logout</Logout>\r\n        </UserContainer>\r\n      </HeaderContents>\r\n      <GradientBorder />\r\n    </Positioner>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header); // withRouter 해야 'push'를 못찾는 에러 메세지 뜨지 않음\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\actions\\userAction.js",["342","343","344","345","346","347","348","349","350","351"],"import {\r\n  REGISTER_USER,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  AUTH_USER,\r\n  REGISTER_ERROR,\r\n  LOGIN_SUCCESS,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAILED,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport { request } from \"../utils/axios\";\r\n\r\nexport function registerUser(dataToSubmit) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: REGISTER_USER,\r\n    });\r\n\r\n    return axios\r\n      .post(\"https://mfam.site/auth/signup\", dataToSubmit)\r\n      .then((response) => response)\r\n      .catch((error) => error.response);\r\n  };\r\n}\r\n\r\n// export function loginUser(dataToSubmit) {\r\n//   const data = request(\"post\", \"/auth/login\", dataToSubmit);\r\n//   return {\r\n//       type: LOGIN_USER,\r\n//       payload: data,\r\n//   };\r\n// }\r\n\r\nexport function loginUser(dataToSubmit) {\r\n  const uid = dataToSubmit.userid;\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_USER,\r\n      payload: uid,\r\n    });\r\n\r\n    return axios\r\n      .post(\"https://mfam.site/auth/login\", dataToSubmit)\r\n      .then((response) => response)\r\n      .catch((error) => error.response);\r\n  };\r\n}\r\n\r\nexport function loginSuccess(accessToken) {\r\n  localStorage.setItem(\"user_token\", accessToken);\r\n  //axios.defaults.headers.common['Authorization'] = accessToken;\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n    });\r\n  };\r\n}\r\n\r\nexport function logoutUser() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGOUT_USER,\r\n    });\r\n  };\r\n}\r\n\r\nexport function authUser(props) {\r\n  const token = localStorage.getItem(\"user_token\");\r\n  const header = {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(\"https://mfam.site/auth/check\", header, { widthCredentials: true })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: AUTH_SUCCESS,\r\n        });\r\n\r\n        const department = dept(res.data.data.department);\r\n\r\n        localStorage.setItem(\"username\", res.data.data.username);\r\n        localStorage.setItem(\"department\", department);\r\n\r\n        return res.data.data;\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: AUTH_FAILED,\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nfunction dept(num) {\r\n  switch (num) {\r\n    case 0:\r\n      return \"컴퓨터공학과\";\r\n      break;\r\n    case 1:\r\n      return \"소프트웨어학과\";\r\n      break;\r\n    case 2:\r\n      return \"정보보호학과\";\r\n      break;\r\n    case 3:\r\n      return \"데이터사이언스학과\";\r\n      break;\r\n    case 4:\r\n      return \"지능기전공학부\";\r\n      break;\r\n    case 5:\r\n      return \"디자인이노베이션\";\r\n      break;\r\n    case 6:\r\n      return \"만화애니메이션텍\";\r\n      break;\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\actions\\types.js",[],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Userquestionlist.js",["352","353","354","355","356","357","358","359","360","361","362","363"],"import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col, Divider, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Userquestionlist = ({ data, getData, setPage, page }) => {\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://mfam.site/question/${data.idx}`, formData)\r\n      .catch((error) => {\r\n        return toast.error(\"에러가 났어요!\");\r\n        console.log(error);\r\n      });\r\n    setPage(page);\r\n    getData();\r\n    toast.success(\"질문을 삭제했습니다!\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ margin: \"2vh 0\" }} />\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col\r\n          flex={1}\r\n          style={{ textAlign: \"center\", width: \"15%\", fontWeight: \"bold\" }}\r\n        >\r\n          {data.department}\r\n        </Col>\r\n        <Col flex={8} style={{ marginLeft: \"2rem\", width: \"50%\" }}>\r\n          {data.content}\r\n        </Col>\r\n        <Col flex={2} style={{ width: \"15%\" }}>\r\n          {data.time}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button\r\n            onClick={confirmFunc}\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"red\", border: \"none\" }}\r\n          >\r\n            삭제하기\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Userquestionlist;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\QuestionList.js",["364","365","366","367","368","369","370","371","372"],"import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col, Divider, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst QuestionList = ({ data, getData, setPage, page }) => {\r\n  console.log(data);\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const num = data[0];\r\n  const FormHandler = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://mfam.site/knowledgePlus/${data.faqno}`, formData)\r\n      .catch((error) => {\r\n        return toast.error(\"에러가 났어요!\");\r\n        console.log(error);\r\n      });\r\n    setVisible(false);\r\n    setPage(page);\r\n    getData();\r\n    toast.success(\"질문을 삭제했습니다!\");\r\n  };\r\n\r\n  const onChangeFunc = async (formData) => {\r\n    // 공백 문자처리\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value === undefined || value === null || value === NaN) {\r\n        formData[key] = \"\";\r\n      }\r\n    }\r\n    formData.modifier = localStorage.getItem(\"username\");\r\n    const response = await axios\r\n      .put(`https://mfam.site/knowledgePlus/${data.faqno}`, formData)\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        if (res.status === 200) {\r\n          setVisible(false);\r\n          setPage(page);\r\n          getData();\r\n          toast.success(\"질문을 수정했습니다!\");\r\n        } else {\r\n          toast.error(\"에러가 났어요!\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"에러가 났어요!\");\r\n      });\r\n  };\r\n\r\n  const onValuesChange = (changedValue, allValue) => {\r\n    console.log(changedValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      faqno: data.faqno,\r\n      category1: data.category1,\r\n      category2: data.category2,\r\n      category3: data.category3,\r\n      category4: data.category4,\r\n      category5: data.category5,\r\n      question: data.question,\r\n      questionAnswer: data.questionAnswer,\r\n      landingUrl: data.landingUrl,\r\n      imageinfo: data.imageinfo,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Divider orientation=\"left\">{data.count}</Divider>\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col flex={9} style={{ marginLeft: \"2rem\", width: \"70%\" }}>\r\n          {data.question}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button onClick={FormHandler}>수정하기</Button>\r\n          <Modal\r\n            title=\"질문수정\"\r\n            visible={visible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            maskClosable={false}\r\n            footer={[null, null]} //ok와 cancel 버튼을 없애기 위함\r\n            width=\"40rem\"\r\n          >\r\n            <Form\r\n              form={form}\r\n              onFinish={onChangeFunc}\r\n              onFieldsChange={onValuesChange}\r\n              autoComplete=\"off\"\r\n              style={{ width: \"95%\", padding: \"0 5%\" }}\r\n            >\r\n              <Form.Item\r\n                label=\"질문\"\r\n                name=\"question\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"질문을 입력해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input initialvalues={data.question} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"답변\"\r\n                name=\"questionAnswer\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"답변을 입력해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input initialvalues={data.questionAnswer} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"카테고리 1\"\r\n                name=\"category1\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"하나 이상의 카테고리를 설정해주세요\",\r\n                  },\r\n                ]}\r\n                required\r\n              >\r\n                <Input initialvalues={data.category1} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 2\" name=\"category2\">\r\n                <Input initialvalues={data.category2} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 3\" name=\"category3\">\r\n                <Input initialvalues={data.category3} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 4\" name=\"category4\">\r\n                <Input initialvalues={data.category4} />\r\n              </Form.Item>\r\n              <Form.Item label=\"카테고리 5\" name=\"category5\">\r\n                <Input initialvalues={data.category5} />\r\n              </Form.Item>\r\n              <Form.Item label=\"답변링크\" name=\"landingUrl\">\r\n                <Input initialvalues={data.landingUrl} />\r\n              </Form.Item>\r\n              <Form.Item label=\"이미지링크\" name=\"imageinfo\">\r\n                <Input initialvalues={data.imageinfo} />\r\n              </Form.Item>\r\n              <Divider />\r\n              <p style={{ width: \"100%\", color: \"gray\" }}>\r\n                {data.modifier} 조교님\r\n                <br />({data.time})\r\n              </p>\r\n              <Form.Item colon={false} wrapperCol={{ span: 20, offset: 7 }}>\r\n                <Button icon={<CloudUploadOutlined />} htmlType=\"submit\">\r\n                  수정하기\r\n                </Button>\r\n                <Button\r\n                  icon={<ExclamationCircleOutlined />}\r\n                  type=\"primary\"\r\n                  onClick={confirmFunc}\r\n                  style={{\r\n                    backgroundColor: \"red\",\r\n                    color: \"white\",\r\n                    border: \"none\",\r\n                    marginLeft: \"3rem\",\r\n                  }}\r\n                >\r\n                  삭제하기\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionList;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\DataModifyList.js",["373","374","375","376","377","378","379","380","381","382","383","384"],"import React, { useEffect } from \"react\";\r\nimport { Form, Select, Input, Button, Row, Col, Divider, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst DataModifylist = ({ data, getData, setPage, page, count }) => {\r\n  const confirmFunc = (formData) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"네\",\r\n      cancelButtonText: \"아니요\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        onDeleteFunc(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDeleteFunc = async (formData) => {\r\n    const response = await axios\r\n      .delete(`https://mfam.site/fixRequest/${data.idx}`, formData)\r\n      .catch((error) => {\r\n        return toast.error(\"에러가 났어요!\");\r\n        console.log(error);\r\n      });\r\n    setPage(page);\r\n    getData();\r\n    toast.success(\"요청을 삭제했습니다!\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ margin: \"2vh 0\" }} />\r\n      <Row\r\n        justify=\"start\"\r\n        style={{\r\n          width: \"90%\",\r\n          border: \"1px solid lightgray\",\r\n          padding: \"0.8rem 0\",\r\n          margin: \"0 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <Col\r\n          flex={1}\r\n          style={{ paddingLeft: \"2rem\", width: \"5%\", fontWeight: \"bold\" }}\r\n        >\r\n          {count}\r\n        </Col>\r\n        <Col flex={8} style={{ paddingLeft: \"2rem\", width: \"60%\" }}>\r\n          {data.question}\r\n        </Col>\r\n        <Col flex={2} style={{ width: \"15%\" }}>\r\n          {data.time}\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Button\r\n            onClick={confirmFunc}\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"red\", border: \"none\" }}\r\n          >\r\n            삭제하기\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataModifylist;\r\n","C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\utils\\axios.js",[],"C:\\Users\\Jongmin\\Desktop\\Jongmin\\SYB-web\\src\\pages\\Adminpage.js",["385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405"],{"ruleId":"406","replacedBy":"407"},{"ruleId":"408","replacedBy":"409"},{"ruleId":"410","severity":1,"message":"411","line":1,"column":28,"nodeType":"412","messageId":"413","endLine":1,"endColumn":36},{"ruleId":"410","severity":1,"message":"414","line":3,"column":3,"nodeType":"412","messageId":"413","endLine":3,"endColumn":7},{"ruleId":"410","severity":1,"message":"415","line":6,"column":3,"nodeType":"412","messageId":"413","endLine":6,"endColumn":13},{"ruleId":"410","severity":1,"message":"416","line":1,"column":17,"nodeType":"412","messageId":"413","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"414","line":2,"column":10,"nodeType":"412","messageId":"413","endLine":2,"endColumn":14},{"ruleId":"410","severity":1,"message":"417","line":4,"column":3,"nodeType":"412","messageId":"413","endLine":4,"endColumn":15},{"ruleId":"410","severity":1,"message":"418","line":5,"column":3,"nodeType":"412","messageId":"413","endLine":5,"endColumn":7},{"ruleId":"410","severity":1,"message":"419","line":6,"column":3,"nodeType":"412","messageId":"413","endLine":6,"endColumn":9},{"ruleId":"410","severity":1,"message":"420","line":7,"column":3,"nodeType":"412","messageId":"413","endLine":7,"endColumn":8},{"ruleId":"410","severity":1,"message":"421","line":8,"column":3,"nodeType":"412","messageId":"413","endLine":8,"endColumn":9},{"ruleId":"410","severity":1,"message":"422","line":9,"column":3,"nodeType":"412","messageId":"413","endLine":9,"endColumn":11},{"ruleId":"410","severity":1,"message":"423","line":10,"column":3,"nodeType":"412","messageId":"413","endLine":10,"endColumn":8},{"ruleId":"410","severity":1,"message":"424","line":14,"column":8,"nodeType":"412","messageId":"413","endLine":14,"endColumn":14},{"ruleId":"410","severity":1,"message":"425","line":76,"column":9,"nodeType":"412","messageId":"413","endLine":76,"endColumn":17},{"ruleId":"410","severity":1,"message":"416","line":1,"column":17,"nodeType":"412","messageId":"413","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"426","line":4,"column":3,"nodeType":"412","messageId":"413","endLine":4,"endColumn":11},{"ruleId":"410","severity":1,"message":"427","line":5,"column":3,"nodeType":"412","messageId":"413","endLine":5,"endColumn":8},{"ruleId":"410","severity":1,"message":"428","line":6,"column":3,"nodeType":"412","messageId":"413","endLine":6,"endColumn":9},{"ruleId":"410","severity":1,"message":"429","line":7,"column":20,"nodeType":"412","messageId":"413","endLine":7,"endColumn":26},{"ruleId":"410","severity":1,"message":"430","line":11,"column":31,"nodeType":"412","messageId":"413","endLine":11,"endColumn":39},{"ruleId":"410","severity":1,"message":"431","line":14,"column":8,"nodeType":"412","messageId":"413","endLine":14,"endColumn":13},{"ruleId":"410","severity":1,"message":"432","line":15,"column":8,"nodeType":"412","messageId":"413","endLine":15,"endColumn":10},{"ruleId":"410","severity":1,"message":"433","line":19,"column":7,"nodeType":"412","messageId":"413","endLine":19,"endColumn":13},{"ruleId":"410","severity":1,"message":"434","line":55,"column":10,"nodeType":"412","messageId":"413","endLine":55,"endColumn":20},{"ruleId":"410","severity":1,"message":"435","line":55,"column":22,"nodeType":"412","messageId":"413","endLine":55,"endColumn":34},{"ruleId":"410","severity":1,"message":"416","line":1,"column":17,"nodeType":"412","messageId":"413","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"414","line":2,"column":10,"nodeType":"412","messageId":"413","endLine":2,"endColumn":14},{"ruleId":"410","severity":1,"message":"427","line":2,"column":16,"nodeType":"412","messageId":"413","endLine":2,"endColumn":21},{"ruleId":"410","severity":1,"message":"428","line":2,"column":23,"nodeType":"412","messageId":"413","endLine":2,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":2,"column":48,"nodeType":"412","messageId":"413","endLine":2,"endColumn":54},{"ruleId":"410","severity":1,"message":"436","line":8,"column":3,"nodeType":"412","messageId":"413","endLine":8,"endColumn":10},{"ruleId":"410","severity":1,"message":"437","line":9,"column":3,"nodeType":"412","messageId":"413","endLine":9,"endColumn":11},{"ruleId":"410","severity":1,"message":"438","line":11,"column":3,"nodeType":"412","messageId":"413","endLine":11,"endColumn":6},{"ruleId":"410","severity":1,"message":"439","line":12,"column":3,"nodeType":"412","messageId":"413","endLine":12,"endColumn":6},{"ruleId":"410","severity":1,"message":"430","line":13,"column":3,"nodeType":"412","messageId":"413","endLine":13,"endColumn":11},{"ruleId":"410","severity":1,"message":"440","line":18,"column":10,"nodeType":"412","messageId":"413","endLine":18,"endColumn":32},{"ruleId":"410","severity":1,"message":"433","line":25,"column":7,"nodeType":"412","messageId":"413","endLine":25,"endColumn":13},{"ruleId":"410","severity":1,"message":"441","line":51,"column":7,"nodeType":"412","messageId":"413","endLine":51,"endColumn":25},{"ruleId":"442","severity":1,"message":"443","line":201,"column":6,"nodeType":"444","endLine":201,"endColumn":8,"suggestions":"445"},{"ruleId":"410","severity":1,"message":"433","line":7,"column":7,"nodeType":"412","messageId":"413","endLine":7,"endColumn":13},{"ruleId":"446","severity":1,"message":"447","line":9,"column":1,"nodeType":"448","endLine":38,"endColumn":2},{"ruleId":"442","severity":1,"message":"449","line":30,"column":25,"nodeType":"450","endLine":30,"endColumn":49},{"ruleId":"410","severity":1,"message":"451","line":1,"column":73,"nodeType":"412","messageId":"413","endLine":1,"endColumn":86},{"ruleId":"446","severity":1,"message":"447","line":8,"column":1,"nodeType":"448","endLine":27,"endColumn":2},{"ruleId":"410","severity":1,"message":"452","line":5,"column":8,"nodeType":"412","messageId":"413","endLine":5,"endColumn":14},{"ruleId":"410","severity":1,"message":"453","line":7,"column":10,"nodeType":"412","messageId":"413","endLine":7,"endColumn":22},{"ruleId":"410","severity":1,"message":"433","line":13,"column":7,"nodeType":"412","messageId":"413","endLine":13,"endColumn":13},{"ruleId":"442","severity":1,"message":"454","line":25,"column":19,"nodeType":"455","endLine":25,"endColumn":36},{"ruleId":"410","severity":1,"message":"456","line":75,"column":11,"nodeType":"412","messageId":"413","endLine":75,"endColumn":19},{"ruleId":"442","severity":1,"message":"457","line":100,"column":6,"nodeType":"444","endLine":100,"endColumn":17,"suggestions":"458"},{"ruleId":"442","severity":1,"message":"459","line":106,"column":6,"nodeType":"444","endLine":106,"endColumn":18,"suggestions":"460"},{"ruleId":"410","severity":1,"message":"417","line":5,"column":3,"nodeType":"412","messageId":"413","endLine":5,"endColumn":15},{"ruleId":"410","severity":1,"message":"433","line":20,"column":7,"nodeType":"412","messageId":"413","endLine":20,"endColumn":13},{"ruleId":"410","severity":1,"message":"461","line":22,"column":7,"nodeType":"412","messageId":"413","endLine":22,"endColumn":13},{"ruleId":"410","severity":1,"message":"462","line":23,"column":9,"nodeType":"412","messageId":"413","endLine":23,"endColumn":17},{"ruleId":"410","severity":1,"message":"463","line":29,"column":10,"nodeType":"412","messageId":"413","endLine":29,"endColumn":19},{"ruleId":"410","severity":1,"message":"464","line":29,"column":21,"nodeType":"412","messageId":"413","endLine":29,"endColumn":31},{"ruleId":"442","severity":1,"message":"443","line":44,"column":6,"nodeType":"444","endLine":44,"endColumn":18,"suggestions":"465"},{"ruleId":"410","severity":1,"message":"466","line":46,"column":9,"nodeType":"412","messageId":"413","endLine":46,"endColumn":27},{"ruleId":"442","severity":1,"message":"443","line":48,"column":6,"nodeType":"444","endLine":48,"endColumn":8,"suggestions":"467"},{"ruleId":"410","severity":1,"message":"456","line":73,"column":11,"nodeType":"412","messageId":"413","endLine":73,"endColumn":19},{"ruleId":"410","severity":1,"message":"417","line":5,"column":3,"nodeType":"412","messageId":"413","endLine":5,"endColumn":15},{"ruleId":"410","severity":1,"message":"433","line":20,"column":7,"nodeType":"412","messageId":"413","endLine":20,"endColumn":13},{"ruleId":"410","severity":1,"message":"461","line":22,"column":7,"nodeType":"412","messageId":"413","endLine":22,"endColumn":13},{"ruleId":"410","severity":1,"message":"462","line":23,"column":9,"nodeType":"412","messageId":"413","endLine":23,"endColumn":17},{"ruleId":"410","severity":1,"message":"463","line":30,"column":10,"nodeType":"412","messageId":"413","endLine":30,"endColumn":19},{"ruleId":"410","severity":1,"message":"464","line":30,"column":21,"nodeType":"412","messageId":"413","endLine":30,"endColumn":31},{"ruleId":"442","severity":1,"message":"443","line":43,"column":6,"nodeType":"444","endLine":43,"endColumn":18,"suggestions":"468"},{"ruleId":"410","severity":1,"message":"466","line":45,"column":9,"nodeType":"412","messageId":"413","endLine":45,"endColumn":27},{"ruleId":"442","severity":1,"message":"443","line":47,"column":6,"nodeType":"444","endLine":47,"endColumn":8,"suggestions":"469"},{"ruleId":"410","severity":1,"message":"456","line":71,"column":11,"nodeType":"412","messageId":"413","endLine":71,"endColumn":19},{"ruleId":"410","severity":1,"message":"438","line":8,"column":3,"nodeType":"412","messageId":"413","endLine":8,"endColumn":6},{"ruleId":"410","severity":1,"message":"439","line":9,"column":3,"nodeType":"412","messageId":"413","endLine":9,"endColumn":6},{"ruleId":"410","severity":1,"message":"470","line":11,"column":3,"nodeType":"412","messageId":"413","endLine":11,"endColumn":8},{"ruleId":"410","severity":1,"message":"471","line":12,"column":3,"nodeType":"412","messageId":"413","endLine":12,"endColumn":13},{"ruleId":"410","severity":1,"message":"423","line":13,"column":3,"nodeType":"412","messageId":"413","endLine":13,"endColumn":8},{"ruleId":"410","severity":1,"message":"422","line":14,"column":3,"nodeType":"412","messageId":"413","endLine":14,"endColumn":11},{"ruleId":"410","severity":1,"message":"452","line":17,"column":8,"nodeType":"412","messageId":"413","endLine":17,"endColumn":14},{"ruleId":"410","severity":1,"message":"472","line":18,"column":10,"nodeType":"412","messageId":"413","endLine":18,"endColumn":24},{"ruleId":"410","severity":1,"message":"453","line":19,"column":10,"nodeType":"412","messageId":"413","endLine":19,"endColumn":22},{"ruleId":"410","severity":1,"message":"473","line":21,"column":10,"nodeType":"412","messageId":"413","endLine":21,"endColumn":29},{"ruleId":"410","severity":1,"message":"474","line":21,"column":31,"nodeType":"412","messageId":"413","endLine":21,"endColumn":46},{"ruleId":"410","severity":1,"message":"433","line":25,"column":7,"nodeType":"412","messageId":"413","endLine":25,"endColumn":13},{"ruleId":"410","severity":1,"message":"461","line":27,"column":7,"nodeType":"412","messageId":"413","endLine":27,"endColumn":13},{"ruleId":"410","severity":1,"message":"475","line":57,"column":9,"nodeType":"412","messageId":"413","endLine":57,"endColumn":17},{"ruleId":"410","severity":1,"message":"476","line":61,"column":9,"nodeType":"412","messageId":"413","endLine":61,"endColumn":21},{"ruleId":"477","severity":1,"message":"478","line":72,"column":52,"nodeType":"479","messageId":"480","endLine":72,"endColumn":65},{"ruleId":"410","severity":1,"message":"456","line":77,"column":11,"nodeType":"412","messageId":"413","endLine":77,"endColumn":19},{"ruleId":"442","severity":1,"message":"443","line":193,"column":6,"nodeType":"444","endLine":193,"endColumn":18,"suggestions":"481"},{"ruleId":"442","severity":1,"message":"459","line":197,"column":6,"nodeType":"444","endLine":197,"endColumn":8,"suggestions":"482"},{"ruleId":"410","severity":1,"message":"419","line":7,"column":3,"nodeType":"412","messageId":"413","endLine":7,"endColumn":9},{"ruleId":"410","severity":1,"message":"433","line":21,"column":7,"nodeType":"412","messageId":"413","endLine":21,"endColumn":13},{"ruleId":"410","severity":1,"message":"456","line":31,"column":11,"nodeType":"412","messageId":"413","endLine":31,"endColumn":19},{"ruleId":"483","severity":1,"message":"484","line":117,"column":27,"nodeType":"485","messageId":"486","endLine":117,"endColumn":29},{"ruleId":"410","severity":1,"message":"419","line":7,"column":3,"nodeType":"412","messageId":"413","endLine":7,"endColumn":9},{"ruleId":"410","severity":1,"message":"487","line":20,"column":10,"nodeType":"412","messageId":"413","endLine":20,"endColumn":30},{"ruleId":"410","severity":1,"message":"433","line":22,"column":7,"nodeType":"412","messageId":"413","endLine":22,"endColumn":13},{"ruleId":"410","severity":1,"message":"456","line":55,"column":11,"nodeType":"412","messageId":"413","endLine":55,"endColumn":19},{"ruleId":"483","severity":1,"message":"484","line":112,"column":27,"nodeType":"485","messageId":"486","endLine":112,"endColumn":29},{"ruleId":"410","severity":1,"message":"421","line":6,"column":3,"nodeType":"412","messageId":"413","endLine":6,"endColumn":9},{"ruleId":"410","severity":1,"message":"438","line":7,"column":3,"nodeType":"412","messageId":"413","endLine":7,"endColumn":6},{"ruleId":"410","severity":1,"message":"439","line":8,"column":3,"nodeType":"412","messageId":"413","endLine":8,"endColumn":6},{"ruleId":"410","severity":1,"message":"488","line":9,"column":3,"nodeType":"412","messageId":"413","endLine":9,"endColumn":10},{"ruleId":"410","severity":1,"message":"470","line":10,"column":3,"nodeType":"412","messageId":"413","endLine":10,"endColumn":8},{"ruleId":"410","severity":1,"message":"423","line":12,"column":3,"nodeType":"412","messageId":"413","endLine":12,"endColumn":8},{"ruleId":"410","severity":1,"message":"422","line":13,"column":3,"nodeType":"412","messageId":"413","endLine":13,"endColumn":11},{"ruleId":"410","severity":1,"message":"452","line":17,"column":8,"nodeType":"412","messageId":"413","endLine":17,"endColumn":14},{"ruleId":"410","severity":1,"message":"472","line":18,"column":10,"nodeType":"412","messageId":"413","endLine":18,"endColumn":24},{"ruleId":"410","severity":1,"message":"453","line":19,"column":10,"nodeType":"412","messageId":"413","endLine":19,"endColumn":22},{"ruleId":"410","severity":1,"message":"473","line":21,"column":10,"nodeType":"412","messageId":"413","endLine":21,"endColumn":29},{"ruleId":"410","severity":1,"message":"461","line":24,"column":7,"nodeType":"412","messageId":"413","endLine":24,"endColumn":13},{"ruleId":"410","severity":1,"message":"462","line":25,"column":9,"nodeType":"412","messageId":"413","endLine":25,"endColumn":17},{"ruleId":"410","severity":1,"message":"489","line":31,"column":10,"nodeType":"412","messageId":"413","endLine":31,"endColumn":14},{"ruleId":"410","severity":1,"message":"490","line":31,"column":16,"nodeType":"412","messageId":"413","endLine":31,"endColumn":23},{"ruleId":"410","severity":1,"message":"491","line":33,"column":10,"nodeType":"412","messageId":"413","endLine":33,"endColumn":14},{"ruleId":"410","severity":1,"message":"492","line":34,"column":10,"nodeType":"412","messageId":"413","endLine":34,"endColumn":17},{"ruleId":"410","severity":1,"message":"493","line":37,"column":9,"nodeType":"412","messageId":"413","endLine":37,"endColumn":12},{"ruleId":"410","severity":1,"message":"494","line":38,"column":9,"nodeType":"412","messageId":"413","endLine":38,"endColumn":20},{"ruleId":"410","severity":1,"message":"475","line":42,"column":9,"nodeType":"412","messageId":"413","endLine":42,"endColumn":17},{"ruleId":"410","severity":1,"message":"476","line":46,"column":9,"nodeType":"412","messageId":"413","endLine":46,"endColumn":21},{"ruleId":"483","severity":1,"message":"495","line":60,"column":30,"nodeType":"485","messageId":"496","endLine":60,"endColumn":32},{"ruleId":"410","severity":1,"message":"497","line":77,"column":9,"nodeType":"412","messageId":"413","endLine":77,"endColumn":21},{"ruleId":"477","severity":1,"message":"478","line":80,"column":52,"nodeType":"479","messageId":"480","endLine":80,"endColumn":65},{"ruleId":"410","severity":1,"message":"456","line":85,"column":11,"nodeType":"412","messageId":"413","endLine":85,"endColumn":19},{"ruleId":"410","severity":1,"message":"498","line":101,"column":9,"nodeType":"412","messageId":"413","endLine":101,"endColumn":23},{"ruleId":"483","severity":1,"message":"484","line":113,"column":31,"nodeType":"485","messageId":"486","endLine":113,"endColumn":33},{"ruleId":"410","severity":1,"message":"499","line":115,"column":9,"nodeType":"412","messageId":"413","endLine":115,"endColumn":14},{"ruleId":"442","severity":1,"message":"500","line":115,"column":18,"nodeType":"501","endLine":115,"endColumn":19},{"ruleId":"442","severity":1,"message":"459","line":124,"column":6,"nodeType":"444","endLine":124,"endColumn":8,"suggestions":"502"},{"ruleId":"410","severity":1,"message":"438","line":7,"column":3,"nodeType":"412","messageId":"413","endLine":7,"endColumn":6},{"ruleId":"410","severity":1,"message":"439","line":8,"column":3,"nodeType":"412","messageId":"413","endLine":8,"endColumn":6},{"ruleId":"410","severity":1,"message":"488","line":9,"column":3,"nodeType":"412","messageId":"413","endLine":9,"endColumn":10},{"ruleId":"410","severity":1,"message":"423","line":12,"column":3,"nodeType":"412","messageId":"413","endLine":12,"endColumn":8},{"ruleId":"410","severity":1,"message":"422","line":13,"column":3,"nodeType":"412","messageId":"413","endLine":13,"endColumn":11},{"ruleId":"410","severity":1,"message":"452","line":17,"column":8,"nodeType":"412","messageId":"413","endLine":17,"endColumn":14},{"ruleId":"410","severity":1,"message":"472","line":18,"column":10,"nodeType":"412","messageId":"413","endLine":18,"endColumn":24},{"ruleId":"410","severity":1,"message":"453","line":19,"column":10,"nodeType":"412","messageId":"413","endLine":19,"endColumn":22},{"ruleId":"410","severity":1,"message":"461","line":24,"column":7,"nodeType":"412","messageId":"413","endLine":24,"endColumn":13},{"ruleId":"410","severity":1,"message":"462","line":25,"column":9,"nodeType":"412","messageId":"413","endLine":25,"endColumn":17},{"ruleId":"410","severity":1,"message":"493","line":34,"column":9,"nodeType":"412","messageId":"413","endLine":34,"endColumn":12},{"ruleId":"477","severity":1,"message":"478","line":77,"column":52,"nodeType":"479","messageId":"480","endLine":77,"endColumn":65},{"ruleId":"410","severity":1,"message":"456","line":82,"column":11,"nodeType":"412","messageId":"413","endLine":82,"endColumn":19},{"ruleId":"442","severity":1,"message":"459","line":127,"column":6,"nodeType":"444","endLine":127,"endColumn":8,"suggestions":"503"},{"ruleId":"410","severity":1,"message":"411","line":1,"column":17,"nodeType":"412","messageId":"413","endLine":1,"endColumn":25},{"ruleId":"410","severity":1,"message":"417","line":4,"column":3,"nodeType":"412","messageId":"413","endLine":4,"endColumn":15},{"ruleId":"410","severity":1,"message":"419","line":6,"column":3,"nodeType":"412","messageId":"413","endLine":6,"endColumn":9},{"ruleId":"410","severity":1,"message":"433","line":18,"column":7,"nodeType":"412","messageId":"413","endLine":18,"endColumn":13},{"ruleId":"410","severity":1,"message":"456","line":41,"column":11,"nodeType":"412","messageId":"413","endLine":41,"endColumn":19},{"ruleId":"442","severity":1,"message":"459","line":111,"column":6,"nodeType":"444","endLine":111,"endColumn":8,"suggestions":"504"},{"ruleId":"410","severity":1,"message":"421","line":6,"column":3,"nodeType":"412","messageId":"413","endLine":6,"endColumn":9},{"ruleId":"410","severity":1,"message":"438","line":7,"column":3,"nodeType":"412","messageId":"413","endLine":7,"endColumn":6},{"ruleId":"410","severity":1,"message":"439","line":8,"column":3,"nodeType":"412","messageId":"413","endLine":8,"endColumn":6},{"ruleId":"410","severity":1,"message":"488","line":9,"column":3,"nodeType":"412","messageId":"413","endLine":9,"endColumn":10},{"ruleId":"410","severity":1,"message":"470","line":10,"column":3,"nodeType":"412","messageId":"413","endLine":10,"endColumn":8},{"ruleId":"410","severity":1,"message":"423","line":12,"column":3,"nodeType":"412","messageId":"413","endLine":12,"endColumn":8},{"ruleId":"410","severity":1,"message":"422","line":13,"column":3,"nodeType":"412","messageId":"413","endLine":13,"endColumn":11},{"ruleId":"410","severity":1,"message":"452","line":17,"column":8,"nodeType":"412","messageId":"413","endLine":17,"endColumn":14},{"ruleId":"410","severity":1,"message":"472","line":18,"column":10,"nodeType":"412","messageId":"413","endLine":18,"endColumn":24},{"ruleId":"410","severity":1,"message":"505","line":18,"column":26,"nodeType":"412","messageId":"413","endLine":18,"endColumn":31},{"ruleId":"410","severity":1,"message":"453","line":19,"column":10,"nodeType":"412","messageId":"413","endLine":19,"endColumn":22},{"ruleId":"410","severity":1,"message":"473","line":21,"column":10,"nodeType":"412","messageId":"413","endLine":21,"endColumn":29},{"ruleId":"410","severity":1,"message":"461","line":24,"column":7,"nodeType":"412","messageId":"413","endLine":24,"endColumn":13},{"ruleId":"410","severity":1,"message":"462","line":25,"column":9,"nodeType":"412","messageId":"413","endLine":25,"endColumn":17},{"ruleId":"410","severity":1,"message":"506","line":28,"column":9,"nodeType":"412","messageId":"413","endLine":28,"endColumn":19},{"ruleId":"410","severity":1,"message":"489","line":31,"column":10,"nodeType":"412","messageId":"413","endLine":31,"endColumn":14},{"ruleId":"410","severity":1,"message":"490","line":31,"column":16,"nodeType":"412","messageId":"413","endLine":31,"endColumn":23},{"ruleId":"410","severity":1,"message":"491","line":33,"column":10,"nodeType":"412","messageId":"413","endLine":33,"endColumn":14},{"ruleId":"410","severity":1,"message":"492","line":34,"column":10,"nodeType":"412","messageId":"413","endLine":34,"endColumn":17},{"ruleId":"410","severity":1,"message":"493","line":37,"column":9,"nodeType":"412","messageId":"413","endLine":37,"endColumn":12},{"ruleId":"410","severity":1,"message":"494","line":38,"column":9,"nodeType":"412","messageId":"413","endLine":38,"endColumn":20},{"ruleId":"410","severity":1,"message":"475","line":42,"column":9,"nodeType":"412","messageId":"413","endLine":42,"endColumn":17},{"ruleId":"410","severity":1,"message":"476","line":46,"column":9,"nodeType":"412","messageId":"413","endLine":46,"endColumn":21},{"ruleId":"410","severity":1,"message":"498","line":76,"column":9,"nodeType":"412","messageId":"413","endLine":76,"endColumn":23},{"ruleId":"483","severity":1,"message":"484","line":89,"column":31,"nodeType":"485","messageId":"486","endLine":89,"endColumn":33},{"ruleId":"410","severity":1,"message":"499","line":90,"column":7,"nodeType":"412","messageId":"413","endLine":90,"endColumn":12},{"ruleId":"442","severity":1,"message":"500","line":90,"column":16,"nodeType":"501","endLine":90,"endColumn":17},{"ruleId":"442","severity":1,"message":"459","line":98,"column":6,"nodeType":"444","endLine":98,"endColumn":8,"suggestions":"507"},{"ruleId":"410","severity":1,"message":"416","line":1,"column":17,"nodeType":"412","messageId":"413","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"427","line":4,"column":3,"nodeType":"412","messageId":"413","endLine":4,"endColumn":8},{"ruleId":"410","severity":1,"message":"428","line":6,"column":3,"nodeType":"412","messageId":"413","endLine":6,"endColumn":9},{"ruleId":"410","severity":1,"message":"429","line":7,"column":20,"nodeType":"412","messageId":"413","endLine":7,"endColumn":26},{"ruleId":"410","severity":1,"message":"474","line":11,"column":3,"nodeType":"412","messageId":"413","endLine":11,"endColumn":18},{"ruleId":"410","severity":1,"message":"508","line":58,"column":7,"nodeType":"412","messageId":"413","endLine":58,"endColumn":14},{"ruleId":"410","severity":1,"message":"416","line":1,"column":17,"nodeType":"412","messageId":"413","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"414","line":3,"column":10,"nodeType":"412","messageId":"413","endLine":3,"endColumn":14},{"ruleId":"410","severity":1,"message":"427","line":3,"column":16,"nodeType":"412","messageId":"413","endLine":3,"endColumn":21},{"ruleId":"410","severity":1,"message":"428","line":3,"column":23,"nodeType":"412","messageId":"413","endLine":3,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":3,"column":48,"nodeType":"412","messageId":"413","endLine":3,"endColumn":54},{"ruleId":"410","severity":1,"message":"509","line":29,"column":7,"nodeType":"412","messageId":"413","endLine":29,"endColumn":21},{"ruleId":"410","severity":1,"message":"416","line":1,"column":17,"nodeType":"412","messageId":"413","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"411","line":1,"column":28,"nodeType":"412","messageId":"413","endLine":1,"endColumn":36},{"ruleId":"410","severity":1,"message":"414","line":4,"column":3,"nodeType":"412","messageId":"413","endLine":4,"endColumn":7},{"ruleId":"410","severity":1,"message":"426","line":5,"column":3,"nodeType":"412","messageId":"413","endLine":5,"endColumn":11},{"ruleId":"410","severity":1,"message":"427","line":6,"column":3,"nodeType":"412","messageId":"413","endLine":6,"endColumn":8},{"ruleId":"410","severity":1,"message":"428","line":7,"column":3,"nodeType":"412","messageId":"413","endLine":7,"endColumn":9},{"ruleId":"410","severity":1,"message":"429","line":9,"column":20,"nodeType":"412","messageId":"413","endLine":9,"endColumn":26},{"ruleId":"410","severity":1,"message":"510","line":12,"column":22,"nodeType":"412","messageId":"413","endLine":12,"endColumn":30},{"ruleId":"410","severity":1,"message":"511","line":13,"column":24,"nodeType":"412","messageId":"413","endLine":13,"endColumn":36},{"ruleId":"410","severity":1,"message":"421","line":14,"column":10,"nodeType":"412","messageId":"413","endLine":14,"endColumn":16},{"ruleId":"410","severity":1,"message":"433","line":19,"column":7,"nodeType":"412","messageId":"413","endLine":19,"endColumn":13},{"ruleId":"410","severity":1,"message":"512","line":5,"column":3,"nodeType":"412","messageId":"413","endLine":5,"endColumn":12},{"ruleId":"410","severity":1,"message":"513","line":6,"column":3,"nodeType":"412","messageId":"413","endLine":6,"endColumn":17},{"ruleId":"410","severity":1,"message":"514","line":12,"column":10,"nodeType":"412","messageId":"413","endLine":12,"endColumn":17},{"ruleId":"515","severity":1,"message":"516","line":105,"column":7,"nodeType":"517","messageId":"518","endLine":105,"endColumn":13},{"ruleId":"515","severity":1,"message":"516","line":108,"column":7,"nodeType":"517","messageId":"518","endLine":108,"endColumn":13},{"ruleId":"515","severity":1,"message":"516","line":111,"column":7,"nodeType":"517","messageId":"518","endLine":111,"endColumn":13},{"ruleId":"515","severity":1,"message":"516","line":114,"column":7,"nodeType":"517","messageId":"518","endLine":114,"endColumn":13},{"ruleId":"515","severity":1,"message":"516","line":117,"column":7,"nodeType":"517","messageId":"518","endLine":117,"endColumn":13},{"ruleId":"515","severity":1,"message":"516","line":120,"column":7,"nodeType":"517","messageId":"518","endLine":120,"endColumn":13},{"ruleId":"515","severity":1,"message":"516","line":123,"column":7,"nodeType":"517","messageId":"518","endLine":123,"endColumn":13},{"ruleId":"410","severity":1,"message":"519","line":1,"column":17,"nodeType":"412","messageId":"413","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"418","line":2,"column":10,"nodeType":"412","messageId":"413","endLine":2,"endColumn":14},{"ruleId":"410","severity":1,"message":"419","line":2,"column":16,"nodeType":"412","messageId":"413","endLine":2,"endColumn":22},{"ruleId":"410","severity":1,"message":"420","line":2,"column":24,"nodeType":"412","messageId":"413","endLine":2,"endColumn":29},{"ruleId":"410","severity":1,"message":"470","line":2,"column":58,"nodeType":"412","messageId":"413","endLine":2,"endColumn":63},{"ruleId":"410","severity":1,"message":"452","line":4,"column":8,"nodeType":"412","messageId":"413","endLine":4,"endColumn":14},{"ruleId":"410","severity":1,"message":"453","line":6,"column":10,"nodeType":"412","messageId":"413","endLine":6,"endColumn":22},{"ruleId":"410","severity":1,"message":"473","line":9,"column":3,"nodeType":"412","messageId":"413","endLine":9,"endColumn":22},{"ruleId":"410","severity":1,"message":"520","line":10,"column":3,"nodeType":"412","messageId":"413","endLine":10,"endColumn":28},{"ruleId":"410","severity":1,"message":"433","line":15,"column":7,"nodeType":"412","messageId":"413","endLine":15,"endColumn":13},{"ruleId":"410","severity":1,"message":"456","line":35,"column":11,"nodeType":"412","messageId":"413","endLine":35,"endColumn":19},{"ruleId":"515","severity":1,"message":"516","line":39,"column":9,"nodeType":"521","messageId":"518","endLine":39,"endColumn":28},{"ruleId":"410","severity":1,"message":"419","line":2,"column":16,"nodeType":"412","messageId":"413","endLine":2,"endColumn":22},{"ruleId":"410","severity":1,"message":"452","line":4,"column":8,"nodeType":"412","messageId":"413","endLine":4,"endColumn":14},{"ruleId":"410","severity":1,"message":"453","line":6,"column":10,"nodeType":"412","messageId":"413","endLine":6,"endColumn":22},{"ruleId":"410","severity":1,"message":"433","line":15,"column":7,"nodeType":"412","messageId":"413","endLine":15,"endColumn":13},{"ruleId":"410","severity":1,"message":"493","line":21,"column":9,"nodeType":"412","messageId":"413","endLine":21,"endColumn":12},{"ruleId":"410","severity":1,"message":"456","line":51,"column":11,"nodeType":"412","messageId":"413","endLine":51,"endColumn":19},{"ruleId":"515","severity":1,"message":"516","line":55,"column":9,"nodeType":"521","messageId":"518","endLine":55,"endColumn":28},{"ruleId":"477","severity":1,"message":"478","line":66,"column":52,"nodeType":"479","messageId":"480","endLine":66,"endColumn":65},{"ruleId":"410","severity":1,"message":"456","line":71,"column":11,"nodeType":"412","messageId":"413","endLine":71,"endColumn":19},{"ruleId":"410","severity":1,"message":"519","line":1,"column":17,"nodeType":"412","messageId":"413","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"418","line":2,"column":10,"nodeType":"412","messageId":"413","endLine":2,"endColumn":14},{"ruleId":"410","severity":1,"message":"419","line":2,"column":16,"nodeType":"412","messageId":"413","endLine":2,"endColumn":22},{"ruleId":"410","severity":1,"message":"420","line":2,"column":24,"nodeType":"412","messageId":"413","endLine":2,"endColumn":29},{"ruleId":"410","severity":1,"message":"470","line":2,"column":58,"nodeType":"412","messageId":"413","endLine":2,"endColumn":63},{"ruleId":"410","severity":1,"message":"452","line":4,"column":8,"nodeType":"412","messageId":"413","endLine":4,"endColumn":14},{"ruleId":"410","severity":1,"message":"453","line":6,"column":10,"nodeType":"412","messageId":"413","endLine":6,"endColumn":22},{"ruleId":"410","severity":1,"message":"473","line":9,"column":3,"nodeType":"412","messageId":"413","endLine":9,"endColumn":22},{"ruleId":"410","severity":1,"message":"520","line":10,"column":3,"nodeType":"412","messageId":"413","endLine":10,"endColumn":28},{"ruleId":"410","severity":1,"message":"433","line":15,"column":7,"nodeType":"412","messageId":"413","endLine":15,"endColumn":13},{"ruleId":"410","severity":1,"message":"456","line":35,"column":11,"nodeType":"412","messageId":"413","endLine":35,"endColumn":19},{"ruleId":"515","severity":1,"message":"516","line":39,"column":9,"nodeType":"521","messageId":"518","endLine":39,"endColumn":28},{"ruleId":"410","severity":1,"message":"522","line":2,"column":8,"nodeType":"412","messageId":"413","endLine":2,"endColumn":14},{"ruleId":"410","severity":1,"message":"418","line":4,"column":3,"nodeType":"412","messageId":"413","endLine":4,"endColumn":7},{"ruleId":"410","severity":1,"message":"421","line":7,"column":3,"nodeType":"412","messageId":"413","endLine":7,"endColumn":9},{"ruleId":"410","severity":1,"message":"438","line":8,"column":3,"nodeType":"412","messageId":"413","endLine":8,"endColumn":6},{"ruleId":"410","severity":1,"message":"439","line":9,"column":3,"nodeType":"412","messageId":"413","endLine":9,"endColumn":6},{"ruleId":"410","severity":1,"message":"488","line":10,"column":3,"nodeType":"412","messageId":"413","endLine":10,"endColumn":10},{"ruleId":"410","severity":1,"message":"470","line":11,"column":3,"nodeType":"412","messageId":"413","endLine":11,"endColumn":8},{"ruleId":"410","severity":1,"message":"471","line":12,"column":3,"nodeType":"412","messageId":"413","endLine":12,"endColumn":13},{"ruleId":"410","severity":1,"message":"423","line":13,"column":3,"nodeType":"412","messageId":"413","endLine":13,"endColumn":8},{"ruleId":"410","severity":1,"message":"422","line":14,"column":3,"nodeType":"412","messageId":"413","endLine":14,"endColumn":11},{"ruleId":"410","severity":1,"message":"431","line":16,"column":8,"nodeType":"412","messageId":"413","endLine":16,"endColumn":13},{"ruleId":"410","severity":1,"message":"452","line":17,"column":8,"nodeType":"412","messageId":"413","endLine":17,"endColumn":14},{"ruleId":"410","severity":1,"message":"472","line":18,"column":10,"nodeType":"412","messageId":"413","endLine":18,"endColumn":24},{"ruleId":"410","severity":1,"message":"505","line":18,"column":26,"nodeType":"412","messageId":"413","endLine":18,"endColumn":31},{"ruleId":"410","severity":1,"message":"453","line":19,"column":10,"nodeType":"412","messageId":"413","endLine":19,"endColumn":22},{"ruleId":"410","severity":1,"message":"473","line":21,"column":10,"nodeType":"412","messageId":"413","endLine":21,"endColumn":29},{"ruleId":"410","severity":1,"message":"474","line":21,"column":31,"nodeType":"412","messageId":"413","endLine":21,"endColumn":46},{"ruleId":"410","severity":1,"message":"433","line":25,"column":7,"nodeType":"412","messageId":"413","endLine":25,"endColumn":13},{"ruleId":"410","severity":1,"message":"461","line":27,"column":7,"nodeType":"412","messageId":"413","endLine":27,"endColumn":13},{"ruleId":"410","severity":1,"message":"462","line":28,"column":9,"nodeType":"412","messageId":"413","endLine":28,"endColumn":17},{"ruleId":"410","severity":1,"message":"506","line":32,"column":9,"nodeType":"412","messageId":"413","endLine":32,"endColumn":19},"no-native-reassign",["523"],"no-negated-in-lhs",["524"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'withRouter' is defined but never used.","'Component' is defined but never used.","'AutoComplete' is defined but never used.","'Form' is defined but never used.","'Select' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Carousel' is defined but never used.","'Image' is defined but never used.","'Footer' is defined but never used.","'userdata' is assigned a value but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Router' is defined but never used.","'Checkbox' is defined but never used.","'axios' is defined but never used.","'oc' is defined but never used.","'MySwal' is assigned a value but never used.","'_studentid' is assigned a value but never used.","'setStudentId' is assigned a value but never used.","'Tooltip' is defined but never used.","'Cascader' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'QuestionCircleOutlined' is defined but never used.","'AutoCompleteOption' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'form'. Either include it or remove the dependency array.","ArrayExpression",["525"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assignments to the '_data' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'LOGIN_SUCCESS' is defined but never used.","'styled' is defined but never used.","'FormInstance' is defined but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'response' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["526"],"React Hook React.useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["527"],"'Option' is assigned a value but never used.","'TextArea' is assigned a value but never used.","'isDisable' is assigned a value but never used.","'setDisable' is assigned a value but never used.",["528"],"'onChangeSelectFunc' is assigned a value but never used.",["529"],["530"],["531"],"'Modal' is defined but never used.","'Pagination' is defined but never used.","'ToastContainer' is defined but never used.","'CloudUploadOutlined' is defined but never used.","'LoadingOutlined' is defined but never used.","'handleOk' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN",["532"],["533"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getDefaultNormalizer' is defined but never used.","'Divider' is defined but never used.","'size' is assigned a value but never used.","'setSize' is assigned a value but never used.","'form' is assigned a value but never used.","'visible' is assigned a value but never used.","'num' is assigned a value but never used.","'FormHandler' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'onFinishFunc' is assigned a value but never used.","'onValuesChange' is assigned a value but never used.","'count' is assigned a value but never used.","Assignments to the 'count' variable from inside React Hook React.useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useCallback.","Literal",["534"],["535"],["536"],"'toast' is defined but never used.","'department' is assigned a value but never used.",["537"],"'history' is assigned a value but never used.","'GradientBorder' is assigned a value but never used.","'authUser' is defined but never used.","'LockOutlined' is defined but never used.","'AUTH_USER' is defined but never used.","'REGISTER_ERROR' is defined but never used.","'request' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'useEffect' is defined but never used.","'ExclamationCircleOutlined' is defined but never used.","ExpressionStatement","'moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"538","fix":"546"},{"desc":"544","fix":"547"},{"desc":"538","fix":"548"},{"desc":"544","fix":"549"},{"desc":"550","fix":"551"},{"desc":"550","fix":"552"},{"desc":"550","fix":"553"},{"desc":"550","fix":"554"},{"desc":"550","fix":"555"},"Update the dependencies array to be: [form]",{"range":"556","text":"557"},"Update the dependencies array to be: [form, form.data]",{"range":"558","text":"559"},"Update the dependencies array to be: [department, getData]",{"range":"560","text":"561"},"Update the dependencies array to be: [department, form]",{"range":"562","text":"563"},{"range":"564","text":"557"},{"range":"565","text":"563"},{"range":"566","text":"557"},{"range":"567","text":"563"},"Update the dependencies array to be: [getData]",{"range":"568","text":"569"},{"range":"570","text":"569"},{"range":"571","text":"569"},{"range":"572","text":"569"},{"range":"573","text":"569"},[4748,4750],"[form]",[3074,3085],"[form, form.data]",[3205,3217],"[department, getData]",[1238,1250],"[department, form]",[1370,1372],[1266,1278],[1398,1400],[5204,5216],[5270,5272],"[getData]",[3139,3141],[3214,3216],[2884,2886],[2388,2390]]